(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var o,a,s=t[0],c=t[1],l=t[2],d=0,f=[];d<s.length;d++)a=s[d],Object.prototype.hasOwnProperty.call(r,a)&&r[a]&&f.push(r[a][0]),r[a]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(e[o]=c[o]);for(u&&u(t);f.length;)f.shift()();return i.push.apply(i,l||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],o=!0,s=1;s<n.length;s++){var c=n[s];0!==r[c]&&(o=!1)}o&&(i.splice(t--,1),e=a(a.s=n[0]))}return e}var o={},r={1:0},i=[];function a(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var o=new Promise((function(t,o){n=r[e]=[t,o]}));t.push(n[2]=o);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(e){return a.p+"assets/js/"+({}[e]||e)+"."+{2:"21acd374",3:"05d9e3d1",4:"5cd4e4a0",5:"6963c84c",6:"968c913c",7:"32bbf1d5",8:"1e20a004",9:"1c4af3ea",10:"000077b3",11:"6dd09d04",12:"37b30b69",13:"ad7de86f",14:"a00d9598",15:"42df158d",16:"df2c0260",17:"dba06daa",18:"7fc5458a",19:"c4fa6250",20:"0b96560b",21:"d7c7eff0",22:"8f83455e",23:"8bbbfd05",24:"aacef8b0",25:"4903a1e1",26:"11b37981",27:"8073f23c",28:"d5d1f59b",29:"456c9b19",30:"cc4add3f",31:"770a86b2",32:"a9b98a76",33:"c8010833",34:"4fbad243",35:"24f4ad8c",36:"c804dbca",37:"b56d2734",38:"7f263fe0",39:"09435313",40:"28568284",41:"290ca089",42:"329856b4",43:"ba7d8440",44:"22e19f51",45:"1b37639d",46:"a4d8d06e",47:"60b06a78",48:"e4f9c549",49:"aca07b52",50:"16165b1c",51:"45de7125",52:"9dc55b01",53:"be08591d",54:"80c09733",55:"c2dd2b71",56:"52a5b541",57:"2a4ab15d",58:"d8bef308",59:"c43cab13",60:"c3193d73",61:"885fc2b6",62:"db5c2eb0",63:"79b2c999",64:"b1ba98ab",65:"acf35a0a",66:"3650f722",67:"d214d45e"}[e]+".js"}(e);var c=new Error;i=function(t){s.onerror=s.onload=null,clearTimeout(l);var n=r[e];if(0!==n){if(n){var o=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;c.message="Loading chunk "+e+" failed.\n("+o+": "+i+")",c.name="ChunkLoadError",c.type=o,c.request=i,n[1](c)}r[e]=void 0}};var l=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(t)},a.m=e,a.c=o,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)a.d(n,o,function(t){return e[t]}.bind(null,o));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/cadence/",a.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var u=c;i.push([194,0]),n()}([function(e,t,n){var o=n(2),r=n(23).f,i=n(14),a=n(11),s=n(83),c=n(127),l=n(79);e.exports=function(e,t){var n,u,d,f,h,p=e.target,m=e.global,v=e.stat;if(n=m?o:v?o[p]||s(p,{}):(o[p]||{}).prototype)for(u in t){if(f=t[u],d=e.noTargetGet?(h=r(n,u))&&h.value:n[u],!l(m?u:p+(v?".":"#")+u,e.forced)&&void 0!==d){if(typeof f==typeof d)continue;c(f,d)}(e.sham||d&&d.sham)&&i(f,"sham",!0),a(n,u,f,e)}}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof global&&global)||Function("return this")()},function(e,t,n){var o=n(2),r=n(82),i=n(7),a=n(54),s=n(85),c=n(120),l=r("wks"),u=o.Symbol,d=c?u:u&&u.withoutSetter||a;e.exports=function(e){return i(l,e)||(s&&i(u,e)?l[e]=u[e]:l[e]=d("Symbol."+e)),l[e]}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var o=n(1);e.exports=!o((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,n){var o=n(4);e.exports=function(e){if(!o(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){"use strict";function o(e,t,n,o,r,i,a,s){var c,l="function"==typeof e?e.options:e;if(t&&(l.render=t,l.staticRenderFns=n,l._compiled=!0),o&&(l.functional=!0),i&&(l._scopeId="data-v-"+i),a?(c=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),r&&r.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(a)},l._ssrRegister=c):r&&(c=s?function(){r.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:r),c)if(l.functional){l._injectStyles=c;var u=l.render;l.render=function(e,t){return c.call(t),u(e,t)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,c):[c]}return{exports:e,options:l}}n.d(t,"a",(function(){return o}))},function(e,t,n){var o=n(5),r=n(119),i=n(6),a=n(36),s=Object.defineProperty;t.f=o?s:function(e,t,n){if(i(e),t=a(t,!0),i(n),r)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var o=n(93),r=n(11),i=n(207);o||r(Object.prototype,"toString",i,{unsafe:!0})},function(e,t,n){var o=n(2),r=n(14),i=n(7),a=n(83),s=n(88),c=n(32),l=c.get,u=c.enforce,d=String(String).split("String");(e.exports=function(e,t,n,s){var c=!!s&&!!s.unsafe,l=!!s&&!!s.enumerable,f=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof t||i(n,"name")||r(n,"name",t),u(n).source=d.join("string"==typeof t?t:"")),e!==o?(c?!f&&e[t]&&(l=!0):delete e[t],l?e[t]=n:r(e,t,n)):l?e[t]=n:a(t,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&l(this).source||s(this)}))},function(e,t,n){var o=n(56),r=Math.min;e.exports=function(e){return e>0?r(o(e),9007199254740991):0}},function(e,t,n){var o=n(35),r=n(20);e.exports=function(e){return o(r(e))}},function(e,t,n){var o=n(5),r=n(9),i=n(37);e.exports=o?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var o=n(20);e.exports=function(e){return Object(o(e))}},function(e,t){var n=Array.isArray;e.exports=n},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var o=n(5),r=n(1),i=n(7),a=Object.defineProperty,s={},c=function(e){throw e};e.exports=function(e,t){if(i(s,e))return s[e];t||(t={});var n=[][e],l=!!i(t,"ACCESSORS")&&t.ACCESSORS,u=i(t,0)?t[0]:c,d=i(t,1)?t[1]:void 0;return s[e]=!!n&&!r((function(){if(l&&!o)return!0;var e={length:-1};l?a(e,1,{enumerable:!0,get:c}):e[1]=1,n.call(e,u,d)}))}},function(e,t,n){var o=n(158),r="object"==typeof self&&self&&self.Object===Object&&self,i=o||r||Function("return this")();e.exports=i},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t,n){"use strict";var o=n(0),r=n(30).filter,i=n(60),a=n(18),s=i("filter"),c=a("filter");o({target:"Array",proto:!0,forced:!s||!c},{filter:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var o=n(125),r=n(2),i=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?i(o[e])||i(r[e]):o[e]&&o[e][t]||r[e]&&r[e][t]}},function(e,t,n){var o=n(5),r=n(89),i=n(37),a=n(13),s=n(36),c=n(7),l=n(119),u=Object.getOwnPropertyDescriptor;t.f=o?u:function(e,t){if(e=a(e),t=s(t,!0),l)try{return u(e,t)}catch(e){}if(c(e,t))return i(!r.f.call(e,t),e[t])}},function(e,t,n){"use strict";var o=n(0),r=n(62);o({target:"RegExp",proto:!0,forced:/./.exec!==r},{exec:r})},function(e,t){e.exports=!1},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,n){var o=n(232),r=n(235);e.exports=function(e,t){var n=r(e,t);return o(n)?n:void 0}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){var o,r=n(6),i=n(121),a=n(87),s=n(38),c=n(124),l=n(84),u=n(57),d=u("IE_PROTO"),f=function(){},h=function(e){return"<script>"+e+"<\/script>"},p=function(){try{o=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;p=o?function(e){e.write(h("")),e.close();var t=e.parentWindow.Object;return e=null,t}(o):((t=l("iframe")).style.display="none",c.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(h("document.F=Object")),e.close(),e.F);for(var n=a.length;n--;)delete p.prototype[a[n]];return p()};s[d]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(f.prototype=r(e),n=new f,f.prototype=null,n[d]=e):n=p(),void 0===t?n:i(n,t)}},function(e,t,n){var o=n(59),r=n(35),i=n(15),a=n(12),s=n(142),c=[].push,l=function(e){var t=1==e,n=2==e,l=3==e,u=4==e,d=6==e,f=5==e||d;return function(h,p,m,v){for(var g,y,w=i(h),b=r(w),k=o(p,m,3),x=a(b.length),S=0,T=v||s,C=t?T(h,x):n?T(h,0):void 0;x>S;S++)if((f||S in b)&&(y=k(g=b[S],S,w),e))if(t)C[S]=y;else if(y)switch(e){case 3:return!0;case 5:return g;case 6:return S;case 2:c.call(C,g)}else if(u)return!1;return d?-1:l||u?u:C}};e.exports={forEach:l(0),map:l(1),filter:l(2),some:l(3),every:l(4),find:l(5),findIndex:l(6)}},function(e,t,n){"use strict";var o=n(143).charAt,r=n(32),i=n(126),a=r.set,s=r.getterFor("String Iterator");i(String,"String",(function(e){a(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=s(this),n=t.string,r=t.index;return r>=n.length?{value:void 0,done:!0}:(e=o(n,r),t.index+=e.length,{value:e,done:!1})}))},function(e,t,n){var o,r,i,a=n(195),s=n(2),c=n(4),l=n(14),u=n(7),d=n(57),f=n(38),h=s.WeakMap;if(a){var p=new h,m=p.get,v=p.has,g=p.set;o=function(e,t){return g.call(p,e,t),t},r=function(e){return m.call(p,e)||{}},i=function(e){return v.call(p,e)}}else{var y=d("state");f[y]=!0,o=function(e,t){return l(e,y,t),t},r=function(e){return u(e,y)?e[y]:{}},i=function(e){return u(e,y)}}e.exports={set:o,get:r,has:i,enforce:function(e){return i(e)?r(e):o(e,{})},getterFor:function(e){return function(t){var n;if(!c(t)||(n=r(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){var o=n(44),r=n(217),i=n(218),a=o?o.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":a&&a in Object(e)?r(e):i(e)}},function(e,t,n){"use strict";var o=n(13),r=n(81),i=n(39),a=n(32),s=n(126),c=a.set,l=a.getterFor("Array Iterator");e.exports=s(Array,"Array",(function(e,t){c(this,{type:"Array Iterator",target:o(e),index:0,kind:t})}),(function(){var e=l(this),t=e.target,n=e.kind,o=e.index++;return!t||o>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:o,done:!1}:"values"==n?{value:t[o],done:!1}:{value:[o,t[o]],done:!1}}),"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},function(e,t,n){var o=n(1),r=n(17),i="".split;e.exports=o((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==r(e)?i.call(e,""):Object(e)}:Object},function(e,t,n){var o=n(4);e.exports=function(e,t){if(!o(e))return e;var n,r;if(t&&"function"==typeof(n=e.toString)&&!o(r=n.call(e)))return r;if("function"==typeof(n=e.valueOf)&&!o(r=n.call(e)))return r;if(!t&&"function"==typeof(n=e.toString)&&!o(r=n.call(e)))return r;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t){e.exports={}},function(e,t,n){var o=n(17);e.exports=Array.isArray||function(e){return"Array"==o(e)}},function(e,t,n){var o=n(2),r=n(144),i=n(34),a=n(14),s=n(3),c=s("iterator"),l=s("toStringTag"),u=i.values;for(var d in r){var f=o[d],h=f&&f.prototype;if(h){if(h[c]!==u)try{a(h,c,u)}catch(e){h[c]=u}if(h[l]||a(h,l,d),r[d])for(var p in i)if(h[p]!==i[p])try{a(h,p,i[p])}catch(e){h[p]=i[p]}}}},function(e,t,n){"use strict";var o=n(1);e.exports=function(e,t){var n=[][e];return!!n&&o((function(){n.call(null,t||function(){throw 1},1)}))}},function(e,t,n){"use strict";var o=n(0),r=n(2),i=n(22),a=n(25),s=n(5),c=n(85),l=n(120),u=n(1),d=n(7),f=n(40),h=n(4),p=n(6),m=n(15),v=n(13),g=n(36),y=n(37),w=n(29),b=n(55),k=n(49),x=n(212),S=n(90),T=n(23),C=n(9),A=n(89),I=n(14),_=n(11),E=n(82),O=n(57),P=n(38),j=n(54),W=n(3),D=n(153),N=n(154),R=n(58),L=n(32),F=n(30).forEach,H=O("hidden"),q=W("toPrimitive"),$=L.set,M=L.getterFor("Symbol"),G=Object.prototype,U=r.Symbol,B=i("JSON","stringify"),z=T.f,V=C.f,Y=x.f,K=A.f,J=E("symbols"),Q=E("op-symbols"),X=E("string-to-symbol-registry"),Z=E("symbol-to-string-registry"),ee=E("wks"),te=r.QObject,ne=!te||!te.prototype||!te.prototype.findChild,oe=s&&u((function(){return 7!=w(V({},"a",{get:function(){return V(this,"a",{value:7}).a}})).a}))?function(e,t,n){var o=z(G,t);o&&delete G[t],V(e,t,n),o&&e!==G&&V(G,t,o)}:V,re=function(e,t){var n=J[e]=w(U.prototype);return $(n,{type:"Symbol",tag:e,description:t}),s||(n.description=t),n},ie=l?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof U},ae=function(e,t,n){e===G&&ae(Q,t,n),p(e);var o=g(t,!0);return p(n),d(J,o)?(n.enumerable?(d(e,H)&&e[H][o]&&(e[H][o]=!1),n=w(n,{enumerable:y(0,!1)})):(d(e,H)||V(e,H,y(1,{})),e[H][o]=!0),oe(e,o,n)):V(e,o,n)},se=function(e,t){p(e);var n=v(t),o=b(n).concat(de(n));return F(o,(function(t){s&&!ce.call(n,t)||ae(e,t,n[t])})),e},ce=function(e){var t=g(e,!0),n=K.call(this,t);return!(this===G&&d(J,t)&&!d(Q,t))&&(!(n||!d(this,t)||!d(J,t)||d(this,H)&&this[H][t])||n)},le=function(e,t){var n=v(e),o=g(t,!0);if(n!==G||!d(J,o)||d(Q,o)){var r=z(n,o);return!r||!d(J,o)||d(n,H)&&n[H][o]||(r.enumerable=!0),r}},ue=function(e){var t=Y(v(e)),n=[];return F(t,(function(e){d(J,e)||d(P,e)||n.push(e)})),n},de=function(e){var t=e===G,n=Y(t?Q:v(e)),o=[];return F(n,(function(e){!d(J,e)||t&&!d(G,e)||o.push(J[e])})),o};(c||(_((U=function(){if(this instanceof U)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=j(e),n=function(e){this===G&&n.call(Q,e),d(this,H)&&d(this[H],t)&&(this[H][t]=!1),oe(this,t,y(1,e))};return s&&ne&&oe(G,t,{configurable:!0,set:n}),re(t,e)}).prototype,"toString",(function(){return M(this).tag})),_(U,"withoutSetter",(function(e){return re(j(e),e)})),A.f=ce,C.f=ae,T.f=le,k.f=x.f=ue,S.f=de,D.f=function(e){return re(W(e),e)},s&&(V(U.prototype,"description",{configurable:!0,get:function(){return M(this).description}}),a||_(G,"propertyIsEnumerable",ce,{unsafe:!0}))),o({global:!0,wrap:!0,forced:!c,sham:!c},{Symbol:U}),F(b(ee),(function(e){N(e)})),o({target:"Symbol",stat:!0,forced:!c},{for:function(e){var t=String(e);if(d(X,t))return X[t];var n=U(t);return X[t]=n,Z[n]=t,n},keyFor:function(e){if(!ie(e))throw TypeError(e+" is not a symbol");if(d(Z,e))return Z[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),o({target:"Object",stat:!0,forced:!c,sham:!s},{create:function(e,t){return void 0===t?w(e):se(w(e),t)},defineProperty:ae,defineProperties:se,getOwnPropertyDescriptor:le}),o({target:"Object",stat:!0,forced:!c},{getOwnPropertyNames:ue,getOwnPropertySymbols:de}),o({target:"Object",stat:!0,forced:u((function(){S.f(1)}))},{getOwnPropertySymbols:function(e){return S.f(m(e))}}),B)&&o({target:"JSON",stat:!0,forced:!c||u((function(){var e=U();return"[null]"!=B([e])||"{}"!=B({a:e})||"{}"!=B(Object(e))}))},{stringify:function(e,t,n){for(var o,r=[e],i=1;arguments.length>i;)r.push(arguments[i++]);if(o=t,(h(t)||void 0!==e)&&!ie(e))return f(t)||(t=function(e,t){if("function"==typeof o&&(t=o.call(this,e,t)),!ie(t))return t}),r[1]=t,B.apply(null,r)}});U.prototype[q]||I(U.prototype,q,U.prototype.valueOf),R(U,"Symbol"),P[H]=!0},function(e,t,n){var o=n(19).Symbol;e.exports=o},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n(110);var o=n(46);n(43),n(63),n(97),n(155),n(34),n(10),n(31),n(41);var r=n(74);function i(e){return function(e){if(Array.isArray(e))return Object(o.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Object(r.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){"use strict";function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}n.d(t,"a",(function(){return o}))},function(e,t,n){"use strict";var o=n(108),r=n(6),i=n(15),a=n(12),s=n(56),c=n(20),l=n(114),u=n(109),d=Math.max,f=Math.min,h=Math.floor,p=/\$([$&'`]|\d\d?|<[^>]*>)/g,m=/\$([$&'`]|\d\d?)/g;o("replace",2,(function(e,t,n,o){var v=o.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,g=o.REPLACE_KEEPS_$0,y=v?"$":"$0";return[function(n,o){var r=c(this),i=null==n?void 0:n[e];return void 0!==i?i.call(n,r,o):t.call(String(r),n,o)},function(e,o){if(!v&&g||"string"==typeof o&&-1===o.indexOf(y)){var i=n(t,e,this,o);if(i.done)return i.value}var c=r(e),h=String(this),p="function"==typeof o;p||(o=String(o));var m=c.global;if(m){var b=c.unicode;c.lastIndex=0}for(var k=[];;){var x=u(c,h);if(null===x)break;if(k.push(x),!m)break;""===String(x[0])&&(c.lastIndex=l(h,a(c.lastIndex),b))}for(var S,T="",C=0,A=0;A<k.length;A++){x=k[A];for(var I=String(x[0]),_=d(f(s(x.index),h.length),0),E=[],O=1;O<x.length;O++)E.push(void 0===(S=x[O])?S:String(S));var P=x.groups;if(p){var j=[I].concat(E,_,h);void 0!==P&&j.push(P);var W=String(o.apply(void 0,j))}else W=w(I,h,_,E,P,o);_>=C&&(T+=h.slice(C,_)+W,C=_+I.length)}return T+h.slice(C)}];function w(e,n,o,r,a,s){var c=o+e.length,l=r.length,u=m;return void 0!==a&&(a=i(a),u=p),t.call(s,u,(function(t,i){var s;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,o);case"'":return n.slice(c);case"<":s=a[i.slice(1,-1)];break;default:var u=+i;if(0===u)return t;if(u>l){var d=h(u/10);return 0===d?t:d<=l?void 0===r[d-1]?i.charAt(1):r[d-1]+i.charAt(1):t}s=r[u-1]}return void 0===s?"":s}))}}))},function(e,t,n){"use strict";var o=n(0),r=n(1),i=n(40),a=n(4),s=n(15),c=n(12),l=n(61),u=n(142),d=n(60),f=n(3),h=n(96),p=f("isConcatSpreadable"),m=h>=51||!r((function(){var e=[];return e[p]=!1,e.concat()[0]!==e})),v=d("concat"),g=function(e){if(!a(e))return!1;var t=e[p];return void 0!==t?!!t:i(e)};o({target:"Array",proto:!0,forced:!m||!v},{concat:function(e){var t,n,o,r,i,a=s(this),d=u(a,0),f=0;for(t=-1,o=arguments.length;t<o;t++)if(i=-1===t?a:arguments[t],g(i)){if(f+(r=c(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<r;n++,f++)n in i&&l(d,f,i[n])}else{if(f>=9007199254740991)throw TypeError("Maximum allowed index exceeded");l(d,f++,i)}return d.length=f,d}})},function(e,t,n){var o=n(122),r=n(87).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return o(e,r)}},function(e,t,n){"use strict";var o=n(0),r=n(4),i=n(40),a=n(123),s=n(12),c=n(13),l=n(61),u=n(3),d=n(60),f=n(18),h=d("slice"),p=f("slice",{ACCESSORS:!0,0:0,1:2}),m=u("species"),v=[].slice,g=Math.max;o({target:"Array",proto:!0,forced:!h||!p},{slice:function(e,t){var n,o,u,d=c(this),f=s(d.length),h=a(e,f),p=a(void 0===t?f:t,f);if(i(d)&&("function"!=typeof(n=d.constructor)||n!==Array&&!i(n.prototype)?r(n)&&null===(n=n[m])&&(n=void 0):n=void 0,n===Array||void 0===n))return v.call(d,h,p);for(o=new(void 0===n?Array:n)(g(p-h,0)),u=0;h<p;h++,u++)h in d&&l(o,u,d[h]);return o.length=u,o}})},function(e,t,n){"use strict";var o=n(0),r=n(146);o({target:"Array",proto:!0,forced:[].forEach!=r},{forEach:r})},function(e,t,n){var o=n(2),r=n(144),i=n(146),a=n(14);for(var s in r){var c=o[s],l=c&&c.prototype;if(l&&l.forEach!==i)try{a(l,"forEach",i)}catch(e){l.forEach=i}}},function(e,t,n){var o=n(5),r=n(9).f,i=Function.prototype,a=i.toString,s=/^\s*function ([^ (]*)/;o&&!("name"in i)&&r(i,"name",{configurable:!0,get:function(){try{return a.call(this).match(s)[1]}catch(e){return""}}})},function(e,t){var n=0,o=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+o).toString(36)}},function(e,t,n){var o=n(122),r=n(87);e.exports=Object.keys||function(e){return o(e,r)}},function(e,t){var n=Math.ceil,o=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?o:n)(e)}},function(e,t,n){var o=n(82),r=n(54),i=o("keys");e.exports=function(e){return i[e]||(i[e]=r(e))}},function(e,t,n){var o=n(9).f,r=n(7),i=n(3)("toStringTag");e.exports=function(e,t,n){e&&!r(e=n?e:e.prototype,i)&&o(e,i,{configurable:!0,value:t})}},function(e,t,n){var o=n(26);e.exports=function(e,t,n){if(o(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,o){return e.call(t,n,o)};case 3:return function(n,o,r){return e.call(t,n,o,r)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){var o=n(1),r=n(3),i=n(96),a=r("species");e.exports=function(e){return i>=51||!o((function(){var t=[];return(t.constructor={})[a]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,n){"use strict";var o=n(36),r=n(9),i=n(37);e.exports=function(e,t,n){var a=o(t);a in e?r.f(e,a,i(0,n)):e[a]=n}},function(e,t,n){"use strict";var o,r,i=n(113),a=n(189),s=RegExp.prototype.exec,c=String.prototype.replace,l=s,u=(o=/a/,r=/b*/g,s.call(o,"a"),s.call(r,"a"),0!==o.lastIndex||0!==r.lastIndex),d=a.UNSUPPORTED_Y||a.BROKEN_CARET,f=void 0!==/()??/.exec("")[1];(u||f||d)&&(l=function(e){var t,n,o,r,a=this,l=d&&a.sticky,h=i.call(a),p=a.source,m=0,v=e;return l&&(-1===(h=h.replace("y","")).indexOf("g")&&(h+="g"),v=String(e).slice(a.lastIndex),a.lastIndex>0&&(!a.multiline||a.multiline&&"\n"!==e[a.lastIndex-1])&&(p="(?: "+p+")",v=" "+v,m++),n=new RegExp("^(?:"+p+")",h)),f&&(n=new RegExp("^"+p+"$(?!\\s)",h)),u&&(t=a.lastIndex),o=s.call(l?n:a,v),l?o?(o.input=o.input.slice(m),o[0]=o[0].slice(m),o.index=a.lastIndex,a.lastIndex+=o[0].length):a.lastIndex=0:u&&o&&(a.lastIndex=a.global?o.index+o[0].length:t),f&&o&&o.length>1&&c.call(o[0],n,(function(){for(r=1;r<arguments.length-2;r++)void 0===arguments[r]&&(o[r]=void 0)})),o}),e.exports=l},function(e,t,n){"use strict";var o=n(0),r=n(5),i=n(2),a=n(7),s=n(4),c=n(9).f,l=n(127),u=i.Symbol;if(r&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var d={},f=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof f?new u(e):void 0===e?u():u(e);return""===e&&(d[t]=!0),t};l(f,u);var h=f.prototype=u.prototype;h.constructor=f;var p=h.toString,m="Symbol(test)"==String(u("test")),v=/^Symbol\((.*)\)[^)]+$/;c(h,"description",{configurable:!0,get:function(){var e=s(this)?this.valueOf():this,t=p.call(e);if(a(d,e))return"";var n=m?t.slice(7,-1):t.replace(v,"$1");return""===n?void 0:n}}),o({global:!0,forced:!0},{Symbol:f})}},function(e,t,n){var o=n(222),r=n(223),i=n(224),a=n(225),s=n(226);function c(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var o=e[t];this.set(o[0],o[1])}}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,e.exports=c},function(e,t,n){var o=n(160);e.exports=function(e,t){for(var n=e.length;n--;)if(o(e[n][0],t))return n;return-1}},function(e,t,n){var o=n(27)(Object,"create");e.exports=o},function(e,t,n){var o=n(244);e.exports=function(e,t){var n=e.__data__;return o(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var o=n(105);e.exports=function(e){if("string"==typeof e||o(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n(155),n(50),n(156),n(53),n(10),n(115),n(31);var o=n(46);function r(e,t){if(e){if("string"==typeof e)return Object(o.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(o.a)(e,t):void 0}}},function(e,t){var n=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,i=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,l=s||c||Function("return this")(),u=Object.prototype.toString,d=Math.max,f=Math.min,h=function(){return l.Date.now()};function p(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(p(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=p(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var s=r.test(e);return s||i.test(e)?a(e.slice(2),s?2:8):o.test(e)?NaN:+e}e.exports=function(e,t,n){var o,r,i,a,s,c,l=0,u=!1,v=!1,g=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function y(t){var n=o,i=r;return o=r=void 0,l=t,a=e.apply(i,n)}function w(e){return l=e,s=setTimeout(k,t),u?y(e):a}function b(e){var n=e-c;return void 0===c||n>=t||n<0||v&&e-l>=i}function k(){var e=h();if(b(e))return x(e);s=setTimeout(k,function(e){var n=t-(e-c);return v?f(n,i-(e-l)):n}(e))}function x(e){return s=void 0,g&&o?y(e):(o=r=void 0,a)}function S(){var e=h(),n=b(e);if(o=arguments,r=this,c=e,n){if(void 0===s)return w(c);if(v)return s=setTimeout(k,t),y(c)}return void 0===s&&(s=setTimeout(k,t)),a}return t=m(t)||0,p(n)&&(u=!!n.leading,i=(v="maxWait"in n)?d(m(n.maxWait)||0,t):i,g="trailing"in n?!!n.trailing:g),S.cancel=function(){void 0!==s&&clearTimeout(s),l=0,o=c=r=s=void 0},S.flush=function(){return void 0===s?a:x(h())},S}},function(e,t,n){var o,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(o=function(){var e,t,n={version:"0.2.0"},o=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(e,t,n){return e<t?t:e>n?n:e}function i(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(o[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=r(e,o.minimum,1),n.status=1===e?null:e;var c=n.render(!t),l=c.querySelector(o.barSelector),u=o.speed,d=o.easing;return c.offsetWidth,a((function(t){""===o.positionUsing&&(o.positionUsing=n.getPositioningCSS()),s(l,function(e,t,n){var r;return(r="translate3d"===o.positionUsing?{transform:"translate3d("+i(e)+"%,0,0)"}:"translate"===o.positionUsing?{transform:"translate("+i(e)+"%,0)"}:{"margin-left":i(e)+"%"}).transition="all "+t+"ms "+n,r}(e,u,d)),1===e?(s(c,{transition:"none",opacity:1}),c.offsetWidth,setTimeout((function(){s(c,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),u)}),u)):setTimeout(t,u)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),o.trickleSpeed)};return o.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*r(Math.random()*t,.1,.95)),t=r(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*o.trickleRate)},e=0,t=0,n.promise=function(o){return o&&"resolved"!==o.state()?(0===t&&n.start(),e++,t++,o.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");l(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=o.template;var r,a=t.querySelector(o.barSelector),c=e?"-100":i(n.status||0),u=document.querySelector(o.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+c+"%,0,0)"}),o.showSpinner||(r=t.querySelector(o.spinnerSelector))&&f(r),u!=document.body&&l(u,"nprogress-custom-parent"),u.appendChild(t),t},n.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(o.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&f(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var a=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),s=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var o,r=e.length,i=t.charAt(0).toUpperCase()+t.slice(1);r--;)if((o=e[r]+i)in n)return o;return t}(n))}function o(e,t,o){t=n(t),e.style[t]=o}return function(e,t){var n,r,i=arguments;if(2==i.length)for(n in t)void 0!==(r=t[n])&&t.hasOwnProperty(n)&&o(e,n,r);else o(e,i[1],i[2])}}();function c(e,t){return("string"==typeof e?e:d(e)).indexOf(" "+t+" ")>=0}function l(e,t){var n=d(e),o=n+t;c(n,t)||(e.className=o.substring(1))}function u(e,t){var n,o=d(e);c(e,t)&&(n=o.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function f(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?o.call(t,n,t,e):o)||(e.exports=r)},function(e,t,n){"use strict";var o=n(0),r=n(30).map,i=n(60),a=n(18),s=i("map"),c=a("map");o({target:"Array",proto:!0,forced:!s||!c},{map:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var o=n(0),r=n(15),i=n(55);o({target:"Object",stat:!0,forced:n(1)((function(){i(1)}))},{keys:function(e){return i(r(e))}})},function(e,t,n){var o=n(1),r=/#|\.prototype\./,i=function(e,t){var n=s[a(e)];return n==l||n!=c&&("function"==typeof t?o(t):!!t)},a=i.normalize=function(e){return String(e).replace(r,".").toLowerCase()},s=i.data={},c=i.NATIVE="N",l=i.POLYFILL="P";e.exports=i},function(e,t,n){"use strict";var o=n(0),r=n(35),i=n(13),a=n(42),s=[].join,c=r!=Object,l=a("join",",");o({target:"Array",proto:!0,forced:c||!l},{join:function(e){return s.call(i(this),void 0===e?",":e)}})},function(e,t,n){var o=n(3),r=n(29),i=n(9),a=o("unscopables"),s=Array.prototype;null==s[a]&&i.f(s,a,{configurable:!0,value:r(null)}),e.exports=function(e){s[a][e]=!0}},function(e,t,n){var o=n(25),r=n(118);(e.exports=function(e,t){return r[e]||(r[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.5",mode:o?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var o=n(2),r=n(14);e.exports=function(e,t){try{r(o,e,t)}catch(n){o[e]=t}return t}},function(e,t,n){var o=n(2),r=n(4),i=o.document,a=r(i)&&r(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},function(e,t,n){var o=n(1);e.exports=!!Object.getOwnPropertySymbols&&!o((function(){return!String(Symbol())}))},function(e,t,n){var o=n(13),r=n(12),i=n(123),a=function(e){return function(t,n,a){var s,c=o(t),l=r(c.length),u=i(a,l);if(e&&n!=n){for(;l>u;)if((s=c[u++])!=s)return!0}else for(;l>u;u++)if((e||u in c)&&c[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var o=n(118),r=Function.toString;"function"!=typeof o.inspectSource&&(o.inspectSource=function(e){return r.call(e)}),e.exports=o.inspectSource},function(e,t,n){"use strict";var o={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,i=r&&!o.call({1:2},1);t.f=i?function(e){var t=r(this,e);return!!t&&t.enumerable}:o},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var o=n(7),r=n(15),i=n(57),a=n(130),s=i("IE_PROTO"),c=Object.prototype;e.exports=a?Object.getPrototypeOf:function(e){return e=r(e),o(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?c:null}},function(e,t,n){var o=n(6),r=n(197);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,i){return o(n),r(i),t?e.call(n,i):n.__proto__=i,n}}():void 0)},function(e,t,n){var o={};o[n(3)("toStringTag")]="z",e.exports="[object z]"===String(o)},function(e,t,n){var o=n(6),r=n(26),i=n(3)("species");e.exports=function(e,t){var n,a=o(e).constructor;return void 0===a||null==(n=o(a)[i])?t:r(n)}},function(e,t,n){var o=n(22);e.exports=o("navigator","userAgent")||""},function(e,t,n){var o,r,i=n(2),a=n(95),s=i.process,c=s&&s.versions,l=c&&c.v8;l?r=(o=l.split("."))[0]+o[1]:a&&(!(o=a.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=a.match(/Chrome\/(\d+)/))&&(r=o[1]),e.exports=r&&+r},function(e,t,n){n(154)("iterator")},function(e,t,n){var o=n(216),r=n(28),i=Object.prototype,a=i.hasOwnProperty,s=i.propertyIsEnumerable,c=o(function(){return arguments}())?o:function(e){return r(e)&&a.call(e,"callee")&&!s.call(e,"callee")};e.exports=c},function(e,t,n){var o=n(27)(n(19),"Map");e.exports=o},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var o=n(236),r=n(243),i=n(245),a=n(246),s=n(247);function c(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var o=e[t];this.set(o[0],o[1])}}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,e.exports=c},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var o=n(16),r=n(105),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;e.exports=function(e,t){if(o(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!r(e))||(a.test(e)||!i.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var o=n(33),r=n(28);e.exports=function(e){return"symbol"==typeof e||r(e)&&"[object Symbol]"==o(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){var o=n(0),r=n(5);o({target:"Object",stat:!0,forced:!r,sham:!r},{defineProperty:n(9).f})},function(e,t,n){"use strict";n(24);var o=n(11),r=n(1),i=n(3),a=n(62),s=n(14),c=i("species"),l=!r((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),u="$0"==="a".replace(/./,"$0"),d=i("replace"),f=!!/./[d]&&""===/./[d]("a","$0"),h=!r((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));e.exports=function(e,t,n,d){var p=i(e),m=!r((function(){var t={};return t[p]=function(){return 7},7!=""[e](t)})),v=m&&!r((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[c]=function(){return n},n.flags="",n[p]=/./[p]),n.exec=function(){return t=!0,null},n[p](""),!t}));if(!m||!v||"replace"===e&&(!l||!u||f)||"split"===e&&!h){var g=/./[p],y=n(p,""[e],(function(e,t,n,o,r){return t.exec===a?m&&!r?{done:!0,value:g.call(t,n,o)}:{done:!0,value:e.call(n,t,o)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:f}),w=y[0],b=y[1];o(String.prototype,e,w),o(RegExp.prototype,p,2==t?function(e,t){return b.call(e,this,t)}:function(e){return b.call(e,this)})}d&&s(RegExp.prototype[p],"sham",!0)}},function(e,t,n){var o=n(17),r=n(62);e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var i=n.call(e,t);if("object"!=typeof i)throw TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==o(e))throw TypeError("RegExp#exec called on incompatible receiver");return r.call(e,t)}},function(e,t,n){n(0)({target:"Array",stat:!0},{isArray:n(40)})},function(e,t,n){"use strict";var o=n(108),r=n(112),i=n(6),a=n(20),s=n(94),c=n(114),l=n(12),u=n(109),d=n(62),f=n(1),h=[].push,p=Math.min,m=!f((function(){return!RegExp(4294967295,"y")}));o("split",2,(function(e,t,n){var o;return o="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var o=String(a(this)),i=void 0===n?4294967295:n>>>0;if(0===i)return[];if(void 0===e)return[o];if(!r(e))return t.call(o,e,i);for(var s,c,l,u=[],f=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),p=0,m=new RegExp(e.source,f+"g");(s=d.call(m,o))&&!((c=m.lastIndex)>p&&(u.push(o.slice(p,s.index)),s.length>1&&s.index<o.length&&h.apply(u,s.slice(1)),l=s[0].length,p=c,u.length>=i));)m.lastIndex===s.index&&m.lastIndex++;return p===o.length?!l&&m.test("")||u.push(""):u.push(o.slice(p)),u.length>i?u.slice(0,i):u}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function(t,n){var r=a(this),i=null==t?void 0:t[e];return void 0!==i?i.call(t,r,n):o.call(String(r),t,n)},function(e,r){var a=n(o,e,this,r,o!==t);if(a.done)return a.value;var d=i(e),f=String(this),h=s(d,RegExp),v=d.unicode,g=(d.ignoreCase?"i":"")+(d.multiline?"m":"")+(d.unicode?"u":"")+(m?"y":"g"),y=new h(m?d:"^(?:"+d.source+")",g),w=void 0===r?4294967295:r>>>0;if(0===w)return[];if(0===f.length)return null===u(y,f)?[f]:[];for(var b=0,k=0,x=[];k<f.length;){y.lastIndex=m?k:0;var S,T=u(y,m?f:f.slice(k));if(null===T||(S=p(l(y.lastIndex+(m?0:k)),f.length))===b)k=c(f,k,v);else{if(x.push(f.slice(b,k)),x.length===w)return x;for(var C=1;C<=T.length-1;C++)if(x.push(T[C]),x.length===w)return x;k=b=S}}return x.push(f.slice(b)),x}]}),!m)},function(e,t,n){var o=n(4),r=n(17),i=n(3)("match");e.exports=function(e){var t;return o(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==r(e))}},function(e,t,n){"use strict";var o=n(6);e.exports=function(){var e=o(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){"use strict";var o=n(143).charAt;e.exports=function(e,t,n){return t+(n?o(e,t).length:1)}},function(e,t,n){"use strict";var o=n(11),r=n(6),i=n(1),a=n(113),s=RegExp.prototype,c=s.toString,l=i((function(){return"/a/b"!=c.call({source:"a",flags:"b"})})),u="toString"!=c.name;(l||u)&&o(RegExp.prototype,"toString",(function(){var e=r(this),t=String(e.source),n=e.flags;return"/"+t+"/"+String(void 0===n&&e instanceof RegExp&&!("flags"in s)?a.call(e):n)}),{unsafe:!0})},function(e,t,n){var o=n(20),r="["+n(117)+"]",i=RegExp("^"+r+r+"*"),a=RegExp(r+r+"*$"),s=function(e){return function(t){var n=String(o(t));return 1&e&&(n=n.replace(i,"")),2&e&&(n=n.replace(a,"")),n}};e.exports={start:s(1),end:s(2),trim:s(3)}},function(e,t){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(e,t,n){var o=n(2),r=n(83),i=o["__core-js_shared__"]||r("__core-js_shared__",{});e.exports=i},function(e,t,n){var o=n(5),r=n(1),i=n(84);e.exports=!o&&!r((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var o=n(85);e.exports=o&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){var o=n(5),r=n(9),i=n(6),a=n(55);e.exports=o?Object.defineProperties:function(e,t){i(e);for(var n,o=a(t),s=o.length,c=0;s>c;)r.f(e,n=o[c++],t[n]);return e}},function(e,t,n){var o=n(7),r=n(13),i=n(86).indexOf,a=n(38);e.exports=function(e,t){var n,s=r(e),c=0,l=[];for(n in s)!o(a,n)&&o(s,n)&&l.push(n);for(;t.length>c;)o(s,n=t[c++])&&(~i(l,n)||l.push(n));return l}},function(e,t,n){var o=n(56),r=Math.max,i=Math.min;e.exports=function(e,t){var n=o(e);return n<0?r(n+t,0):i(n,t)}},function(e,t,n){var o=n(22);e.exports=o("document","documentElement")},function(e,t,n){var o=n(2);e.exports=o},function(e,t,n){"use strict";var o=n(0),r=n(196),i=n(91),a=n(92),s=n(58),c=n(14),l=n(11),u=n(3),d=n(25),f=n(39),h=n(129),p=h.IteratorPrototype,m=h.BUGGY_SAFARI_ITERATORS,v=u("iterator"),g=function(){return this};e.exports=function(e,t,n,u,h,y,w){r(n,t,u);var b,k,x,S=function(e){if(e===h&&_)return _;if(!m&&e in A)return A[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},T=t+" Iterator",C=!1,A=e.prototype,I=A[v]||A["@@iterator"]||h&&A[h],_=!m&&I||S(h),E="Array"==t&&A.entries||I;if(E&&(b=i(E.call(new e)),p!==Object.prototype&&b.next&&(d||i(b)===p||(a?a(b,p):"function"!=typeof b[v]&&c(b,v,g)),s(b,T,!0,!0),d&&(f[T]=g))),"values"==h&&I&&"values"!==I.name&&(C=!0,_=function(){return I.call(this)}),d&&!w||A[v]===_||c(A,v,_),f[t]=_,h)if(k={values:S("values"),keys:y?_:S("keys"),entries:S("entries")},w)for(x in k)(m||C||!(x in A))&&l(A,x,k[x]);else o({target:t,proto:!0,forced:m||C},k);return k}},function(e,t,n){var o=n(7),r=n(128),i=n(23),a=n(9);e.exports=function(e,t){for(var n=r(t),s=a.f,c=i.f,l=0;l<n.length;l++){var u=n[l];o(e,u)||s(e,u,c(t,u))}}},function(e,t,n){var o=n(22),r=n(49),i=n(90),a=n(6);e.exports=o("Reflect","ownKeys")||function(e){var t=r.f(a(e)),n=i.f;return n?t.concat(n(e)):t}},function(e,t,n){"use strict";var o,r,i,a=n(91),s=n(14),c=n(7),l=n(3),u=n(25),d=l("iterator"),f=!1;[].keys&&("next"in(i=[].keys())?(r=a(a(i)))!==Object.prototype&&(o=r):f=!0),null==o&&(o={}),u||c(o,d)||s(o,d,(function(){return this})),e.exports={IteratorPrototype:o,BUGGY_SAFARI_ITERATORS:f}},function(e,t,n){var o=n(1);e.exports=!o((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,n){"use strict";var o,r,i,a,s=n(0),c=n(25),l=n(2),u=n(22),d=n(132),f=n(11),h=n(198),p=n(58),m=n(186),v=n(4),g=n(26),y=n(199),w=n(17),b=n(88),k=n(200),x=n(137),S=n(94),T=n(138).set,C=n(201),A=n(140),I=n(202),_=n(141),E=n(203),O=n(32),P=n(79),j=n(3),W=n(96),D=j("species"),N="Promise",R=O.get,L=O.set,F=O.getterFor(N),H=d,q=l.TypeError,$=l.document,M=l.process,G=u("fetch"),U=_.f,B=U,z="process"==w(M),V=!!($&&$.createEvent&&l.dispatchEvent),Y=P(N,(function(){if(!(b(H)!==String(H))){if(66===W)return!0;if(!z&&"function"!=typeof PromiseRejectionEvent)return!0}if(c&&!H.prototype.finally)return!0;if(W>=51&&/native code/.test(H))return!1;var e=H.resolve(1),t=function(e){e((function(){}),(function(){}))};return(e.constructor={})[D]=t,!(e.then((function(){}))instanceof t)})),K=Y||!x((function(e){H.all(e).catch((function(){}))})),J=function(e){var t;return!(!v(e)||"function"!=typeof(t=e.then))&&t},Q=function(e,t,n){if(!t.notified){t.notified=!0;var o=t.reactions;C((function(){for(var r=t.value,i=1==t.state,a=0;o.length>a;){var s,c,l,u=o[a++],d=i?u.ok:u.fail,f=u.resolve,h=u.reject,p=u.domain;try{d?(i||(2===t.rejection&&te(e,t),t.rejection=1),!0===d?s=r:(p&&p.enter(),s=d(r),p&&(p.exit(),l=!0)),s===u.promise?h(q("Promise-chain cycle")):(c=J(s))?c.call(s,f,h):f(s)):h(r)}catch(e){p&&!l&&p.exit(),h(e)}}t.reactions=[],t.notified=!1,n&&!t.rejection&&Z(e,t)}))}},X=function(e,t,n){var o,r;V?((o=$.createEvent("Event")).promise=t,o.reason=n,o.initEvent(e,!1,!0),l.dispatchEvent(o)):o={promise:t,reason:n},(r=l["on"+e])?r(o):"unhandledrejection"===e&&I("Unhandled promise rejection",n)},Z=function(e,t){T.call(l,(function(){var n,o=t.value;if(ee(t)&&(n=E((function(){z?M.emit("unhandledRejection",o,e):X("unhandledrejection",e,o)})),t.rejection=z||ee(t)?2:1,n.error))throw n.value}))},ee=function(e){return 1!==e.rejection&&!e.parent},te=function(e,t){T.call(l,(function(){z?M.emit("rejectionHandled",e):X("rejectionhandled",e,t.value)}))},ne=function(e,t,n,o){return function(r){e(t,n,r,o)}},oe=function(e,t,n,o){t.done||(t.done=!0,o&&(t=o),t.value=n,t.state=2,Q(e,t,!0))},re=function(e,t,n,o){if(!t.done){t.done=!0,o&&(t=o);try{if(e===n)throw q("Promise can't be resolved itself");var r=J(n);r?C((function(){var o={done:!1};try{r.call(n,ne(re,e,o,t),ne(oe,e,o,t))}catch(n){oe(e,o,n,t)}})):(t.value=n,t.state=1,Q(e,t,!1))}catch(n){oe(e,{done:!1},n,t)}}};Y&&(H=function(e){y(this,H,N),g(e),o.call(this);var t=R(this);try{e(ne(re,this,t),ne(oe,this,t))}catch(e){oe(this,t,e)}},(o=function(e){L(this,{type:N,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=h(H.prototype,{then:function(e,t){var n=F(this),o=U(S(this,H));return o.ok="function"!=typeof e||e,o.fail="function"==typeof t&&t,o.domain=z?M.domain:void 0,n.parent=!0,n.reactions.push(o),0!=n.state&&Q(this,n,!1),o.promise},catch:function(e){return this.then(void 0,e)}}),r=function(){var e=new o,t=R(e);this.promise=e,this.resolve=ne(re,e,t),this.reject=ne(oe,e,t)},_.f=U=function(e){return e===H||e===i?new r(e):B(e)},c||"function"!=typeof d||(a=d.prototype.then,f(d.prototype,"then",(function(e,t){var n=this;return new H((function(e,t){a.call(n,e,t)})).then(e,t)}),{unsafe:!0}),"function"==typeof G&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return A(H,G.apply(l,arguments))}}))),s({global:!0,wrap:!0,forced:Y},{Promise:H}),p(H,N,!1,!0),m(N),i=u(N),s({target:N,stat:!0,forced:Y},{reject:function(e){var t=U(this);return t.reject.call(void 0,e),t.promise}}),s({target:N,stat:!0,forced:c||Y},{resolve:function(e){return A(c&&this===i?H:this,e)}}),s({target:N,stat:!0,forced:K},{all:function(e){var t=this,n=U(t),o=n.resolve,r=n.reject,i=E((function(){var n=g(t.resolve),i=[],a=0,s=1;k(e,(function(e){var c=a++,l=!1;i.push(void 0),s++,n.call(t,e).then((function(e){l||(l=!0,i[c]=e,--s||o(i))}),r)})),--s||o(i)}));return i.error&&r(i.value),n.promise},race:function(e){var t=this,n=U(t),o=n.reject,r=E((function(){var r=g(t.resolve);k(e,(function(e){r.call(t,e).then(n.resolve,o)}))}));return r.error&&o(r.value),n.promise}})},function(e,t,n){var o=n(2);e.exports=o.Promise},function(e,t,n){var o=n(3),r=n(39),i=o("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||a[i]===e)}},function(e,t,n){var o=n(135),r=n(39),i=n(3)("iterator");e.exports=function(e){if(null!=e)return e[i]||e["@@iterator"]||r[o(e)]}},function(e,t,n){var o=n(93),r=n(17),i=n(3)("toStringTag"),a="Arguments"==r(function(){return arguments}());e.exports=o?r:function(e){var t,n,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?n:a?r(t):"Object"==(o=r(t))&&"function"==typeof t.callee?"Arguments":o}},function(e,t,n){var o=n(6);e.exports=function(e,t,n,r){try{return r?t(o(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&o(i.call(e)),t}}},function(e,t,n){var o=n(3)("iterator"),r=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){r=!0}};a[o]=function(){return this},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!r)return!1;var n=!1;try{var i={};i[o]=function(){return{next:function(){return{done:n=!0}}}},e(i)}catch(e){}return n}},function(e,t,n){var o,r,i,a=n(2),s=n(1),c=n(17),l=n(59),u=n(124),d=n(84),f=n(139),h=a.location,p=a.setImmediate,m=a.clearImmediate,v=a.process,g=a.MessageChannel,y=a.Dispatch,w=0,b={},k=function(e){if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},x=function(e){return function(){k(e)}},S=function(e){k(e.data)},T=function(e){a.postMessage(e+"",h.protocol+"//"+h.host)};p&&m||(p=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return b[++w]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},o(w),w},m=function(e){delete b[e]},"process"==c(v)?o=function(e){v.nextTick(x(e))}:y&&y.now?o=function(e){y.now(x(e))}:g&&!f?(i=(r=new g).port2,r.port1.onmessage=S,o=l(i.postMessage,i,1)):!a.addEventListener||"function"!=typeof postMessage||a.importScripts||s(T)||"file:"===h.protocol?o="onreadystatechange"in d("script")?function(e){u.appendChild(d("script")).onreadystatechange=function(){u.removeChild(this),k(e)}}:function(e){setTimeout(x(e),0)}:(o=T,a.addEventListener("message",S,!1))),e.exports={set:p,clear:m}},function(e,t,n){var o=n(95);e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(o)},function(e,t,n){var o=n(6),r=n(4),i=n(141);e.exports=function(e,t){if(o(e),r(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var o=n(26),r=function(e){var t,n;this.promise=new e((function(e,o){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=o})),this.resolve=o(t),this.reject=o(n)};e.exports.f=function(e){return new r(e)}},function(e,t,n){var o=n(4),r=n(40),i=n(3)("species");e.exports=function(e,t){var n;return r(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!r(n.prototype)?o(n)&&null===(n=n[i])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)}},function(e,t,n){var o=n(56),r=n(20),i=function(e){return function(t,n){var i,a,s=String(r(t)),c=o(n),l=s.length;return c<0||c>=l?e?"":void 0:(i=s.charCodeAt(c))<55296||i>56319||c+1===l||(a=s.charCodeAt(c+1))<56320||a>57343?e?s.charAt(c):i:e?s.slice(c,c+2):a-56320+(i-55296<<10)+65536}};e.exports={codeAt:i(!1),charAt:i(!0)}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,n){var o=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},r=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",a=o.toStringTag||"@@toStringTag";function s(e,t,n,o){var r=t&&t.prototype instanceof u?t:u,i=Object.create(r.prototype),a=new x(o||[]);return i._invoke=function(e,t,n){var o="suspendedStart";return function(r,i){if("executing"===o)throw new Error("Generator is already running");if("completed"===o){if("throw"===r)throw i;return T()}for(n.method=r,n.arg=i;;){var a=n.delegate;if(a){var s=w(a,n);if(s){if(s===l)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===o)throw o="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o="executing";var u=c(e,t,n);if("normal"===u.type){if(o=n.done?"completed":"suspendedYield",u.arg===l)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(o="completed",n.method="throw",n.arg=u.arg)}}}(e,n,a),i}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=s;var l={};function u(){}function d(){}function f(){}var h={};h[r]=function(){return this};var p=Object.getPrototypeOf,m=p&&p(p(S([])));m&&m!==t&&n.call(m,r)&&(h=m);var v=f.prototype=u.prototype=Object.create(h);function g(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function y(e,t){var o;this._invoke=function(r,i){function a(){return new t((function(o,a){!function o(r,i,a,s){var l=c(e[r],e,i);if("throw"!==l.type){var u=l.arg,d=u.value;return d&&"object"==typeof d&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){o("next",e,a,s)}),(function(e){o("throw",e,a,s)})):t.resolve(d).then((function(e){u.value=e,a(u)}),(function(e){return o("throw",e,a,s)}))}s(l.arg)}(r,i,o,a)}))}return o=o?o.then(a,a):a()}}function w(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,w(e,t),"throw"===t.method))return l;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return l}var o=c(n,e.iterator,t.arg);if("throw"===o.type)return t.method="throw",t.arg=o.arg,t.delegate=null,l;var r=o.arg;return r?r.done?(t[e.resultName]=r.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,l):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,l)}function b(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function k(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function x(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(b,this),this.reset(!0)}function S(e){if(e){var t=e[r];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function t(){for(;++o<e.length;)if(n.call(e,o))return t.value=e[o],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:T}}function T(){return{value:void 0,done:!0}}return d.prototype=v.constructor=f,f.constructor=d,f[a]=d.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,f):(e.__proto__=f,a in e||(e[a]="GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},g(y.prototype),y.prototype[i]=function(){return this},e.AsyncIterator=y,e.async=function(t,n,o,r,i){void 0===i&&(i=Promise);var a=new y(s(t,n,o,r),i);return e.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},g(v),v[a]="Generator",v[r]=function(){return this},v.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var o=t.pop();if(o in e)return n.value=o,n.done=!1,n}return n.done=!0,n}},e.values=S,x.prototype={constructor:x,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function o(n,o){return a.type="throw",a.arg=e,t.next=n,o&&(t.method="next",t.arg=void 0),!!o}for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],a=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var s=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(s&&c){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var o=this.tryEntries.length-1;o>=0;--o){var r=this.tryEntries[o];if(r.tryLoc<=this.prev&&n.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,l):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),l},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),k(n),l}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var o=n.completion;if("throw"===o.type){var r=o.arg;k(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:S(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),l}},e}(e.exports);try{regeneratorRuntime=o}catch(e){Function("r","regeneratorRuntime = r")(o)}},function(e,t,n){"use strict";var o=n(30).forEach,r=n(42),i=n(18),a=r("forEach"),s=i("forEach");e.exports=a&&s?[].forEach:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}},function(e,t,n){var o=n(1);e.exports=!o((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,n){var o=n(0),r=n(5),i=n(128),a=n(13),s=n(23),c=n(61);o({target:"Object",stat:!0,sham:!r},{getOwnPropertyDescriptors:function(e){for(var t,n,o=a(e),r=s.f,l=i(o),u={},d=0;l.length>d;)void 0!==(n=r(o,t=l[d++]))&&c(u,t,n);return u}})},function(e,t,n){var o=n(0),r=n(1),i=n(15),a=n(91),s=n(130);o({target:"Object",stat:!0,forced:r((function(){a(1)})),sham:!s},{getPrototypeOf:function(e){return a(i(e))}})},function(e,t,n){var o=n(112);e.exports=function(e){if(o(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,t,n){var o=n(3)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[o]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,n){n(0)({target:"Object",stat:!0,sham:!n(5)},{create:n(29)})},function(e,t,n){var o=n(3);t.f=o},function(e,t,n){var o=n(125),r=n(7),i=n(153),a=n(9).f;e.exports=function(e){var t=o.Symbol||(o.Symbol={});r(t,e)||a(t,e,{value:i.f(e)})}},function(e,t,n){var o=n(0),r=n(213);o({target:"Array",stat:!0,forced:!n(137)((function(e){Array.from(e)}))},{from:r})},function(e,t,n){var o=n(11),r=Date.prototype,i=r.toString,a=r.getTime;new Date(NaN)+""!="Invalid Date"&&o(r,"toString",(function(){var e=a.call(this);return e==e?i.call(this):"Invalid Date"}))},function(e,t){e.exports=function(e,t){for(var n=-1,o=t.length,r=e.length;++n<o;)e[r+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var o=n(64),r=n(227),i=n(228),a=n(229),s=n(230),c=n(231);function l(e){var t=this.__data__=new o(e);this.size=t.size}l.prototype.clear=r,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=s,l.prototype.set=c,e.exports=l},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var o=n(33),r=n(100);e.exports=function(e){if(!r(e))return!1;var t=o(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var o=n(248),r=n(28);e.exports=function e(t,n,i,a,s){return t===n||(null==t||null==n||!r(t)&&!r(n)?t!=t&&n!=n:o(t,n,i,a,e,s))}},function(e,t,n){var o=n(165),r=n(251),i=n(166);e.exports=function(e,t,n,a,s,c){var l=1&n,u=e.length,d=t.length;if(u!=d&&!(l&&d>u))return!1;var f=c.get(e);if(f&&c.get(t))return f==t;var h=-1,p=!0,m=2&n?new o:void 0;for(c.set(e,t),c.set(t,e);++h<u;){var v=e[h],g=t[h];if(a)var y=l?a(g,v,h,t,e,c):a(v,g,h,e,t,c);if(void 0!==y){if(y)continue;p=!1;break}if(m){if(!r(t,(function(e,t){if(!i(m,t)&&(v===e||s(v,e,n,a,c)))return m.push(t)}))){p=!1;break}}else if(v!==g&&!s(v,g,n,a,c)){p=!1;break}}return c.delete(e),c.delete(t),p}},function(e,t,n){var o=n(101),r=n(249),i=n(250);function a(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new o;++t<n;)this.add(e[t])}a.prototype.add=a.prototype.push=r,a.prototype.has=i,e.exports=a},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var o=n(261),r=n(267),i=n(172);e.exports=function(e){return i(e)?o(e):r(e)}},function(e,t,n){(function(e){var o=n(19),r=n(263),i=t&&!t.nodeType&&t,a=i&&"object"==typeof e&&e&&!e.nodeType&&e,s=a&&a.exports===i?o.Buffer:void 0,c=(s?s.isBuffer:void 0)||r;e.exports=c}).call(this,n(169)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var o=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==o||"symbol"!=o&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var o=n(264),r=n(265),i=n(266),a=i&&i.isTypedArray,s=a?r(a):o;e.exports=s},function(e,t,n){var o=n(161),r=n(103);e.exports=function(e){return null!=e&&r(e.length)&&!o(e)}},function(e,t,n){var o=n(27)(n(19),"Set");e.exports=o},function(e,t,n){var o=n(100);e.exports=function(e){return e==e&&!o(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var o=n(177),r=n(68);e.exports=function(e,t){for(var n=0,i=(t=o(t,e)).length;null!=e&&n<i;)e=e[r(t[n++])];return n&&n==i?e:void 0}},function(e,t,n){var o=n(16),r=n(104),i=n(278),a=n(281);e.exports=function(e,t){return o(e)?e:r(e,t)?[e]:i(a(e))}},function(e,t,n){var o=n(0),r=n(2),i=n(95),a=[].slice,s=function(e){return function(t,n){var o=arguments.length>2,r=o?a.call(arguments,2):void 0;return e(o?function(){("function"==typeof t?t:Function(t)).apply(this,r)}:t,n)}};o({global:!0,bind:!0,forced:/MSIE .\./.test(i)},{setTimeout:s(r.setTimeout),setInterval:s(r.setInterval)})},function(e,t,n){n(0)({target:"Object",stat:!0},{setPrototypeOf:n(92)})},function(e,t,n){var o=n(0),r=n(22),i=n(26),a=n(6),s=n(4),c=n(29),l=n(320),u=n(1),d=r("Reflect","construct"),f=u((function(){function e(){}return!(d((function(){}),[],e)instanceof e)})),h=!u((function(){d((function(){}))})),p=f||h;o({target:"Reflect",stat:!0,forced:p,sham:p},{construct:function(e,t){i(e),a(t);var n=arguments.length<3?e:i(arguments[2]);if(h&&!f)return d(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var o=[null];return o.push.apply(o,t),new(l.apply(e,o))}var r=n.prototype,u=c(s(r)?r:Object.prototype),p=Function.apply.call(e,u,t);return s(p)?p:u}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n(43),n(21),n(51),n(308),n(107),n(309),n(148),n(78),n(52);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}},function(e,t,n){var o=n(214),r=n(219),i=n(290),a=n(298),s=n(307),c=n(191),l=i((function(e){var t=c(e);return s(t)&&(t=void 0),a(o(e,1,s,!0),r(t,2))}));e.exports=l},function(e,t,n){"use strict";var o=n(0),r=n(30).some,i=n(42),a=n(18),s=i("some"),c=a("some");o({target:"Array",proto:!0,forced:!s||!c},{some:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var o=n(0),r=n(86).indexOf,i=n(42),a=n(18),s=[].indexOf,c=!!s&&1/[1].indexOf(1,-0)<0,l=i("indexOf"),u=a("indexOf",{ACCESSORS:!0,1:0});o({target:"Array",proto:!0,forced:c||!l||!u},{indexOf:function(e){return c?s.apply(this,arguments)||0:r(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var o=n(0),r=n(30).find,i=n(81),a=n(18),s=!0,c=a("find");"find"in[]&&Array(1).find((function(){s=!1})),o({target:"Array",proto:!0,forced:s||!c},{find:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),i("find")},function(e,t,n){"use strict";var o=n(22),r=n(9),i=n(3),a=n(5),s=i("species");e.exports=function(e){var t=o(e),n=r.f;a&&t&&!t[s]&&n(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){"use strict";var o,r=n(0),i=n(23).f,a=n(12),s=n(150),c=n(20),l=n(151),u=n(25),d="".startsWith,f=Math.min,h=l("startsWith");r({target:"String",proto:!0,forced:!!(u||h||(o=i(String.prototype,"startsWith"),!o||o.writable))&&!h},{startsWith:function(e){var t=String(c(this));s(e);var n=a(f(arguments.length>1?arguments[1]:void 0,t.length)),o=String(e);return d?d.call(t,o,n):t.slice(n,n+o.length)===o}})},function(e,t,n){"use strict";var o=n(0),r=n(86).includes,i=n(81);o({target:"Array",proto:!0,forced:!n(18)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),i("includes")},function(e,t,n){"use strict";var o=n(1);function r(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=o((function(){var e=r("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=o((function(){var e=r("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},function(e,t,n){"use strict";var o=n(0),r=n(150),i=n(20);o({target:"String",proto:!0,forced:!n(151)("includes")},{includes:function(e){return!!~String(i(this)).indexOf(r(e),arguments.length>1?arguments[1]:void 0)}})},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){var o=n(0),r=n(310);o({global:!0,forced:parseInt!=r},{parseInt:r})},function(e,t,n){var o=n(4),r=n(92);e.exports=function(e,t,n){var i,a;return r&&"function"==typeof(i=t.constructor)&&i!==n&&o(a=i.prototype)&&a!==n.prototype&&r(e,a),e}},function(e,t,n){e.exports=n(322)},function(e,t,n){var o=n(2),r=n(88),i=o.WeakMap;e.exports="function"==typeof i&&/native code/.test(r(i))},function(e,t,n){"use strict";var o=n(129).IteratorPrototype,r=n(29),i=n(37),a=n(58),s=n(39),c=function(){return this};e.exports=function(e,t,n){var l=t+" Iterator";return e.prototype=r(o,{next:i(1,n)}),a(e,l,!1,!0),s[l]=c,e}},function(e,t,n){var o=n(4);e.exports=function(e){if(!o(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,n){var o=n(11);e.exports=function(e,t,n){for(var r in t)o(e,r,t[r],n);return e}},function(e,t){e.exports=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e}},function(e,t,n){var o=n(6),r=n(133),i=n(12),a=n(59),s=n(134),c=n(136),l=function(e,t){this.stopped=e,this.result=t};(e.exports=function(e,t,n,u,d){var f,h,p,m,v,g,y,w=a(t,n,u?2:1);if(d)f=e;else{if("function"!=typeof(h=s(e)))throw TypeError("Target is not iterable");if(r(h)){for(p=0,m=i(e.length);m>p;p++)if((v=u?w(o(y=e[p])[0],y[1]):w(e[p]))&&v instanceof l)return v;return new l(!1)}f=h.call(e)}for(g=f.next;!(y=g.call(f)).done;)if("object"==typeof(v=c(f,w,y.value,u))&&v&&v instanceof l)return v;return new l(!1)}).stop=function(e){return new l(!0,e)}},function(e,t,n){var o,r,i,a,s,c,l,u,d=n(2),f=n(23).f,h=n(17),p=n(138).set,m=n(139),v=d.MutationObserver||d.WebKitMutationObserver,g=d.process,y=d.Promise,w="process"==h(g),b=f(d,"queueMicrotask"),k=b&&b.value;k||(o=function(){var e,t;for(w&&(e=g.domain)&&e.exit();r;){t=r.fn,r=r.next;try{t()}catch(e){throw r?a():i=void 0,e}}i=void 0,e&&e.enter()},w?a=function(){g.nextTick(o)}:v&&!m?(s=!0,c=document.createTextNode(""),new v(o).observe(c,{characterData:!0}),a=function(){c.data=s=!s}):y&&y.resolve?(l=y.resolve(void 0),u=l.then,a=function(){u.call(l,o)}):a=function(){p.call(d,o)}),e.exports=k||function(e){var t={fn:e,next:void 0};i&&(i.next=t),r||(r=t,a()),i=t}},function(e,t,n){var o=n(2);e.exports=function(e,t){var n=o.console;n&&n.error&&(1===arguments.length?n.error(e):n.error(e,t))}},function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t,n){var o=n(0),r=n(205);o({target:"Object",stat:!0,forced:Object.assign!==r},{assign:r})},function(e,t,n){"use strict";var o=n(5),r=n(1),i=n(55),a=n(90),s=n(89),c=n(15),l=n(35),u=Object.assign,d=Object.defineProperty;e.exports=!u||r((function(){if(o&&1!==u({b:1},u(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=u({},e)[n]||"abcdefghijklmnopqrst"!=i(u({},t)).join("")}))?function(e,t){for(var n=c(e),r=arguments.length,u=1,d=a.f,f=s.f;r>u;)for(var h,p=l(arguments[u++]),m=d?i(p).concat(d(p)):i(p),v=m.length,g=0;v>g;)h=m[g++],o&&!f.call(p,h)||(n[h]=p[h]);return n}:u},function(e,t,n){"use strict";var o=n(0),r=n(25),i=n(132),a=n(1),s=n(22),c=n(94),l=n(140),u=n(11);o({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){i.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=c(this,s("Promise")),n="function"==typeof e;return this.then(n?function(n){return l(t,e()).then((function(){return n}))}:e,n?function(n){return l(t,e()).then((function(){throw n}))}:e)}}),r||"function"!=typeof i||i.prototype.finally||u(i.prototype,"finally",s("Promise").prototype.finally)},function(e,t,n){"use strict";var o=n(93),r=n(135);e.exports=o?{}.toString:function(){return"[object "+r(this)+"]"}},function(e,t,n){"use strict";var o=n(0),r=n(209).left,i=n(42),a=n(18),s=i("reduce"),c=a("reduce",{1:0});o({target:"Array",proto:!0,forced:!s||!c},{reduce:function(e){return r(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var o=n(26),r=n(15),i=n(35),a=n(12),s=function(e){return function(t,n,s,c){o(n);var l=r(t),u=i(l),d=a(l.length),f=e?d-1:0,h=e?-1:1;if(s<2)for(;;){if(f in u){c=u[f],f+=h;break}if(f+=h,e?f<0:d<=f)throw TypeError("Reduce of empty array with no initial value")}for(;e?f>=0:d>f;f+=h)f in u&&(c=n(c,u[f],f,l));return c}};e.exports={left:s(!1),right:s(!0)}},function(e,t,n){var o=n(0),r=n(147),i=n(1),a=n(4),s=n(211).onFreeze,c=Object.freeze;o({target:"Object",stat:!0,forced:i((function(){c(1)})),sham:!r},{freeze:function(e){return c&&a(e)?c(s(e)):e}})},function(e,t,n){var o=n(38),r=n(4),i=n(7),a=n(9).f,s=n(54),c=n(147),l=s("meta"),u=0,d=Object.isExtensible||function(){return!0},f=function(e){a(e,l,{value:{objectID:"O"+ ++u,weakData:{}}})},h=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!r(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,l)){if(!d(e))return"F";if(!t)return"E";f(e)}return e[l].objectID},getWeakData:function(e,t){if(!i(e,l)){if(!d(e))return!0;if(!t)return!1;f(e)}return e[l].weakData},onFreeze:function(e){return c&&h.REQUIRED&&d(e)&&!i(e,l)&&f(e),e}};o[l]=!0},function(e,t,n){var o=n(13),r=n(49).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return r(e)}catch(e){return a.slice()}}(e):r(o(e))}},function(e,t,n){"use strict";var o=n(59),r=n(15),i=n(136),a=n(133),s=n(12),c=n(61),l=n(134);e.exports=function(e){var t,n,u,d,f,h,p=r(e),m="function"==typeof this?this:Array,v=arguments.length,g=v>1?arguments[1]:void 0,y=void 0!==g,w=l(p),b=0;if(y&&(g=o(g,v>2?arguments[2]:void 0,2)),null==w||m==Array&&a(w))for(n=new m(t=s(p.length));t>b;b++)h=y?g(p[b],b):p[b],c(n,b,h);else for(f=(d=w.call(p)).next,n=new m;!(u=f.call(d)).done;b++)h=y?i(d,g,[u.value,b],!0):u.value,c(n,b,h);return n.length=b,n}},function(e,t,n){var o=n(157),r=n(215);e.exports=function e(t,n,i,a,s){var c=-1,l=t.length;for(i||(i=r),s||(s=[]);++c<l;){var u=t[c];n>0&&i(u)?n>1?e(u,n-1,i,a,s):o(s,u):a||(s[s.length]=u)}return s}},function(e,t,n){var o=n(44),r=n(98),i=n(16),a=o?o.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||r(e)||!!(a&&e&&e[a])}},function(e,t,n){var o=n(33),r=n(28);e.exports=function(e){return r(e)&&"[object Arguments]"==o(e)}},function(e,t,n){var o=n(44),r=Object.prototype,i=r.hasOwnProperty,a=r.toString,s=o?o.toStringTag:void 0;e.exports=function(e){var t=i.call(e,s),n=e[s];try{e[s]=void 0;var o=!0}catch(e){}var r=a.call(e);return o&&(t?e[s]=n:delete e[s]),r}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var o=n(220),r=n(276),i=n(106),a=n(16),s=n(287);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?a(e)?r(e[0],e[1]):o(e):s(e)}},function(e,t,n){var o=n(221),r=n(275),i=n(175);e.exports=function(e){var t=r(e);return 1==t.length&&t[0][2]?i(t[0][0],t[0][1]):function(n){return n===e||o(n,e,t)}}},function(e,t,n){var o=n(159),r=n(163);e.exports=function(e,t,n,i){var a=n.length,s=a,c=!i;if(null==e)return!s;for(e=Object(e);a--;){var l=n[a];if(c&&l[2]?l[1]!==e[l[0]]:!(l[0]in e))return!1}for(;++a<s;){var u=(l=n[a])[0],d=e[u],f=l[1];if(c&&l[2]){if(void 0===d&&!(u in e))return!1}else{var h=new o;if(i)var p=i(d,f,u,e,t,h);if(!(void 0===p?r(f,d,3,i,h):p))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var o=n(65),r=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=o(t,e);return!(n<0)&&(n==t.length-1?t.pop():r.call(t,n,1),--this.size,!0)}},function(e,t,n){var o=n(65);e.exports=function(e){var t=this.__data__,n=o(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var o=n(65);e.exports=function(e){return o(this.__data__,e)>-1}},function(e,t,n){var o=n(65);e.exports=function(e,t){var n=this.__data__,r=o(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this}},function(e,t,n){var o=n(64);e.exports=function(){this.__data__=new o,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var o=n(64),r=n(99),i=n(101);e.exports=function(e,t){var n=this.__data__;if(n instanceof o){var a=n.__data__;if(!r||a.length<199)return a.push([e,t]),this.size=++n.size,this;n=this.__data__=new i(a)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var o=n(161),r=n(233),i=n(100),a=n(162),s=/^\[object .+?Constructor\]$/,c=Function.prototype,l=Object.prototype,u=c.toString,d=l.hasOwnProperty,f=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||r(e))&&(o(e)?f:s).test(a(e))}},function(e,t,n){var o,r=n(234),i=(o=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+o:"";e.exports=function(e){return!!i&&i in e}},function(e,t,n){var o=n(19)["__core-js_shared__"];e.exports=o},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var o=n(237),r=n(64),i=n(99);e.exports=function(){this.size=0,this.__data__={hash:new o,map:new(i||r),string:new o}}},function(e,t,n){var o=n(238),r=n(239),i=n(240),a=n(241),s=n(242);function c(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var o=e[t];this.set(o[0],o[1])}}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,e.exports=c},function(e,t,n){var o=n(66);e.exports=function(){this.__data__=o?o(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var o=n(66),r=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(o){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return r.call(t,e)?t[e]:void 0}},function(e,t,n){var o=n(66),r=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return o?void 0!==t[e]:r.call(t,e)}},function(e,t,n){var o=n(66);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=o&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var o=n(67);e.exports=function(e){var t=o(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var o=n(67);e.exports=function(e){return o(this,e).get(e)}},function(e,t,n){var o=n(67);e.exports=function(e){return o(this,e).has(e)}},function(e,t,n){var o=n(67);e.exports=function(e,t){var n=o(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this}},function(e,t,n){var o=n(159),r=n(164),i=n(252),a=n(255),s=n(271),c=n(16),l=n(168),u=n(171),d="[object Object]",f=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,h,p,m){var v=c(e),g=c(t),y=v?"[object Array]":s(e),w=g?"[object Array]":s(t),b=(y="[object Arguments]"==y?d:y)==d,k=(w="[object Arguments]"==w?d:w)==d,x=y==w;if(x&&l(e)){if(!l(t))return!1;v=!0,b=!1}if(x&&!b)return m||(m=new o),v||u(e)?r(e,t,n,h,p,m):i(e,t,y,n,h,p,m);if(!(1&n)){var S=b&&f.call(e,"__wrapped__"),T=k&&f.call(t,"__wrapped__");if(S||T){var C=S?e.value():e,A=T?t.value():t;return m||(m=new o),p(C,A,n,h,m)}}return!!x&&(m||(m=new o),a(e,t,n,h,p,m))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,o=null==e?0:e.length;++n<o;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var o=n(44),r=n(253),i=n(160),a=n(164),s=n(254),c=n(102),l=o?o.prototype:void 0,u=l?l.valueOf:void 0;e.exports=function(e,t,n,o,l,d,f){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!d(new r(e),new r(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var h=s;case"[object Set]":var p=1&o;if(h||(h=c),e.size!=t.size&&!p)return!1;var m=f.get(e);if(m)return m==t;o|=2,f.set(e,t);var v=a(h(e),h(t),o,l,d,f);return f.delete(e),v;case"[object Symbol]":if(u)return u.call(e)==u.call(t)}return!1}},function(e,t,n){var o=n(19).Uint8Array;e.exports=o},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,o){n[++t]=[o,e]})),n}},function(e,t,n){var o=n(256),r=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,i,a,s){var c=1&n,l=o(e),u=l.length;if(u!=o(t).length&&!c)return!1;for(var d=u;d--;){var f=l[d];if(!(c?f in t:r.call(t,f)))return!1}var h=s.get(e);if(h&&s.get(t))return h==t;var p=!0;s.set(e,t),s.set(t,e);for(var m=c;++d<u;){var v=e[f=l[d]],g=t[f];if(i)var y=c?i(g,v,f,t,e,s):i(v,g,f,e,t,s);if(!(void 0===y?v===g||a(v,g,n,i,s):y)){p=!1;break}m||(m="constructor"==f)}if(p&&!m){var w=e.constructor,b=t.constructor;w==b||!("constructor"in e)||!("constructor"in t)||"function"==typeof w&&w instanceof w&&"function"==typeof b&&b instanceof b||(p=!1)}return s.delete(e),s.delete(t),p}},function(e,t,n){var o=n(257),r=n(258),i=n(167);e.exports=function(e){return o(e,i,r)}},function(e,t,n){var o=n(157),r=n(16);e.exports=function(e,t,n){var i=t(e);return r(e)?i:o(i,n(e))}},function(e,t,n){var o=n(259),r=n(260),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(e){return null==e?[]:(e=Object(e),o(a(e),(function(t){return i.call(e,t)})))}:r;e.exports=s},function(e,t){e.exports=function(e,t){for(var n=-1,o=null==e?0:e.length,r=0,i=[];++n<o;){var a=e[n];t(a,n,e)&&(i[r++]=a)}return i}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var o=n(262),r=n(98),i=n(16),a=n(168),s=n(170),c=n(171),l=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=i(e),u=!n&&r(e),d=!n&&!u&&a(e),f=!n&&!u&&!d&&c(e),h=n||u||d||f,p=h?o(e.length,String):[],m=p.length;for(var v in e)!t&&!l.call(e,v)||h&&("length"==v||d&&("offset"==v||"parent"==v)||f&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||s(v,m))||p.push(v);return p}},function(e,t){e.exports=function(e,t){for(var n=-1,o=Array(e);++n<e;)o[n]=t(n);return o}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var o=n(33),r=n(103),i=n(28),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&r(e.length)&&!!a[o(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var o=n(158),r=t&&!t.nodeType&&t,i=r&&"object"==typeof e&&e&&!e.nodeType&&e,a=i&&i.exports===r&&o.process,s=function(){try{var e=i&&i.require&&i.require("util").types;return e||a&&a.binding&&a.binding("util")}catch(e){}}();e.exports=s}).call(this,n(169)(e))},function(e,t,n){var o=n(268),r=n(269),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!o(e))return r(e);var t=[];for(var n in Object(e))i.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var o=n(270)(Object.keys,Object);e.exports=o},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var o=n(272),r=n(99),i=n(273),a=n(173),s=n(274),c=n(33),l=n(162),u=l(o),d=l(r),f=l(i),h=l(a),p=l(s),m=c;(o&&"[object DataView]"!=m(new o(new ArrayBuffer(1)))||r&&"[object Map]"!=m(new r)||i&&"[object Promise]"!=m(i.resolve())||a&&"[object Set]"!=m(new a)||s&&"[object WeakMap]"!=m(new s))&&(m=function(e){var t=c(e),n="[object Object]"==t?e.constructor:void 0,o=n?l(n):"";if(o)switch(o){case u:return"[object DataView]";case d:return"[object Map]";case f:return"[object Promise]";case h:return"[object Set]";case p:return"[object WeakMap]"}return t}),e.exports=m},function(e,t,n){var o=n(27)(n(19),"DataView");e.exports=o},function(e,t,n){var o=n(27)(n(19),"Promise");e.exports=o},function(e,t,n){var o=n(27)(n(19),"WeakMap");e.exports=o},function(e,t,n){var o=n(174),r=n(167);e.exports=function(e){for(var t=r(e),n=t.length;n--;){var i=t[n],a=e[i];t[n]=[i,a,o(a)]}return t}},function(e,t,n){var o=n(163),r=n(277),i=n(284),a=n(104),s=n(174),c=n(175),l=n(68);e.exports=function(e,t){return a(e)&&s(t)?c(l(e),t):function(n){var a=r(n,e);return void 0===a&&a===t?i(n,e):o(t,a,3)}}},function(e,t,n){var o=n(176);e.exports=function(e,t,n){var r=null==e?void 0:o(e,t);return void 0===r?n:r}},function(e,t,n){var o=n(279),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=o((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(r,(function(e,n,o,r){t.push(o?r.replace(i,"$1"):n||e)})),t}));e.exports=a},function(e,t,n){var o=n(280);e.exports=function(e){var t=o(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var o=n(101);function r(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var o=arguments,r=t?t.apply(this,o):o[0],i=n.cache;if(i.has(r))return i.get(r);var a=e.apply(this,o);return n.cache=i.set(r,a)||i,a};return n.cache=new(r.Cache||o),n}r.Cache=o,e.exports=r},function(e,t,n){var o=n(282);e.exports=function(e){return null==e?"":o(e)}},function(e,t,n){var o=n(44),r=n(283),i=n(16),a=n(105),s=o?o.prototype:void 0,c=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(i(t))return r(t,e)+"";if(a(t))return c?c.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,o=null==e?0:e.length,r=Array(o);++n<o;)r[n]=t(e[n],n,e);return r}},function(e,t,n){var o=n(285),r=n(286);e.exports=function(e,t){return null!=e&&r(e,t,o)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var o=n(177),r=n(98),i=n(16),a=n(170),s=n(103),c=n(68);e.exports=function(e,t,n){for(var l=-1,u=(t=o(t,e)).length,d=!1;++l<u;){var f=c(t[l]);if(!(d=null!=e&&n(e,f)))break;e=e[f]}return d||++l!=u?d:!!(u=null==e?0:e.length)&&s(u)&&a(f,u)&&(i(e)||r(e))}},function(e,t,n){var o=n(288),r=n(289),i=n(104),a=n(68);e.exports=function(e){return i(e)?o(a(e)):r(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var o=n(176);e.exports=function(e){return function(t){return o(t,e)}}},function(e,t,n){var o=n(106),r=n(291),i=n(293);e.exports=function(e,t){return i(r(e,t,o),e+"")}},function(e,t,n){var o=n(292),r=Math.max;e.exports=function(e,t,n){return t=r(void 0===t?e.length-1:t,0),function(){for(var i=arguments,a=-1,s=r(i.length-t,0),c=Array(s);++a<s;)c[a]=i[t+a];a=-1;for(var l=Array(t+1);++a<t;)l[a]=i[a];return l[t]=n(c),o(e,this,l)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var o=n(294),r=n(297)(o);e.exports=r},function(e,t,n){var o=n(295),r=n(296),i=n(106),a=r?function(e,t){return r(e,"toString",{configurable:!0,enumerable:!1,value:o(t),writable:!0})}:i;e.exports=a},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var o=n(27),r=function(){try{var e=o(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=r},function(e,t){var n=Date.now;e.exports=function(e){var t=0,o=0;return function(){var r=n(),i=16-(r-o);if(o=r,i>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var o=n(165),r=n(299),i=n(304),a=n(166),s=n(305),c=n(102);e.exports=function(e,t,n){var l=-1,u=r,d=e.length,f=!0,h=[],p=h;if(n)f=!1,u=i;else if(d>=200){var m=t?null:s(e);if(m)return c(m);f=!1,u=a,p=new o}else p=t?[]:h;e:for(;++l<d;){var v=e[l],g=t?t(v):v;if(v=n||0!==v?v:0,f&&g==g){for(var y=p.length;y--;)if(p[y]===g)continue e;t&&p.push(g),h.push(v)}else u(p,g,n)||(p!==h&&p.push(g),h.push(v))}return h}},function(e,t,n){var o=n(300);e.exports=function(e,t){return!!(null==e?0:e.length)&&o(e,t,0)>-1}},function(e,t,n){var o=n(301),r=n(302),i=n(303);e.exports=function(e,t,n){return t==t?i(e,t,n):o(e,r,n)}},function(e,t){e.exports=function(e,t,n,o){for(var r=e.length,i=n+(o?1:-1);o?i--:++i<r;)if(t(e[i],i,e))return i;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var o=n-1,r=e.length;++o<r;)if(e[o]===t)return o;return-1}},function(e,t){e.exports=function(e,t,n){for(var o=-1,r=null==e?0:e.length;++o<r;)if(n(t,e[o]))return!0;return!1}},function(e,t,n){var o=n(173),r=n(306),i=n(102),a=o&&1/i(new o([,-0]))[1]==1/0?function(e){return new o(e)}:r;e.exports=a},function(e,t){e.exports=function(){}},function(e,t,n){var o=n(172),r=n(28);e.exports=function(e){return r(e)&&o(e)}},function(e,t,n){var o=n(0),r=n(5);o({target:"Object",stat:!0,forced:!r,sham:!r},{defineProperties:n(121)})},function(e,t,n){var o=n(0),r=n(1),i=n(13),a=n(23).f,s=n(5),c=r((function(){a(1)}));o({target:"Object",stat:!0,forced:!s||c,sham:!s},{getOwnPropertyDescriptor:function(e,t){return a(i(e),t)}})},function(e,t,n){var o=n(2),r=n(116).trim,i=n(117),a=o.parseInt,s=/^[+-]?0[Xx]/,c=8!==a(i+"08")||22!==a(i+"0x16");e.exports=c?function(e,t){var n=r(String(e));return a(n,t>>>0||(s.test(n)?16:10))}:a},function(e,t,n){"use strict";var o=n(69);n.n(o).a},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";var o=n(5),r=n(2),i=n(79),a=n(11),s=n(7),c=n(17),l=n(193),u=n(36),d=n(1),f=n(29),h=n(49).f,p=n(23).f,m=n(9).f,v=n(116).trim,g=r.Number,y=g.prototype,w="Number"==c(f(y)),b=function(e){var t,n,o,r,i,a,s,c,l=u(e,!1);if("string"==typeof l&&l.length>2)if(43===(t=(l=v(l)).charCodeAt(0))||45===t){if(88===(n=l.charCodeAt(2))||120===n)return NaN}else if(48===t){switch(l.charCodeAt(1)){case 66:case 98:o=2,r=49;break;case 79:case 111:o=8,r=55;break;default:return+l}for(a=(i=l.slice(2)).length,s=0;s<a;s++)if((c=i.charCodeAt(s))<48||c>r)return NaN;return parseInt(i,o)}return+l};if(i("Number",!g(" 0o1")||!g("0b1")||g("+0x1"))){for(var k,x=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof x&&(w?d((function(){y.valueOf.call(n)})):"Number"!=c(n))?l(new g(b(t)),n,x):b(t)},S=o?h(g):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),T=0;S.length>T;T++)s(g,k=S[T])&&!s(x,k)&&m(x,k,p(g,k));x.prototype=y,y.constructor=x,a(r,"Number",x)}},function(e,t,n){"use strict";var o=n(70);n.n(o).a},function(e,t,n){},function(e,t,n){"use strict";var o=n(71);n.n(o).a},function(e,t,n){"use strict";var o=n(72);n.n(o).a},function(e,t,n){"use strict";var o=n(26),r=n(4),i=[].slice,a={},s=function(e,t,n){if(!(t in a)){for(var o=[],r=0;r<t;r++)o[r]="a["+r+"]";a[t]=Function("C,a","return new C("+o.join(",")+")")}return a[t](e,n)};e.exports=Function.bind||function(e){var t=o(this),n=i.call(arguments,1),a=function(){var o=n.concat(i.call(arguments));return this instanceof a?s(t,o.length,o):t.apply(e,o)};return r(t.prototype)&&(a.prototype=t.prototype),a}},function(e,t,n){"use strict";var o=n(73);n.n(o).a},function(e,t,n){"use strict";n.r(t);n(34),n(131),n(204),n(206),n(21),n(77),n(50),n(10),n(31),n(41),n(145);function o(e,t,n,o,r,i,a){try{var s=e[i](a),c=s.value}catch(e){return void n(e)}s.done?t(c):Promise.resolve(c).then(o,r)}function r(e){return function(){var t=this,n=arguments;return new Promise((function(r,i){var a=e.apply(t,n);function s(e){o(a,r,i,s,c,"next",e)}function c(e){o(a,r,i,s,c,"throw",e)}s(void 0)}))}}
/*!
 * Vue.js v2.6.11
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */var i=Object.freeze({});function a(e){return null==e}function s(e){return null!=e}function c(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function u(e){return null!==e&&"object"==typeof e}var d=Object.prototype.toString;function f(e){return"[object Object]"===d.call(e)}function h(e){return"[object RegExp]"===d.call(e)}function p(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function m(e){return s(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function v(e){return null==e?"":Array.isArray(e)||f(e)&&e.toString===d?JSON.stringify(e,null,2):String(e)}function g(e){var t=parseFloat(e);return isNaN(t)?e:t}function y(e,t){for(var n=Object.create(null),o=e.split(","),r=0;r<o.length;r++)n[o[r]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}y("slot,component",!0);var w=y("key,ref,slot,slot-scope,is");function b(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var k=Object.prototype.hasOwnProperty;function x(e,t){return k.call(e,t)}function S(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var T=/-(\w)/g,C=S((function(e){return e.replace(T,(function(e,t){return t?t.toUpperCase():""}))})),A=S((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),I=/\B([A-Z])/g,_=S((function(e){return e.replace(I,"-$1").toLowerCase()}));var E=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var o=arguments.length;return o?o>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function O(e,t){t=t||0;for(var n=e.length-t,o=new Array(n);n--;)o[n]=e[n+t];return o}function P(e,t){for(var n in t)e[n]=t[n];return e}function j(e){for(var t={},n=0;n<e.length;n++)e[n]&&P(t,e[n]);return t}function W(e,t,n){}var D=function(e,t,n){return!1},N=function(e){return e};function R(e,t){if(e===t)return!0;var n=u(e),o=u(t);if(!n||!o)return!n&&!o&&String(e)===String(t);try{var r=Array.isArray(e),i=Array.isArray(t);if(r&&i)return e.length===t.length&&e.every((function(e,n){return R(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(r||i)return!1;var a=Object.keys(e),s=Object.keys(t);return a.length===s.length&&a.every((function(n){return R(e[n],t[n])}))}catch(e){return!1}}function L(e,t){for(var n=0;n<e.length;n++)if(R(e[n],t))return n;return-1}function F(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var H=["component","directive","filter"],q=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],$={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:D,isReservedAttr:D,isUnknownElement:D,getTagNamespace:W,parsePlatformTagName:N,mustUseProp:D,async:!0,_lifecycleHooks:q},M=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(e,t,n,o){Object.defineProperty(e,t,{value:n,enumerable:!!o,writable:!0,configurable:!0})}var U=new RegExp("[^"+M.source+".$_\\d]");var B,z="__proto__"in{},V="undefined"!=typeof window,Y="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,K=Y&&WXEnvironment.platform.toLowerCase(),J=V&&window.navigator.userAgent.toLowerCase(),Q=J&&/msie|trident/.test(J),X=J&&J.indexOf("msie 9.0")>0,Z=J&&J.indexOf("edge/")>0,ee=(J&&J.indexOf("android"),J&&/iphone|ipad|ipod|ios/.test(J)||"ios"===K),te=(J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\/(\d+)/)),ne={}.watch,oe=!1;if(V)try{var re={};Object.defineProperty(re,"passive",{get:function(){oe=!0}}),window.addEventListener("test-passive",null,re)}catch(e){}var ie=function(){return void 0===B&&(B=!V&&!Y&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),B},ae=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function se(e){return"function"==typeof e&&/native code/.test(e.toString())}var ce,le="undefined"!=typeof Symbol&&se(Symbol)&&"undefined"!=typeof Reflect&&se(Reflect.ownKeys);ce="undefined"!=typeof Set&&se(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ue=W,de=0,fe=function(){this.id=de++,this.subs=[]};fe.prototype.addSub=function(e){this.subs.push(e)},fe.prototype.removeSub=function(e){b(this.subs,e)},fe.prototype.depend=function(){fe.target&&fe.target.addDep(this)},fe.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},fe.target=null;var he=[];function pe(e){he.push(e),fe.target=e}function me(){he.pop(),fe.target=he[he.length-1]}var ve=function(e,t,n,o,r,i,a,s){this.tag=e,this.data=t,this.children=n,this.text=o,this.elm=r,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},ge={child:{configurable:!0}};ge.child.get=function(){return this.componentInstance},Object.defineProperties(ve.prototype,ge);var ye=function(e){void 0===e&&(e="");var t=new ve;return t.text=e,t.isComment=!0,t};function we(e){return new ve(void 0,void 0,void 0,String(e))}function be(e){var t=new ve(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ke=Array.prototype,xe=Object.create(ke);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ke[e];G(xe,e,(function(){for(var n=[],o=arguments.length;o--;)n[o]=arguments[o];var r,i=t.apply(this,n),a=this.__ob__;switch(e){case"push":case"unshift":r=n;break;case"splice":r=n.slice(2)}return r&&a.observeArray(r),a.dep.notify(),i}))}));var Se=Object.getOwnPropertyNames(xe),Te=!0;function Ce(e){Te=e}var Ae=function(e){this.value=e,this.dep=new fe,this.vmCount=0,G(e,"__ob__",this),Array.isArray(e)?(z?function(e,t){e.__proto__=t}(e,xe):function(e,t,n){for(var o=0,r=n.length;o<r;o++){var i=n[o];G(e,i,t[i])}}(e,xe,Se),this.observeArray(e)):this.walk(e)};function Ie(e,t){var n;if(u(e)&&!(e instanceof ve))return x(e,"__ob__")&&e.__ob__ instanceof Ae?n=e.__ob__:Te&&!ie()&&(Array.isArray(e)||f(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Ae(e)),t&&n&&n.vmCount++,n}function _e(e,t,n,o,r){var i=new fe,a=Object.getOwnPropertyDescriptor(e,t);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set;s&&!c||2!==arguments.length||(n=e[t]);var l=!r&&Ie(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return fe.target&&(i.depend(),l&&(l.dep.depend(),Array.isArray(t)&&Pe(t))),t},set:function(t){var o=s?s.call(e):n;t===o||t!=t&&o!=o||s&&!c||(c?c.call(e,t):n=t,l=!r&&Ie(t),i.notify())}})}}function Ee(e,t,n){if(Array.isArray(e)&&p(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var o=e.__ob__;return e._isVue||o&&o.vmCount?n:o?(_e(o.value,t,n),o.dep.notify(),n):(e[t]=n,n)}function Oe(e,t){if(Array.isArray(e)&&p(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||x(e,t)&&(delete e[t],n&&n.dep.notify())}}function Pe(e){for(var t=void 0,n=0,o=e.length;n<o;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Pe(t)}Ae.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)_e(e,t[n])},Ae.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Ie(e[t])};var je=$.optionMergeStrategies;function We(e,t){if(!t)return e;for(var n,o,r,i=le?Reflect.ownKeys(t):Object.keys(t),a=0;a<i.length;a++)"__ob__"!==(n=i[a])&&(o=e[n],r=t[n],x(e,n)?o!==r&&f(o)&&f(r)&&We(o,r):Ee(e,n,r));return e}function De(e,t,n){return n?function(){var o="function"==typeof t?t.call(n,n):t,r="function"==typeof e?e.call(n,n):e;return o?We(o,r):r}:t?e?function(){return We("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Ne(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Re(e,t,n,o){var r=Object.create(e||null);return t?P(r,t):r}je.data=function(e,t,n){return n?De(e,t,n):t&&"function"!=typeof t?e:De(e,t)},q.forEach((function(e){je[e]=Ne})),H.forEach((function(e){je[e+"s"]=Re})),je.watch=function(e,t,n,o){if(e===ne&&(e=void 0),t===ne&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var r={};for(var i in P(r,e),t){var a=r[i],s=t[i];a&&!Array.isArray(a)&&(a=[a]),r[i]=a?a.concat(s):Array.isArray(s)?s:[s]}return r},je.props=je.methods=je.inject=je.computed=function(e,t,n,o){if(!e)return t;var r=Object.create(null);return P(r,e),t&&P(r,t),r},je.provide=De;var Le=function(e,t){return void 0===t?e:t};function Fe(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var o,r,i={};if(Array.isArray(n))for(o=n.length;o--;)"string"==typeof(r=n[o])&&(i[C(r)]={type:null});else if(f(n))for(var a in n)r=n[a],i[C(a)]=f(r)?r:{type:r};else 0;e.props=i}}(t),function(e,t){var n=e.inject;if(n){var o=e.inject={};if(Array.isArray(n))for(var r=0;r<n.length;r++)o[n[r]]={from:n[r]};else if(f(n))for(var i in n){var a=n[i];o[i]=f(a)?P({from:i},a):{from:a}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var o=t[n];"function"==typeof o&&(t[n]={bind:o,update:o})}}(t),!t._base&&(t.extends&&(e=Fe(e,t.extends,n)),t.mixins))for(var o=0,r=t.mixins.length;o<r;o++)e=Fe(e,t.mixins[o],n);var i,a={};for(i in e)s(i);for(i in t)x(e,i)||s(i);function s(o){var r=je[o]||Le;a[o]=r(e[o],t[o],n,o)}return a}function He(e,t,n,o){if("string"==typeof n){var r=e[t];if(x(r,n))return r[n];var i=C(n);if(x(r,i))return r[i];var a=A(i);return x(r,a)?r[a]:r[n]||r[i]||r[a]}}function qe(e,t,n,o){var r=t[e],i=!x(n,e),a=n[e],s=Ge(Boolean,r.type);if(s>-1)if(i&&!x(r,"default"))a=!1;else if(""===a||a===_(e)){var c=Ge(String,r.type);(c<0||s<c)&&(a=!0)}if(void 0===a){a=function(e,t,n){if(!x(t,"default"))return;var o=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof o&&"Function"!==$e(t.type)?o.call(e):o}(o,r,e);var l=Te;Ce(!0),Ie(a),Ce(l)}return a}function $e(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Me(e,t){return $e(e)===$e(t)}function Ge(e,t){if(!Array.isArray(t))return Me(t,e)?0:-1;for(var n=0,o=t.length;n<o;n++)if(Me(t[n],e))return n;return-1}function Ue(e,t,n){pe();try{if(t)for(var o=t;o=o.$parent;){var r=o.$options.errorCaptured;if(r)for(var i=0;i<r.length;i++)try{if(!1===r[i].call(o,e,t,n))return}catch(e){ze(e,o,"errorCaptured hook")}}ze(e,t,n)}finally{me()}}function Be(e,t,n,o,r){var i;try{(i=n?e.apply(t,n):e.call(t))&&!i._isVue&&m(i)&&!i._handled&&(i.catch((function(e){return Ue(e,o,r+" (Promise/async)")})),i._handled=!0)}catch(e){Ue(e,o,r)}return i}function ze(e,t,n){if($.errorHandler)try{return $.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ve(t,null,"config.errorHandler")}Ve(e,t,n)}function Ve(e,t,n){if(!V&&!Y||"undefined"==typeof console)throw e;console.error(e)}var Ye,Ke=!1,Je=[],Qe=!1;function Xe(){Qe=!1;var e=Je.slice(0);Je.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&se(Promise)){var Ze=Promise.resolve();Ye=function(){Ze.then(Xe),ee&&setTimeout(W)},Ke=!0}else if(Q||"undefined"==typeof MutationObserver||!se(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ye="undefined"!=typeof setImmediate&&se(setImmediate)?function(){setImmediate(Xe)}:function(){setTimeout(Xe,0)};else{var et=1,tt=new MutationObserver(Xe),nt=document.createTextNode(String(et));tt.observe(nt,{characterData:!0}),Ye=function(){et=(et+1)%2,nt.data=String(et)},Ke=!0}function ot(e,t){var n;if(Je.push((function(){if(e)try{e.call(t)}catch(e){Ue(e,t,"nextTick")}else n&&n(t)})),Qe||(Qe=!0,Ye()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var rt=new ce;function it(e){!function e(t,n){var o,r,i=Array.isArray(t);if(!i&&!u(t)||Object.isFrozen(t)||t instanceof ve)return;if(t.__ob__){var a=t.__ob__.dep.id;if(n.has(a))return;n.add(a)}if(i)for(o=t.length;o--;)e(t[o],n);else for(r=Object.keys(t),o=r.length;o--;)e(t[r[o]],n)}(e,rt),rt.clear()}var at=S((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),o="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=o?e.slice(1):e,once:n,capture:o,passive:t}}));function st(e,t){function n(){var e=arguments,o=n.fns;if(!Array.isArray(o))return Be(o,null,arguments,t,"v-on handler");for(var r=o.slice(),i=0;i<r.length;i++)Be(r[i],null,e,t,"v-on handler")}return n.fns=e,n}function ct(e,t,n,o,r,i){var s,l,u,d;for(s in e)l=e[s],u=t[s],d=at(s),a(l)||(a(u)?(a(l.fns)&&(l=e[s]=st(l,i)),c(d.once)&&(l=e[s]=r(d.name,l,d.capture)),n(d.name,l,d.capture,d.passive,d.params)):l!==u&&(u.fns=l,e[s]=u));for(s in t)a(e[s])&&o((d=at(s)).name,t[s],d.capture)}function lt(e,t,n){var o;e instanceof ve&&(e=e.data.hook||(e.data.hook={}));var r=e[t];function i(){n.apply(this,arguments),b(o.fns,i)}a(r)?o=st([i]):s(r.fns)&&c(r.merged)?(o=r).fns.push(i):o=st([r,i]),o.merged=!0,e[t]=o}function ut(e,t,n,o,r){if(s(t)){if(x(t,n))return e[n]=t[n],r||delete t[n],!0;if(x(t,o))return e[n]=t[o],r||delete t[o],!0}return!1}function dt(e){return l(e)?[we(e)]:Array.isArray(e)?function e(t,n){var o,r,i,u,d=[];for(o=0;o<t.length;o++)a(r=t[o])||"boolean"==typeof r||(i=d.length-1,u=d[i],Array.isArray(r)?r.length>0&&(ft((r=e(r,(n||"")+"_"+o))[0])&&ft(u)&&(d[i]=we(u.text+r[0].text),r.shift()),d.push.apply(d,r)):l(r)?ft(u)?d[i]=we(u.text+r):""!==r&&d.push(we(r)):ft(r)&&ft(u)?d[i]=we(u.text+r.text):(c(t._isVList)&&s(r.tag)&&a(r.key)&&s(n)&&(r.key="__vlist"+n+"_"+o+"__"),d.push(r)));return d}(e):void 0}function ft(e){return s(e)&&s(e.text)&&!1===e.isComment}function ht(e,t){if(e){for(var n=Object.create(null),o=le?Reflect.ownKeys(e):Object.keys(e),r=0;r<o.length;r++){var i=o[r];if("__ob__"!==i){for(var a=e[i].from,s=t;s;){if(s._provided&&x(s._provided,a)){n[i]=s._provided[a];break}s=s.$parent}if(!s)if("default"in e[i]){var c=e[i].default;n[i]="function"==typeof c?c.call(t):c}else 0}}return n}}function pt(e,t){if(!e||!e.length)return{};for(var n={},o=0,r=e.length;o<r;o++){var i=e[o],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==t&&i.fnContext!==t||!a||null==a.slot)(n.default||(n.default=[])).push(i);else{var s=a.slot,c=n[s]||(n[s]=[]);"template"===i.tag?c.push.apply(c,i.children||[]):c.push(i)}}for(var l in n)n[l].every(mt)&&delete n[l];return n}function mt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function vt(e,t,n){var o,r=Object.keys(t).length>0,a=e?!!e.$stable:!r,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(a&&n&&n!==i&&s===n.$key&&!r&&!n.$hasNormal)return n;for(var c in o={},e)e[c]&&"$"!==c[0]&&(o[c]=gt(t,c,e[c]))}else o={};for(var l in t)l in o||(o[l]=yt(t,l));return e&&Object.isExtensible(e)&&(e._normalized=o),G(o,"$stable",a),G(o,"$key",s),G(o,"$hasNormal",r),o}function gt(e,t,n){var o=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:dt(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:o,enumerable:!0,configurable:!0}),o}function yt(e,t){return function(){return e[t]}}function wt(e,t){var n,o,r,i,a;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),o=0,r=e.length;o<r;o++)n[o]=t(e[o],o);else if("number"==typeof e)for(n=new Array(e),o=0;o<e;o++)n[o]=t(o+1,o);else if(u(e))if(le&&e[Symbol.iterator]){n=[];for(var c=e[Symbol.iterator](),l=c.next();!l.done;)n.push(t(l.value,n.length)),l=c.next()}else for(i=Object.keys(e),n=new Array(i.length),o=0,r=i.length;o<r;o++)a=i[o],n[o]=t(e[a],a,o);return s(n)||(n=[]),n._isVList=!0,n}function bt(e,t,n,o){var r,i=this.$scopedSlots[e];i?(n=n||{},o&&(n=P(P({},o),n)),r=i(n)||t):r=this.$slots[e]||t;var a=n&&n.slot;return a?this.$createElement("template",{slot:a},r):r}function kt(e){return He(this.$options,"filters",e)||N}function xt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function St(e,t,n,o,r){var i=$.keyCodes[t]||n;return r&&o&&!$.keyCodes[t]?xt(r,o):i?xt(i,e):o?_(o)!==t:void 0}function Tt(e,t,n,o,r){if(n)if(u(n)){var i;Array.isArray(n)&&(n=j(n));var a=function(a){if("class"===a||"style"===a||w(a))i=e;else{var s=e.attrs&&e.attrs.type;i=o||$.mustUseProp(t,s,a)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var c=C(a),l=_(a);c in i||l in i||(i[a]=n[a],r&&((e.on||(e.on={}))["update:"+a]=function(e){n[a]=e}))};for(var s in n)a(s)}else;return e}function Ct(e,t){var n=this._staticTrees||(this._staticTrees=[]),o=n[e];return o&&!t||It(o=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),o}function At(e,t,n){return It(e,"__once__"+t+(n?"_"+n:""),!0),e}function It(e,t,n){if(Array.isArray(e))for(var o=0;o<e.length;o++)e[o]&&"string"!=typeof e[o]&&_t(e[o],t+"_"+o,n);else _t(e,t,n)}function _t(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Et(e,t){if(t)if(f(t)){var n=e.on=e.on?P({},e.on):{};for(var o in t){var r=n[o],i=t[o];n[o]=r?[].concat(r,i):i}}else;return e}function Ot(e,t,n,o){t=t||{$stable:!n};for(var r=0;r<e.length;r++){var i=e[r];Array.isArray(i)?Ot(i,t,n):i&&(i.proxy&&(i.fn.proxy=!0),t[i.key]=i.fn)}return o&&(t.$key=o),t}function Pt(e,t){for(var n=0;n<t.length;n+=2){var o=t[n];"string"==typeof o&&o&&(e[t[n]]=t[n+1])}return e}function jt(e,t){return"string"==typeof e?t+e:e}function Wt(e){e._o=At,e._n=g,e._s=v,e._l=wt,e._t=bt,e._q=R,e._i=L,e._m=Ct,e._f=kt,e._k=St,e._b=Tt,e._v=we,e._e=ye,e._u=Ot,e._g=Et,e._d=Pt,e._p=jt}function Dt(e,t,n,o,r){var a,s=this,l=r.options;x(o,"_uid")?(a=Object.create(o))._original=o:(a=o,o=o._original);var u=c(l._compiled),d=!u;this.data=e,this.props=t,this.children=n,this.parent=o,this.listeners=e.on||i,this.injections=ht(l.inject,o),this.slots=function(){return s.$slots||vt(e.scopedSlots,s.$slots=pt(n,o)),s.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return vt(e.scopedSlots,this.slots())}}),u&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=vt(e.scopedSlots,this.$slots)),l._scopeId?this._c=function(e,t,n,r){var i=$t(a,e,t,n,r,d);return i&&!Array.isArray(i)&&(i.fnScopeId=l._scopeId,i.fnContext=o),i}:this._c=function(e,t,n,o){return $t(a,e,t,n,o,d)}}function Nt(e,t,n,o,r){var i=be(e);return i.fnContext=n,i.fnOptions=o,t.slot&&((i.data||(i.data={})).slot=t.slot),i}function Rt(e,t){for(var n in t)e[C(n)]=t[n]}Wt(Dt.prototype);var Lt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Lt.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},o=e.data.inlineTemplate;s(o)&&(n.render=o.render,n.staticRenderFns=o.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Qt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,o,r){0;var a=o.data.scopedSlots,s=e.$scopedSlots,c=!!(a&&!a.$stable||s!==i&&!s.$stable||a&&e.$scopedSlots.$key!==a.$key),l=!!(r||e.$options._renderChildren||c);e.$options._parentVnode=o,e.$vnode=o,e._vnode&&(e._vnode.parent=o);if(e.$options._renderChildren=r,e.$attrs=o.data.attrs||i,e.$listeners=n||i,t&&e.$options.props){Ce(!1);for(var u=e._props,d=e.$options._propKeys||[],f=0;f<d.length;f++){var h=d[f],p=e.$options.props;u[h]=qe(h,p,t,e)}Ce(!0),e.$options.propsData=t}n=n||i;var m=e.$options._parentListeners;e.$options._parentListeners=n,Jt(e,n,m),l&&(e.$slots=pt(r,o.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,o=e.componentInstance;o._isMounted||(o._isMounted=!0,tn(o,"mounted")),e.data.keepAlive&&(n._isMounted?((t=o)._inactive=!1,on.push(t)):en(o,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Zt(t)))return;if(!t._inactive){t._inactive=!0;for(var o=0;o<t.$children.length;o++)e(t.$children[o]);tn(t,"deactivated")}}(t,!0):t.$destroy())}},Ft=Object.keys(Lt);function Ht(e,t,n,o,r){if(!a(e)){var l=n.$options._base;if(u(e)&&(e=l.extend(e)),"function"==typeof e){var d;if(a(e.cid)&&void 0===(e=function(e,t){if(c(e.error)&&s(e.errorComp))return e.errorComp;if(s(e.resolved))return e.resolved;var n=Gt;n&&s(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(c(e.loading)&&s(e.loadingComp))return e.loadingComp;if(n&&!s(e.owners)){var o=e.owners=[n],r=!0,i=null,l=null;n.$on("hook:destroyed",(function(){return b(o,n)}));var d=function(e){for(var t=0,n=o.length;t<n;t++)o[t].$forceUpdate();e&&(o.length=0,null!==i&&(clearTimeout(i),i=null),null!==l&&(clearTimeout(l),l=null))},f=F((function(n){e.resolved=Ut(n,t),r?o.length=0:d(!0)})),h=F((function(t){s(e.errorComp)&&(e.error=!0,d(!0))})),p=e(f,h);return u(p)&&(m(p)?a(e.resolved)&&p.then(f,h):m(p.component)&&(p.component.then(f,h),s(p.error)&&(e.errorComp=Ut(p.error,t)),s(p.loading)&&(e.loadingComp=Ut(p.loading,t),0===p.delay?e.loading=!0:i=setTimeout((function(){i=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,d(!1))}),p.delay||200)),s(p.timeout)&&(l=setTimeout((function(){l=null,a(e.resolved)&&h(null)}),p.timeout)))),r=!1,e.loading?e.loadingComp:e.resolved}}(d=e,l)))return function(e,t,n,o,r){var i=ye();return i.asyncFactory=e,i.asyncMeta={data:t,context:n,children:o,tag:r},i}(d,t,n,o,r);t=t||{},Tn(e),s(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",o=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var r=t.on||(t.on={}),i=r[o],a=t.model.callback;s(i)?(Array.isArray(i)?-1===i.indexOf(a):i!==a)&&(r[o]=[a].concat(i)):r[o]=a}(e.options,t);var f=function(e,t,n){var o=t.options.props;if(!a(o)){var r={},i=e.attrs,c=e.props;if(s(i)||s(c))for(var l in o){var u=_(l);ut(r,c,l,u,!0)||ut(r,i,l,u,!1)}return r}}(t,e);if(c(e.options.functional))return function(e,t,n,o,r){var a=e.options,c={},l=a.props;if(s(l))for(var u in l)c[u]=qe(u,l,t||i);else s(n.attrs)&&Rt(c,n.attrs),s(n.props)&&Rt(c,n.props);var d=new Dt(n,c,r,o,e),f=a.render.call(null,d._c,d);if(f instanceof ve)return Nt(f,n,d.parent,a,d);if(Array.isArray(f)){for(var h=dt(f)||[],p=new Array(h.length),m=0;m<h.length;m++)p[m]=Nt(h[m],n,d.parent,a,d);return p}}(e,f,t,n,o);var h=t.on;if(t.on=t.nativeOn,c(e.options.abstract)){var p=t.slot;t={},p&&(t.slot=p)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Ft.length;n++){var o=Ft[n],r=t[o],i=Lt[o];r===i||r&&r._merged||(t[o]=r?qt(i,r):i)}}(t);var v=e.options.name||r;return new ve("vue-component-"+e.cid+(v?"-"+v:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:f,listeners:h,tag:r,children:o},d)}}}function qt(e,t){var n=function(n,o){e(n,o),t(n,o)};return n._merged=!0,n}function $t(e,t,n,o,r,i){return(Array.isArray(n)||l(n))&&(r=o,o=n,n=void 0),c(i)&&(r=2),function(e,t,n,o,r){if(s(n)&&s(n.__ob__))return ye();s(n)&&s(n.is)&&(t=n.is);if(!t)return ye();0;Array.isArray(o)&&"function"==typeof o[0]&&((n=n||{}).scopedSlots={default:o[0]},o.length=0);2===r?o=dt(o):1===r&&(o=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(o));var i,l;if("string"==typeof t){var d;l=e.$vnode&&e.$vnode.ns||$.getTagNamespace(t),i=$.isReservedTag(t)?new ve($.parsePlatformTagName(t),n,o,void 0,void 0,e):n&&n.pre||!s(d=He(e.$options,"components",t))?new ve(t,n,o,void 0,void 0,e):Ht(d,n,e,o,t)}else i=Ht(t,n,e,o);return Array.isArray(i)?i:s(i)?(s(l)&&function e(t,n,o){t.ns=n,"foreignObject"===t.tag&&(n=void 0,o=!0);if(s(t.children))for(var r=0,i=t.children.length;r<i;r++){var l=t.children[r];s(l.tag)&&(a(l.ns)||c(o)&&"svg"!==l.tag)&&e(l,n,o)}}(i,l),s(n)&&function(e){u(e.style)&&it(e.style);u(e.class)&&it(e.class)}(n),i):ye()}(e,t,n,o,r)}var Mt,Gt=null;function Ut(e,t){return(e.__esModule||le&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?t.extend(e):e}function Bt(e){return e.isComment&&e.asyncFactory}function zt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(s(n)&&(s(n.componentOptions)||Bt(n)))return n}}function Vt(e,t){Mt.$on(e,t)}function Yt(e,t){Mt.$off(e,t)}function Kt(e,t){var n=Mt;return function o(){var r=t.apply(null,arguments);null!==r&&n.$off(e,o)}}function Jt(e,t,n){Mt=e,ct(t,n||{},Vt,Yt,Kt,e),Mt=void 0}var Qt=null;function Xt(e){var t=Qt;return Qt=e,function(){Qt=t}}function Zt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function en(e,t){if(t){if(e._directInactive=!1,Zt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)en(e.$children[n]);tn(e,"activated")}}function tn(e,t){pe();var n=e.$options[t],o=t+" hook";if(n)for(var r=0,i=n.length;r<i;r++)Be(n[r],e,null,e,o);e._hasHookEvent&&e.$emit("hook:"+t),me()}var nn=[],on=[],rn={},an=!1,sn=!1,cn=0;var ln=0,un=Date.now;if(V&&!Q){var dn=window.performance;dn&&"function"==typeof dn.now&&un()>document.createEvent("Event").timeStamp&&(un=function(){return dn.now()})}function fn(){var e,t;for(ln=un(),sn=!0,nn.sort((function(e,t){return e.id-t.id})),cn=0;cn<nn.length;cn++)(e=nn[cn]).before&&e.before(),t=e.id,rn[t]=null,e.run();var n=on.slice(),o=nn.slice();cn=nn.length=on.length=0,rn={},an=sn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,en(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],o=n.vm;o._watcher===n&&o._isMounted&&!o._isDestroyed&&tn(o,"updated")}}(o),ae&&$.devtools&&ae.emit("flush")}var hn=0,pn=function(e,t,n,o,r){this.vm=e,r&&(e._watcher=this),e._watchers.push(this),o?(this.deep=!!o.deep,this.user=!!o.user,this.lazy=!!o.lazy,this.sync=!!o.sync,this.before=o.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++hn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ce,this.newDepIds=new ce,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!U.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=W)),this.value=this.lazy?void 0:this.get()};pn.prototype.get=function(){var e;pe(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Ue(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&it(e),me(),this.cleanupDeps()}return e},pn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},pn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},pn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==rn[t]){if(rn[t]=!0,sn){for(var n=nn.length-1;n>cn&&nn[n].id>e.id;)n--;nn.splice(n+1,0,e)}else nn.push(e);an||(an=!0,ot(fn))}}(this)},pn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){Ue(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},pn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},pn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},pn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||b(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var mn={enumerable:!0,configurable:!0,get:W,set:W};function vn(e,t,n){mn.get=function(){return this[t][n]},mn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,mn)}function gn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},o=e._props={},r=e.$options._propKeys=[];e.$parent&&Ce(!1);var i=function(i){r.push(i);var a=qe(i,t,n,e);_e(o,i,a),i in e||vn(e,"_props",i)};for(var a in t)i(a);Ce(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?W:E(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;f(t=e._data="function"==typeof t?function(e,t){pe();try{return e.call(t,t)}catch(e){return Ue(e,t,"data()"),{}}finally{me()}}(t,e):t||{})||(t={});var n=Object.keys(t),o=e.$options.props,r=(e.$options.methods,n.length);for(;r--;){var i=n[r];0,o&&x(o,i)||(a=void 0,36!==(a=(i+"").charCodeAt(0))&&95!==a&&vn(e,"_data",i))}var a;Ie(t,!0)}(e):Ie(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),o=ie();for(var r in t){var i=t[r],a="function"==typeof i?i:i.get;0,o||(n[r]=new pn(e,a||W,W,yn)),r in e||wn(e,r,i)}}(e,t.computed),t.watch&&t.watch!==ne&&function(e,t){for(var n in t){var o=t[n];if(Array.isArray(o))for(var r=0;r<o.length;r++)xn(e,n,o[r]);else xn(e,n,o)}}(e,t.watch)}var yn={lazy:!0};function wn(e,t,n){var o=!ie();"function"==typeof n?(mn.get=o?bn(t):kn(n),mn.set=W):(mn.get=n.get?o&&!1!==n.cache?bn(t):kn(n.get):W,mn.set=n.set||W),Object.defineProperty(e,t,mn)}function bn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),fe.target&&t.depend(),t.value}}function kn(e){return function(){return e.call(this,this)}}function xn(e,t,n,o){return f(n)&&(o=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,o)}var Sn=0;function Tn(e){var t=e.options;if(e.super){var n=Tn(e.super);if(n!==e.superOptions){e.superOptions=n;var o=function(e){var t,n=e.options,o=e.sealedOptions;for(var r in n)n[r]!==o[r]&&(t||(t={}),t[r]=n[r]);return t}(e);o&&P(e.extendOptions,o),(t=e.options=Fe(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Cn(e){this._init(e)}function An(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,o=n.cid,r=e._Ctor||(e._Ctor={});if(r[o])return r[o];var i=e.name||n.options.name;var a=function(e){this._init(e)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=t++,a.options=Fe(n.options,e),a.super=n,a.options.props&&function(e){var t=e.options.props;for(var n in t)vn(e.prototype,"_props",n)}(a),a.options.computed&&function(e){var t=e.options.computed;for(var n in t)wn(e.prototype,n,t[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,H.forEach((function(e){a[e]=n[e]})),i&&(a.options.components[i]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=P({},a.options),r[o]=a,a}}function In(e){return e&&(e.Ctor.options.name||e.tag)}function _n(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!h(e)&&e.test(t)}function En(e,t){var n=e.cache,o=e.keys,r=e._vnode;for(var i in n){var a=n[i];if(a){var s=In(a.componentOptions);s&&!t(s)&&On(n,i,o,r)}}}function On(e,t,n,o){var r=e[t];!r||o&&r.tag===o.tag||r.componentInstance.$destroy(),e[t]=null,b(n,t)}Cn.prototype._init=function(e){var t=this;t._uid=Sn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),o=t._parentVnode;n.parent=t.parent,n._parentVnode=o;var r=o.componentOptions;n.propsData=r.propsData,n._parentListeners=r.listeners,n._renderChildren=r.children,n._componentTag=r.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Fe(Tn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Jt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,o=n&&n.context;e.$slots=pt(t._renderChildren,o),e.$scopedSlots=i,e._c=function(t,n,o,r){return $t(e,t,n,o,r,!1)},e.$createElement=function(t,n,o,r){return $t(e,t,n,o,r,!0)};var r=n&&n.data;_e(e,"$attrs",r&&r.attrs||i,null,!0),_e(e,"$listeners",t._parentListeners||i,null,!0)}(t),tn(t,"beforeCreate"),function(e){var t=ht(e.$options.inject,e);t&&(Ce(!1),Object.keys(t).forEach((function(n){_e(e,n,t[n])})),Ce(!0))}(t),gn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),tn(t,"created"),t.$options.el&&t.$mount(t.$options.el)},function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Ee,e.prototype.$delete=Oe,e.prototype.$watch=function(e,t,n){if(f(t))return xn(this,e,t,n);(n=n||{}).user=!0;var o=new pn(this,e,t,n);if(n.immediate)try{t.call(this,o.value)}catch(e){Ue(e,this,'callback for immediate watcher "'+o.expression+'"')}return function(){o.teardown()}}}(Cn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var o=this;if(Array.isArray(e))for(var r=0,i=e.length;r<i;r++)o.$on(e[r],n);else(o._events[e]||(o._events[e]=[])).push(n),t.test(e)&&(o._hasHookEvent=!0);return o},e.prototype.$once=function(e,t){var n=this;function o(){n.$off(e,o),t.apply(n,arguments)}return o.fn=t,n.$on(e,o),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var o=0,r=e.length;o<r;o++)n.$off(e[o],t);return n}var i,a=n._events[e];if(!a)return n;if(!t)return n._events[e]=null,n;for(var s=a.length;s--;)if((i=a[s])===t||i.fn===t){a.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?O(n):n;for(var o=O(arguments,1),r='event handler for "'+e+'"',i=0,a=n.length;i<a;i++)Be(n[i],t,o,t,r)}return t}}(Cn),function(e){e.prototype._update=function(e,t){var n=this,o=n.$el,r=n._vnode,i=Xt(n);n._vnode=e,n.$el=r?n.__patch__(r,e):n.__patch__(n.$el,e,t,!1),i(),o&&(o.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){tn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||b(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),tn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Cn),function(e){Wt(e.prototype),e.prototype.$nextTick=function(e){return ot(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,o=n.render,r=n._parentVnode;r&&(t.$scopedSlots=vt(r.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=r;try{Gt=t,e=o.call(t._renderProxy,t.$createElement)}catch(n){Ue(n,t,"render"),e=t._vnode}finally{Gt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof ve||(e=ye()),e.parent=r,e}}(Cn);var Pn=[String,RegExp,Array],jn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Pn,exclude:Pn,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)On(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",(function(t){En(e,(function(e){return _n(t,e)}))})),this.$watch("exclude",(function(t){En(e,(function(e){return!_n(t,e)}))}))},render:function(){var e=this.$slots.default,t=zt(e),n=t&&t.componentOptions;if(n){var o=In(n),r=this.include,i=this.exclude;if(r&&(!o||!_n(r,o))||i&&o&&_n(i,o))return t;var a=this.cache,s=this.keys,c=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;a[c]?(t.componentInstance=a[c].componentInstance,b(s,c),s.push(c)):(a[c]=t,s.push(c),this.max&&s.length>parseInt(this.max)&&On(a,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return $}};Object.defineProperty(e,"config",t),e.util={warn:ue,extend:P,mergeOptions:Fe,defineReactive:_e},e.set=Ee,e.delete=Oe,e.nextTick=ot,e.observable=function(e){return Ie(e),e},e.options=Object.create(null),H.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,P(e.options.components,jn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=O(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Fe(this.options,e),this}}(e),An(e),function(e){H.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&f(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Cn),Object.defineProperty(Cn.prototype,"$isServer",{get:ie}),Object.defineProperty(Cn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Cn,"FunctionalRenderContext",{value:Dt}),Cn.version="2.6.11";var Wn=y("style,class"),Dn=y("input,textarea,option,select,progress"),Nn=y("contenteditable,draggable,spellcheck"),Rn=y("events,caret,typing,plaintext-only"),Ln=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Fn="http://www.w3.org/1999/xlink",Hn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},qn=function(e){return Hn(e)?e.slice(6,e.length):""},$n=function(e){return null==e||!1===e};function Mn(e){for(var t=e.data,n=e,o=e;s(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(t=Gn(o.data,t));for(;s(n=n.parent);)n&&n.data&&(t=Gn(t,n.data));return function(e,t){if(s(e)||s(t))return Un(e,Bn(t));return""}(t.staticClass,t.class)}function Gn(e,t){return{staticClass:Un(e.staticClass,t.staticClass),class:s(e.class)?[e.class,t.class]:t.class}}function Un(e,t){return e?t?e+" "+t:e:t||""}function Bn(e){return Array.isArray(e)?function(e){for(var t,n="",o=0,r=e.length;o<r;o++)s(t=Bn(e[o]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):u(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var zn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Vn=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Yn=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Kn=function(e){return Vn(e)||Yn(e)};var Jn=Object.create(null);var Qn=y("text,number,password,search,email,tel,url");var Xn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(zn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Zn={create:function(e,t){eo(t)},update:function(e,t){e.data.ref!==t.data.ref&&(eo(e,!0),eo(t))},destroy:function(e){eo(e,!0)}};function eo(e,t){var n=e.data.ref;if(s(n)){var o=e.context,r=e.componentInstance||e.elm,i=o.$refs;t?Array.isArray(i[n])?b(i[n],r):i[n]===r&&(i[n]=void 0):e.data.refInFor?Array.isArray(i[n])?i[n].indexOf(r)<0&&i[n].push(r):i[n]=[r]:i[n]=r}}var to=new ve("",{},[]),no=["create","activate","update","remove","destroy"];function oo(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&s(e.data)===s(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,o=s(n=e.data)&&s(n=n.attrs)&&n.type,r=s(n=t.data)&&s(n=n.attrs)&&n.type;return o===r||Qn(o)&&Qn(r)}(e,t)||c(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&a(t.asyncFactory.error))}function ro(e,t,n){var o,r,i={};for(o=t;o<=n;++o)s(r=e[o].key)&&(i[r]=o);return i}var io={create:ao,update:ao,destroy:function(e){ao(e,to)}};function ao(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,o,r,i=e===to,a=t===to,s=co(e.data.directives,e.context),c=co(t.data.directives,t.context),l=[],u=[];for(n in c)o=s[n],r=c[n],o?(r.oldValue=o.value,r.oldArg=o.arg,uo(r,"update",t,e),r.def&&r.def.componentUpdated&&u.push(r)):(uo(r,"bind",t,e),r.def&&r.def.inserted&&l.push(r));if(l.length){var d=function(){for(var n=0;n<l.length;n++)uo(l[n],"inserted",t,e)};i?lt(t,"insert",d):d()}u.length&&lt(t,"postpatch",(function(){for(var n=0;n<u.length;n++)uo(u[n],"componentUpdated",t,e)}));if(!i)for(n in s)c[n]||uo(s[n],"unbind",e,e,a)}(e,t)}var so=Object.create(null);function co(e,t){var n,o,r=Object.create(null);if(!e)return r;for(n=0;n<e.length;n++)(o=e[n]).modifiers||(o.modifiers=so),r[lo(o)]=o,o.def=He(t.$options,"directives",o.name);return r}function lo(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function uo(e,t,n,o,r){var i=e.def&&e.def[t];if(i)try{i(n.elm,e,n,o,r)}catch(o){Ue(o,n.context,"directive "+e.name+" "+t+" hook")}}var fo=[Zn,io];function ho(e,t){var n=t.componentOptions;if(!(s(n)&&!1===n.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(t.data.attrs))){var o,r,i=t.elm,c=e.data.attrs||{},l=t.data.attrs||{};for(o in s(l.__ob__)&&(l=t.data.attrs=P({},l)),l)r=l[o],c[o]!==r&&po(i,o,r);for(o in(Q||Z)&&l.value!==c.value&&po(i,"value",l.value),c)a(l[o])&&(Hn(o)?i.removeAttributeNS(Fn,qn(o)):Nn(o)||i.removeAttribute(o))}}function po(e,t,n){e.tagName.indexOf("-")>-1?mo(e,t,n):Ln(t)?$n(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Nn(t)?e.setAttribute(t,function(e,t){return $n(t)||"false"===t?"false":"contenteditable"===e&&Rn(t)?t:"true"}(t,n)):Hn(t)?$n(n)?e.removeAttributeNS(Fn,qn(t)):e.setAttributeNS(Fn,t,n):mo(e,t,n)}function mo(e,t,n){if($n(n))e.removeAttribute(t);else{if(Q&&!X&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var o=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",o)};e.addEventListener("input",o),e.__ieph=!0}e.setAttribute(t,n)}}var vo={create:ho,update:ho};function go(e,t){var n=t.elm,o=t.data,r=e.data;if(!(a(o.staticClass)&&a(o.class)&&(a(r)||a(r.staticClass)&&a(r.class)))){var i=Mn(t),c=n._transitionClasses;s(c)&&(i=Un(i,Bn(c))),i!==n._prevClass&&(n.setAttribute("class",i),n._prevClass=i)}}var yo,wo={create:go,update:go};function bo(e,t,n){var o=yo;return function r(){var i=t.apply(null,arguments);null!==i&&So(e,r,n,o)}}var ko=Ke&&!(te&&Number(te[1])<=53);function xo(e,t,n,o){if(ko){var r=ln,i=t;t=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=r||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}yo.addEventListener(e,t,oe?{capture:n,passive:o}:n)}function So(e,t,n,o){(o||yo).removeEventListener(e,t._wrapper||t,n)}function To(e,t){if(!a(e.data.on)||!a(t.data.on)){var n=t.data.on||{},o=e.data.on||{};yo=t.elm,function(e){if(s(e.__r)){var t=Q?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}s(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),ct(n,o,xo,So,bo,t.context),yo=void 0}}var Co,Ao={create:To,update:To};function Io(e,t){if(!a(e.data.domProps)||!a(t.data.domProps)){var n,o,r=t.elm,i=e.data.domProps||{},c=t.data.domProps||{};for(n in s(c.__ob__)&&(c=t.data.domProps=P({},c)),i)n in c||(r[n]="");for(n in c){if(o=c[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),o===i[n])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===n&&"PROGRESS"!==r.tagName){r._value=o;var l=a(o)?"":String(o);_o(r,l)&&(r.value=l)}else if("innerHTML"===n&&Yn(r.tagName)&&a(r.innerHTML)){(Co=Co||document.createElement("div")).innerHTML="<svg>"+o+"</svg>";for(var u=Co.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;u.firstChild;)r.appendChild(u.firstChild)}else if(o!==i[n])try{r[n]=o}catch(e){}}}}function _o(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,o=e._vModifiers;if(s(o)){if(o.number)return g(n)!==g(t);if(o.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Eo={create:Io,update:Io},Oo=S((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var o=e.split(n);o.length>1&&(t[o[0].trim()]=o[1].trim())}})),t}));function Po(e){var t=jo(e.style);return e.staticStyle?P(e.staticStyle,t):t}function jo(e){return Array.isArray(e)?j(e):"string"==typeof e?Oo(e):e}var Wo,Do=/^--/,No=/\s*!important$/,Ro=function(e,t,n){if(Do.test(t))e.style.setProperty(t,n);else if(No.test(n))e.style.setProperty(_(t),n.replace(No,""),"important");else{var o=Fo(t);if(Array.isArray(n))for(var r=0,i=n.length;r<i;r++)e.style[o]=n[r];else e.style[o]=n}},Lo=["Webkit","Moz","ms"],Fo=S((function(e){if(Wo=Wo||document.createElement("div").style,"filter"!==(e=C(e))&&e in Wo)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Lo.length;n++){var o=Lo[n]+t;if(o in Wo)return o}}));function Ho(e,t){var n=t.data,o=e.data;if(!(a(n.staticStyle)&&a(n.style)&&a(o.staticStyle)&&a(o.style))){var r,i,c=t.elm,l=o.staticStyle,u=o.normalizedStyle||o.style||{},d=l||u,f=jo(t.data.style)||{};t.data.normalizedStyle=s(f.__ob__)?P({},f):f;var h=function(e,t){var n,o={};if(t)for(var r=e;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(n=Po(r.data))&&P(o,n);(n=Po(e.data))&&P(o,n);for(var i=e;i=i.parent;)i.data&&(n=Po(i.data))&&P(o,n);return o}(t,!0);for(i in d)a(h[i])&&Ro(c,i,"");for(i in h)(r=h[i])!==d[i]&&Ro(c,i,null==r?"":r)}}var qo={create:Ho,update:Ho},$o=/\s+/;function Mo(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split($o).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Go(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split($o).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",o=" "+t+" ";n.indexOf(o)>=0;)n=n.replace(o," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Uo(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&P(t,Bo(e.name||"v")),P(t,e),t}return"string"==typeof e?Bo(e):void 0}}var Bo=S((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),zo=V&&!X,Vo="transition",Yo="transitionend",Ko="animation",Jo="animationend";zo&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Vo="WebkitTransition",Yo="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Ko="WebkitAnimation",Jo="webkitAnimationEnd"));var Qo=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Xo(e){Qo((function(){Qo(e)}))}function Zo(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Mo(e,t))}function er(e,t){e._transitionClasses&&b(e._transitionClasses,t),Go(e,t)}function tr(e,t,n){var o=or(e,t),r=o.type,i=o.timeout,a=o.propCount;if(!r)return n();var s="transition"===r?Yo:Jo,c=0,l=function(){e.removeEventListener(s,u),n()},u=function(t){t.target===e&&++c>=a&&l()};setTimeout((function(){c<a&&l()}),i+1),e.addEventListener(s,u)}var nr=/\b(transform|all)(,|$)/;function or(e,t){var n,o=window.getComputedStyle(e),r=(o[Vo+"Delay"]||"").split(", "),i=(o[Vo+"Duration"]||"").split(", "),a=rr(r,i),s=(o[Ko+"Delay"]||"").split(", "),c=(o[Ko+"Duration"]||"").split(", "),l=rr(s,c),u=0,d=0;return"transition"===t?a>0&&(n="transition",u=a,d=i.length):"animation"===t?l>0&&(n="animation",u=l,d=c.length):d=(n=(u=Math.max(a,l))>0?a>l?"transition":"animation":null)?"transition"===n?i.length:c.length:0,{type:n,timeout:u,propCount:d,hasTransform:"transition"===n&&nr.test(o[Vo+"Property"])}}function rr(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return ir(t)+ir(e[n])})))}function ir(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function ar(e,t){var n=e.elm;s(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var o=Uo(e.data.transition);if(!a(o)&&!s(n._enterCb)&&1===n.nodeType){for(var r=o.css,i=o.type,c=o.enterClass,l=o.enterToClass,d=o.enterActiveClass,f=o.appearClass,h=o.appearToClass,p=o.appearActiveClass,m=o.beforeEnter,v=o.enter,y=o.afterEnter,w=o.enterCancelled,b=o.beforeAppear,k=o.appear,x=o.afterAppear,S=o.appearCancelled,T=o.duration,C=Qt,A=Qt.$vnode;A&&A.parent;)C=A.context,A=A.parent;var I=!C._isMounted||!e.isRootInsert;if(!I||k||""===k){var _=I&&f?f:c,E=I&&p?p:d,O=I&&h?h:l,P=I&&b||m,j=I&&"function"==typeof k?k:v,W=I&&x||y,D=I&&S||w,N=g(u(T)?T.enter:T);0;var R=!1!==r&&!X,L=lr(j),H=n._enterCb=F((function(){R&&(er(n,O),er(n,E)),H.cancelled?(R&&er(n,_),D&&D(n)):W&&W(n),n._enterCb=null}));e.data.show||lt(e,"insert",(function(){var t=n.parentNode,o=t&&t._pending&&t._pending[e.key];o&&o.tag===e.tag&&o.elm._leaveCb&&o.elm._leaveCb(),j&&j(n,H)})),P&&P(n),R&&(Zo(n,_),Zo(n,E),Xo((function(){er(n,_),H.cancelled||(Zo(n,O),L||(cr(N)?setTimeout(H,N):tr(n,i,H)))}))),e.data.show&&(t&&t(),j&&j(n,H)),R||L||H()}}}function sr(e,t){var n=e.elm;s(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var o=Uo(e.data.transition);if(a(o)||1!==n.nodeType)return t();if(!s(n._leaveCb)){var r=o.css,i=o.type,c=o.leaveClass,l=o.leaveToClass,d=o.leaveActiveClass,f=o.beforeLeave,h=o.leave,p=o.afterLeave,m=o.leaveCancelled,v=o.delayLeave,y=o.duration,w=!1!==r&&!X,b=lr(h),k=g(u(y)?y.leave:y);0;var x=n._leaveCb=F((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),w&&(er(n,l),er(n,d)),x.cancelled?(w&&er(n,c),m&&m(n)):(t(),p&&p(n)),n._leaveCb=null}));v?v(S):S()}function S(){x.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),f&&f(n),w&&(Zo(n,c),Zo(n,d),Xo((function(){er(n,c),x.cancelled||(Zo(n,l),b||(cr(k)?setTimeout(x,k):tr(n,i,x)))}))),h&&h(n,x),w||b||x())}}function cr(e){return"number"==typeof e&&!isNaN(e)}function lr(e){if(a(e))return!1;var t=e.fns;return s(t)?lr(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function ur(e,t){!0!==t.data.show&&ar(t)}var dr=function(e){var t,n,o={},r=e.modules,i=e.nodeOps;for(t=0;t<no.length;++t)for(o[no[t]]=[],n=0;n<r.length;++n)s(r[n][no[t]])&&o[no[t]].push(r[n][no[t]]);function u(e){var t=i.parentNode(e);s(t)&&i.removeChild(t,e)}function d(e,t,n,r,a,l,u){if(s(e.elm)&&s(l)&&(e=l[u]=be(e)),e.isRootInsert=!a,!function(e,t,n,r){var i=e.data;if(s(i)){var a=s(e.componentInstance)&&i.keepAlive;if(s(i=i.hook)&&s(i=i.init)&&i(e,!1),s(e.componentInstance))return f(e,t),h(n,e.elm,r),c(a)&&function(e,t,n,r){var i,a=e;for(;a.componentInstance;)if(a=a.componentInstance._vnode,s(i=a.data)&&s(i=i.transition)){for(i=0;i<o.activate.length;++i)o.activate[i](to,a);t.push(a);break}h(n,e.elm,r)}(e,t,n,r),!0}}(e,t,n,r)){var d=e.data,m=e.children,y=e.tag;s(y)?(e.elm=e.ns?i.createElementNS(e.ns,y):i.createElement(y,e),g(e),p(e,m,t),s(d)&&v(e,t),h(n,e.elm,r)):c(e.isComment)?(e.elm=i.createComment(e.text),h(n,e.elm,r)):(e.elm=i.createTextNode(e.text),h(n,e.elm,r))}}function f(e,t){s(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,m(e)?(v(e,t),g(e)):(eo(e),t.push(e))}function h(e,t,n){s(e)&&(s(n)?i.parentNode(n)===e&&i.insertBefore(e,t,n):i.appendChild(e,t))}function p(e,t,n){if(Array.isArray(t)){0;for(var o=0;o<t.length;++o)d(t[o],n,e.elm,null,!0,t,o)}else l(e.text)&&i.appendChild(e.elm,i.createTextNode(String(e.text)))}function m(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return s(e.tag)}function v(e,n){for(var r=0;r<o.create.length;++r)o.create[r](to,e);s(t=e.data.hook)&&(s(t.create)&&t.create(to,e),s(t.insert)&&n.push(e))}function g(e){var t;if(s(t=e.fnScopeId))i.setStyleScope(e.elm,t);else for(var n=e;n;)s(t=n.context)&&s(t=t.$options._scopeId)&&i.setStyleScope(e.elm,t),n=n.parent;s(t=Qt)&&t!==e.context&&t!==e.fnContext&&s(t=t.$options._scopeId)&&i.setStyleScope(e.elm,t)}function w(e,t,n,o,r,i){for(;o<=r;++o)d(n[o],i,e,t,!1,n,o)}function b(e){var t,n,r=e.data;if(s(r))for(s(t=r.hook)&&s(t=t.destroy)&&t(e),t=0;t<o.destroy.length;++t)o.destroy[t](e);if(s(t=e.children))for(n=0;n<e.children.length;++n)b(e.children[n])}function k(e,t,n){for(;t<=n;++t){var o=e[t];s(o)&&(s(o.tag)?(x(o),b(o)):u(o.elm))}}function x(e,t){if(s(t)||s(e.data)){var n,r=o.remove.length+1;for(s(t)?t.listeners+=r:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,r),s(n=e.componentInstance)&&s(n=n._vnode)&&s(n.data)&&x(n,t),n=0;n<o.remove.length;++n)o.remove[n](e,t);s(n=e.data.hook)&&s(n=n.remove)?n(e,t):t()}else u(e.elm)}function S(e,t,n,o){for(var r=n;r<o;r++){var i=t[r];if(s(i)&&oo(e,i))return r}}function T(e,t,n,r,l,u){if(e!==t){s(t.elm)&&s(r)&&(t=r[l]=be(t));var f=t.elm=e.elm;if(c(e.isAsyncPlaceholder))s(t.asyncFactory.resolved)?I(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(c(t.isStatic)&&c(e.isStatic)&&t.key===e.key&&(c(t.isCloned)||c(t.isOnce)))t.componentInstance=e.componentInstance;else{var h,p=t.data;s(p)&&s(h=p.hook)&&s(h=h.prepatch)&&h(e,t);var v=e.children,g=t.children;if(s(p)&&m(t)){for(h=0;h<o.update.length;++h)o.update[h](e,t);s(h=p.hook)&&s(h=h.update)&&h(e,t)}a(t.text)?s(v)&&s(g)?v!==g&&function(e,t,n,o,r){var c,l,u,f=0,h=0,p=t.length-1,m=t[0],v=t[p],g=n.length-1,y=n[0],b=n[g],x=!r;for(0;f<=p&&h<=g;)a(m)?m=t[++f]:a(v)?v=t[--p]:oo(m,y)?(T(m,y,o,n,h),m=t[++f],y=n[++h]):oo(v,b)?(T(v,b,o,n,g),v=t[--p],b=n[--g]):oo(m,b)?(T(m,b,o,n,g),x&&i.insertBefore(e,m.elm,i.nextSibling(v.elm)),m=t[++f],b=n[--g]):oo(v,y)?(T(v,y,o,n,h),x&&i.insertBefore(e,v.elm,m.elm),v=t[--p],y=n[++h]):(a(c)&&(c=ro(t,f,p)),a(l=s(y.key)?c[y.key]:S(y,t,f,p))?d(y,o,e,m.elm,!1,n,h):oo(u=t[l],y)?(T(u,y,o,n,h),t[l]=void 0,x&&i.insertBefore(e,u.elm,m.elm)):d(y,o,e,m.elm,!1,n,h),y=n[++h]);f>p?w(e,a(n[g+1])?null:n[g+1].elm,n,h,g,o):h>g&&k(t,f,p)}(f,v,g,n,u):s(g)?(s(e.text)&&i.setTextContent(f,""),w(f,null,g,0,g.length-1,n)):s(v)?k(v,0,v.length-1):s(e.text)&&i.setTextContent(f,""):e.text!==t.text&&i.setTextContent(f,t.text),s(p)&&s(h=p.hook)&&s(h=h.postpatch)&&h(e,t)}}}function C(e,t,n){if(c(n)&&s(e.parent))e.parent.data.pendingInsert=t;else for(var o=0;o<t.length;++o)t[o].data.hook.insert(t[o])}var A=y("attrs,class,staticClass,staticStyle,key");function I(e,t,n,o){var r,i=t.tag,a=t.data,l=t.children;if(o=o||a&&a.pre,t.elm=e,c(t.isComment)&&s(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(s(a)&&(s(r=a.hook)&&s(r=r.init)&&r(t,!0),s(r=t.componentInstance)))return f(t,n),!0;if(s(i)){if(s(l))if(e.hasChildNodes())if(s(r=a)&&s(r=r.domProps)&&s(r=r.innerHTML)){if(r!==e.innerHTML)return!1}else{for(var u=!0,d=e.firstChild,h=0;h<l.length;h++){if(!d||!I(d,l[h],n,o)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else p(t,l,n);if(s(a)){var m=!1;for(var g in a)if(!A(g)){m=!0,v(t,n);break}!m&&a.class&&it(a.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,r){if(!a(t)){var l,u=!1,f=[];if(a(e))u=!0,d(t,f);else{var h=s(e.nodeType);if(!h&&oo(e,t))T(e,t,f,null,null,r);else{if(h){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),c(n)&&I(e,t,f))return C(t,f,!0),e;l=e,e=new ve(i.tagName(l).toLowerCase(),{},[],void 0,l)}var p=e.elm,v=i.parentNode(p);if(d(t,f,p._leaveCb?null:v,i.nextSibling(p)),s(t.parent))for(var g=t.parent,y=m(t);g;){for(var w=0;w<o.destroy.length;++w)o.destroy[w](g);if(g.elm=t.elm,y){for(var x=0;x<o.create.length;++x)o.create[x](to,g);var S=g.data.hook.insert;if(S.merged)for(var A=1;A<S.fns.length;A++)S.fns[A]()}else eo(g);g=g.parent}s(v)?k([e],0,0):s(e.tag)&&b(e)}}return C(t,f,u),t.elm}s(e)&&b(e)}}({nodeOps:Xn,modules:[vo,wo,Ao,Eo,qo,V?{create:ur,activate:ur,remove:function(e,t){!0!==e.data.show?sr(e,t):t()}}:{}].concat(fo)});X&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&wr(e,"input")}));var fr={inserted:function(e,t,n,o){"select"===n.tag?(o.elm&&!o.elm._vOptions?lt(n,"postpatch",(function(){fr.componentUpdated(e,t,n)})):hr(e,t,n.context),e._vOptions=[].map.call(e.options,vr)):("textarea"===n.tag||Qn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",gr),e.addEventListener("compositionend",yr),e.addEventListener("change",yr),X&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){hr(e,t,n.context);var o=e._vOptions,r=e._vOptions=[].map.call(e.options,vr);if(r.some((function(e,t){return!R(e,o[t])})))(e.multiple?t.value.some((function(e){return mr(e,r)})):t.value!==t.oldValue&&mr(t.value,r))&&wr(e,"change")}}};function hr(e,t,n){pr(e,t,n),(Q||Z)&&setTimeout((function(){pr(e,t,n)}),0)}function pr(e,t,n){var o=t.value,r=e.multiple;if(!r||Array.isArray(o)){for(var i,a,s=0,c=e.options.length;s<c;s++)if(a=e.options[s],r)i=L(o,vr(a))>-1,a.selected!==i&&(a.selected=i);else if(R(vr(a),o))return void(e.selectedIndex!==s&&(e.selectedIndex=s));r||(e.selectedIndex=-1)}}function mr(e,t){return t.every((function(t){return!R(t,e)}))}function vr(e){return"_value"in e?e._value:e.value}function gr(e){e.target.composing=!0}function yr(e){e.target.composing&&(e.target.composing=!1,wr(e.target,"input"))}function wr(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function br(e){return!e.componentInstance||e.data&&e.data.transition?e:br(e.componentInstance._vnode)}var kr={model:fr,show:{bind:function(e,t,n){var o=t.value,r=(n=br(n)).data&&n.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;o&&r?(n.data.show=!0,ar(n,(function(){e.style.display=i}))):e.style.display=o?i:"none"},update:function(e,t,n){var o=t.value;!o!=!t.oldValue&&((n=br(n)).data&&n.data.transition?(n.data.show=!0,o?ar(n,(function(){e.style.display=e.__vOriginalDisplay})):sr(n,(function(){e.style.display="none"}))):e.style.display=o?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,o,r){r||(e.style.display=e.__vOriginalDisplay)}}},xr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Sr(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?Sr(zt(t.children)):e}function Tr(e){var t={},n=e.$options;for(var o in n.propsData)t[o]=e[o];var r=n._parentListeners;for(var i in r)t[C(i)]=r[i];return t}function Cr(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Ar=function(e){return e.tag||Bt(e)},Ir=function(e){return"show"===e.name},_r={name:"transition",props:xr,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Ar)).length){0;var o=this.mode;0;var r=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return r;var i=Sr(r);if(!i)return r;if(this._leaving)return Cr(e,r);var a="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?a+"comment":a+i.tag:l(i.key)?0===String(i.key).indexOf(a)?i.key:a+i.key:i.key;var s=(i.data||(i.data={})).transition=Tr(this),c=this._vnode,u=Sr(c);if(i.data.directives&&i.data.directives.some(Ir)&&(i.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(i,u)&&!Bt(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=P({},s);if("out-in"===o)return this._leaving=!0,lt(d,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Cr(e,r);if("in-out"===o){if(Bt(i))return c;var f,h=function(){f()};lt(s,"afterEnter",h),lt(s,"enterCancelled",h),lt(d,"delayLeave",(function(e){f=e}))}}return r}}},Er=P({tag:String,moveClass:String},xr);function Or(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Pr(e){e.data.newPos=e.elm.getBoundingClientRect()}function jr(e){var t=e.data.pos,n=e.data.newPos,o=t.left-n.left,r=t.top-n.top;if(o||r){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate("+o+"px,"+r+"px)",i.transitionDuration="0s"}}delete Er.mode;var Wr={Transition:_r,TransitionGroup:{props:Er,beforeMount:function(){var e=this,t=this._update;this._update=function(n,o){var r=Xt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,r(),t.call(e,n,o)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),o=this.prevChildren=this.children,r=this.$slots.default||[],i=this.children=[],a=Tr(this),s=0;s<r.length;s++){var c=r[s];if(c.tag)if(null!=c.key&&0!==String(c.key).indexOf("__vlist"))i.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a;else;}if(o){for(var l=[],u=[],d=0;d<o.length;d++){var f=o[d];f.data.transition=a,f.data.pos=f.elm.getBoundingClientRect(),n[f.key]?l.push(f):u.push(f)}this.kept=e(t,null,l),this.removed=u}return e(t,null,i)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Or),e.forEach(Pr),e.forEach(jr),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,o=n.style;Zo(n,t),o.transform=o.WebkitTransform=o.transitionDuration="",n.addEventListener(Yo,n._moveCb=function e(o){o&&o.target!==n||o&&!/transform$/.test(o.propertyName)||(n.removeEventListener(Yo,e),n._moveCb=null,er(n,t))})}})))},methods:{hasMove:function(e,t){if(!zo)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Go(n,e)})),Mo(n,t),n.style.display="none",this.$el.appendChild(n);var o=or(n);return this.$el.removeChild(n),this._hasMove=o.hasTransform}}}};Cn.config.mustUseProp=function(e,t,n){return"value"===n&&Dn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Cn.config.isReservedTag=Kn,Cn.config.isReservedAttr=Wn,Cn.config.getTagNamespace=function(e){return Yn(e)?"svg":"math"===e?"math":void 0},Cn.config.isUnknownElement=function(e){if(!V)return!0;if(Kn(e))return!1;if(e=e.toLowerCase(),null!=Jn[e])return Jn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Jn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Jn[e]=/HTMLUnknownElement/.test(t.toString())},P(Cn.options.directives,kr),P(Cn.options.components,Wr),Cn.prototype.__patch__=V?dr:W,Cn.prototype.$mount=function(e,t){return function(e,t,n){var o;return e.$el=t,e.$options.render||(e.$options.render=ye),tn(e,"beforeMount"),o=function(){e._update(e._render(),n)},new pn(e,o,W,{before:function(){e._isMounted&&!e._isDestroyed&&tn(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,tn(e,"mounted")),e}(this,e=e&&V?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},V&&setTimeout((function(){$.devtools&&ae&&ae.emit("init",Cn)}),0);var Dr=Cn;
/*!
  * vue-router v3.1.6
  * (c) 2020 Evan You
  * @license MIT
  */function Nr(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Rr(e,t){return t instanceof e||t&&(t.name===e.name||t._name===e._name)}function Lr(e,t){for(var n in t)e[n]=t[n];return e}var Fr={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,o=t.children,r=t.parent,i=t.data;i.routerView=!0;for(var a=r.$createElement,s=n.name,c=r.$route,l=r._routerViewCache||(r._routerViewCache={}),u=0,d=!1;r&&r._routerRoot!==r;){var f=r.$vnode?r.$vnode.data:{};f.routerView&&u++,f.keepAlive&&r._directInactive&&r._inactive&&(d=!0),r=r.$parent}if(i.routerViewDepth=u,d){var h=l[s],p=h&&h.component;return p?(h.configProps&&Hr(p,i,h.route,h.configProps),a(p,i,o)):a()}var m=c.matched[u],v=m&&m.components[s];if(!m||!v)return l[s]=null,a();l[s]={component:v},i.registerRouteInstance=function(e,t){var n=m.instances[s];(t&&n!==e||!t&&n===e)&&(m.instances[s]=t)},(i.hook||(i.hook={})).prepatch=function(e,t){m.instances[s]=t.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==m.instances[s]&&(m.instances[s]=e.componentInstance)};var g=m.props&&m.props[s];return g&&(Lr(l[s],{route:c,configProps:g}),Hr(v,i,c,g)),a(v,i,o)}};function Hr(e,t,n,o){var r=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,o);if(r){r=t.props=Lr({},r);var i=t.attrs=t.attrs||{};for(var a in r)e.props&&a in e.props||(i[a]=r[a],delete r[a])}}var qr=/[!'()*]/g,$r=function(e){return"%"+e.charCodeAt(0).toString(16)},Mr=/%2C/g,Gr=function(e){return encodeURIComponent(e).replace(qr,$r).replace(Mr,",")},Ur=decodeURIComponent;function Br(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),o=Ur(n.shift()),r=n.length>0?Ur(n.join("=")):null;void 0===t[o]?t[o]=r:Array.isArray(t[o])?t[o].push(r):t[o]=[t[o],r]})),t):t}function zr(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return Gr(t);if(Array.isArray(n)){var o=[];return n.forEach((function(e){void 0!==e&&(null===e?o.push(Gr(t)):o.push(Gr(t)+"="+Gr(e)))})),o.join("&")}return Gr(t)+"="+Gr(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var Vr=/\/?$/;function Yr(e,t,n,o){var r=o&&o.options.stringifyQuery,i=t.query||{};try{i=Kr(i)}catch(e){}var a={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:i,params:t.params||{},fullPath:Xr(t,r),matched:e?Qr(e):[]};return n&&(a.redirectedFrom=Xr(n,r)),Object.freeze(a)}function Kr(e){if(Array.isArray(e))return e.map(Kr);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Kr(e[n]);return t}return e}var Jr=Yr(null,{path:"/"});function Qr(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Xr(e,t){var n=e.path,o=e.query;void 0===o&&(o={});var r=e.hash;return void 0===r&&(r=""),(n||"/")+(t||zr)(o)+r}function Zr(e,t){return t===Jr?e===t:!!t&&(e.path&&t.path?e.path.replace(Vr,"")===t.path.replace(Vr,"")&&e.hash===t.hash&&ei(e.query,t.query):!(!e.name||!t.name)&&(e.name===t.name&&e.hash===t.hash&&ei(e.query,t.query)&&ei(e.params,t.params)))}function ei(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e),o=Object.keys(t);return n.length===o.length&&n.every((function(n){var o=e[n],r=t[n];return"object"==typeof o&&"object"==typeof r?ei(o,r):String(o)===String(r)}))}function ti(e,t,n){var o=e.charAt(0);if("/"===o)return e;if("?"===o||"#"===o)return t+e;var r=t.split("/");n&&r[r.length-1]||r.pop();for(var i=e.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?r.pop():"."!==s&&r.push(s)}return""!==r[0]&&r.unshift(""),r.join("/")}function ni(e){return e.replace(/\/\//g,"/")}var oi=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},ri=yi,ii=ui,ai=function(e,t){return fi(ui(e,t))},si=fi,ci=gi,li=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function ui(e,t){for(var n,o=[],r=0,i=0,a="",s=t&&t.delimiter||"/";null!=(n=li.exec(e));){var c=n[0],l=n[1],u=n.index;if(a+=e.slice(i,u),i=u+c.length,l)a+=l[1];else{var d=e[i],f=n[2],h=n[3],p=n[4],m=n[5],v=n[6],g=n[7];a&&(o.push(a),a="");var y=null!=f&&null!=d&&d!==f,w="+"===v||"*"===v,b="?"===v||"*"===v,k=n[2]||s,x=p||m;o.push({name:h||r++,prefix:f||"",delimiter:k,optional:b,repeat:w,partial:y,asterisk:!!g,pattern:x?pi(x):g?".*":"[^"+hi(k)+"]+?"})}}return i<e.length&&(a+=e.substr(i)),a&&o.push(a),o}function di(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function fi(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var r="",i=n||{},a=(o||{}).pretty?di:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var l,u=i[c.name];if(null==u){if(c.optional){c.partial&&(r+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(oi(u)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(l=a(u[d]),!t[s].test(l))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(l)+"`");r+=(0===d?c.prefix:c.delimiter)+l}}else{if(l=c.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):a(u),!t[s].test(l))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+l+'"');r+=c.prefix+l}}else r+=c}return r}}function hi(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function pi(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function mi(e,t){return e.keys=t,e}function vi(e){return e.sensitive?"":"i"}function gi(e,t,n){oi(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,r=!1!==n.end,i="",a=0;a<e.length;a++){var s=e[a];if("string"==typeof s)i+=hi(s);else{var c=hi(s.prefix),l="(?:"+s.pattern+")";t.push(s),s.repeat&&(l+="(?:"+c+l+")*"),i+=l=s.optional?s.partial?c+"("+l+")?":"(?:"+c+"("+l+"))?":c+"("+l+")"}}var u=hi(n.delimiter||"/"),d=i.slice(-u.length)===u;return o||(i=(d?i.slice(0,-u.length):i)+"(?:"+u+"(?=$))?"),i+=r?"$":o&&d?"":"(?="+u+"|$)",mi(new RegExp("^"+i,vi(n)),t)}function yi(e,t,n){return oi(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var o=0;o<n.length;o++)t.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return mi(e,t)}(e,t):oi(e)?function(e,t,n){for(var o=[],r=0;r<e.length;r++)o.push(yi(e[r],t,n).source);return mi(new RegExp("(?:"+o.join("|")+")",vi(n)),t)}(e,t,n):function(e,t,n){return gi(ui(e,n),t,n)}(e,t,n)}ri.parse=ii,ri.compile=ai,ri.tokensToFunction=si,ri.tokensToRegExp=ci;var wi=Object.create(null);function bi(e,t,n){t=t||{};try{var o=wi[e]||(wi[e]=ri.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),o(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function ki(e,t,n,o){var r="string"==typeof e?{path:e}:e;if(r._normalized)return r;if(r.name){var i=(r=Lr({},e)).params;return i&&"object"==typeof i&&(r.params=Lr({},i)),r}if(!r.path&&r.params&&t){(r=Lr({},r))._normalized=!0;var a=Lr(Lr({},t.params),r.params);if(t.name)r.name=t.name,r.params=a;else if(t.matched.length){var s=t.matched[t.matched.length-1].path;r.path=bi(s,a,t.path)}else 0;return r}var c=function(e){var t="",n="",o=e.indexOf("#");o>=0&&(t=e.slice(o),e=e.slice(0,o));var r=e.indexOf("?");return r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),{path:e,query:n,hash:t}}(r.path||""),l=t&&t.path||"/",u=c.path?ti(c.path,l,n||r.append):l,d=function(e,t,n){void 0===t&&(t={});var o,r=n||Br;try{o=r(e||"")}catch(e){o={}}for(var i in t)o[i]=t[i];return o}(c.query,r.query,o&&o.options.parseQuery),f=r.hash||c.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:u,query:d,hash:f}}var xi,Si=function(){},Ti={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,o=this.$route,r=n.resolve(this.to,o,this.append),i=r.location,a=r.route,s=r.href,c={},l=n.options.linkActiveClass,u=n.options.linkExactActiveClass,d=null==l?"router-link-active":l,f=null==u?"router-link-exact-active":u,h=null==this.activeClass?d:this.activeClass,p=null==this.exactActiveClass?f:this.exactActiveClass,m=a.redirectedFrom?Yr(null,ki(a.redirectedFrom),null,n):a;c[p]=Zr(o,m),c[h]=this.exact?c[p]:function(e,t){return 0===e.path.replace(Vr,"/").indexOf(t.path.replace(Vr,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(o,m);var v=function(e){Ci(e)&&(t.replace?n.replace(i,Si):n.push(i,Si))},g={click:Ci};Array.isArray(this.event)?this.event.forEach((function(e){g[e]=v})):g[this.event]=v;var y={class:c},w=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:a,navigate:v,isActive:c[h],isExactActive:c[p]});if(w){if(1===w.length)return w[0];if(w.length>1||!w.length)return 0===w.length?e():e("span",{},w)}if("a"===this.tag)y.on=g,y.attrs={href:s};else{var b=function e(t){var n;if(t)for(var o=0;o<t.length;o++){if("a"===(n=t[o]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(b){b.isStatic=!1;var k=b.data=Lr({},b.data);for(var x in k.on=k.on||{},k.on){var S=k.on[x];x in g&&(k.on[x]=Array.isArray(S)?S:[S])}for(var T in g)T in k.on?k.on[T].push(g[T]):k.on[T]=v;(b.data.attrs=Lr({},b.data.attrs)).href=s}else y.on=g}return e(this.tag,y,this.$slots.default)}};function Ci(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var Ai="undefined"!=typeof window;function Ii(e,t,n,o){var r=t||[],i=n||Object.create(null),a=o||Object.create(null);e.forEach((function(e){!function e(t,n,o,r,i,a){var s=r.path,c=r.name;0;var l=r.pathToRegexpOptions||{},u=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return ni(t.path+"/"+e)}(s,i,l.strict);"boolean"==typeof r.caseSensitive&&(l.sensitive=r.caseSensitive);var d={path:u,regex:_i(u,l),components:r.components||{default:r.component},instances:{},name:c,parent:i,matchAs:a,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var i=a?ni(a+"/"+r.path):void 0;e(t,n,o,r,d,i)}));n[d.path]||(t.push(d.path),n[d.path]=d);if(void 0!==r.alias)for(var f=Array.isArray(r.alias)?r.alias:[r.alias],h=0;h<f.length;++h){0;var p={path:f[h],children:r.children};e(t,n,o,p,i,d.path||"/")}c&&(o[c]||(o[c]=d))}(r,i,a,e)}));for(var s=0,c=r.length;s<c;s++)"*"===r[s]&&(r.push(r.splice(s,1)[0]),c--,s--);return{pathList:r,pathMap:i,nameMap:a}}function _i(e,t){return ri(e,[],t)}function Ei(e,t){var n=Ii(e),o=n.pathList,r=n.pathMap,i=n.nameMap;function a(e,n,a){var s=ki(e,n,!1,t),l=s.name;if(l){var u=i[l];if(!u)return c(null,s);var d=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var f in n.params)!(f in s.params)&&d.indexOf(f)>-1&&(s.params[f]=n.params[f]);return s.path=bi(u.path,s.params),c(u,s,a)}if(s.path){s.params={};for(var h=0;h<o.length;h++){var p=o[h],m=r[p];if(Oi(m.regex,s.path,s.params))return c(m,s,a)}}return c(null,s)}function s(e,n){var o=e.redirect,r="function"==typeof o?o(Yr(e,n,null,t)):o;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return c(null,n);var s=r,l=s.name,u=s.path,d=n.query,f=n.hash,h=n.params;if(d=s.hasOwnProperty("query")?s.query:d,f=s.hasOwnProperty("hash")?s.hash:f,h=s.hasOwnProperty("params")?s.params:h,l){i[l];return a({_normalized:!0,name:l,query:d,hash:f,params:h},void 0,n)}if(u){var p=function(e,t){return ti(e,t.parent?t.parent.path:"/",!0)}(u,e);return a({_normalized:!0,path:bi(p,h),query:d,hash:f},void 0,n)}return c(null,n)}function c(e,n,o){return e&&e.redirect?s(e,o||n):e&&e.matchAs?function(e,t,n){var o=a({_normalized:!0,path:bi(n,t.params)});if(o){var r=o.matched,i=r[r.length-1];return t.params=o.params,c(i,t)}return c(null,t)}(0,n,e.matchAs):Yr(e,n,o,t)}return{match:a,addRoutes:function(e){Ii(e,o,r,i)}}}function Oi(e,t,n){var o=t.match(e);if(!o)return!1;if(!n)return!0;for(var r=1,i=o.length;r<i;++r){var a=e.keys[r-1],s="string"==typeof o[r]?decodeURIComponent(o[r]):o[r];a&&(n[a.name||"pathMatch"]=s)}return!0}var Pi=Ai&&window.performance&&window.performance.now?window.performance:Date;function ji(){return Pi.now().toFixed(3)}var Wi=ji();function Di(){return Wi}function Ni(e){return Wi=e}var Ri=Object.create(null);function Li(){var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=Lr({},window.history.state);n.key=Di(),window.history.replaceState(n,"",t),window.addEventListener("popstate",(function(e){Hi(),e.state&&e.state.key&&Ni(e.state.key)}))}function Fi(e,t,n,o){if(e.app){var r=e.options.scrollBehavior;r&&e.app.$nextTick((function(){var i=function(){var e=Di();if(e)return Ri[e]}(),a=r.call(e,t,n,o?i:null);a&&("function"==typeof a.then?a.then((function(e){Ui(e,i)})).catch((function(e){0})):Ui(a,i))}))}}function Hi(){var e=Di();e&&(Ri[e]={x:window.pageXOffset,y:window.pageYOffset})}function qi(e){return Mi(e.x)||Mi(e.y)}function $i(e){return{x:Mi(e.x)?e.x:window.pageXOffset,y:Mi(e.y)?e.y:window.pageYOffset}}function Mi(e){return"number"==typeof e}var Gi=/^#\d/;function Ui(e,t){var n,o="object"==typeof e;if(o&&"string"==typeof e.selector){var r=Gi.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(r){var i=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),o=e.getBoundingClientRect();return{x:o.left-n.left-t.x,y:o.top-n.top-t.y}}(r,i={x:Mi((n=i).x)?n.x:0,y:Mi(n.y)?n.y:0})}else qi(e)&&(t=$i(e))}else o&&qi(e)&&(t=$i(e));t&&window.scrollTo(t.x,t.y)}var Bi,zi=Ai&&((-1===(Bi=window.navigator.userAgent).indexOf("Android 2.")&&-1===Bi.indexOf("Android 4.0")||-1===Bi.indexOf("Mobile Safari")||-1!==Bi.indexOf("Chrome")||-1!==Bi.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history);function Vi(e,t){Hi();var n=window.history;try{if(t){var o=Lr({},n.state);o.key=Di(),n.replaceState(o,"",e)}else n.pushState({key:Ni(ji())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Yi(e){Vi(e,!0)}function Ki(e,t,n){var o=function(r){r>=e.length?n():e[r]?t(e[r],(function(){o(r+1)})):o(r+1)};o(0)}function Ji(e){return function(t,n,o){var r=!1,i=0,a=null;Qi(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){r=!0,i++;var c,l=ea((function(t){var r;((r=t).__esModule||Zi&&"Module"===r[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:xi.extend(t),n.components[s]=t,--i<=0&&o()})),u=ea((function(e){var t="Failed to resolve async component "+s+": "+e;a||(a=Nr(e)?e:new Error(t),o(a))}));try{c=e(l,u)}catch(e){u(e)}if(c)if("function"==typeof c.then)c.then(l,u);else{var d=c.component;d&&"function"==typeof d.then&&d.then(l,u)}}})),r||o()}}function Qi(e,t){return Xi(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Xi(e){return Array.prototype.concat.apply([],e)}var Zi="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function ea(e){var t=!1;return function(){for(var n=[],o=arguments.length;o--;)n[o]=arguments[o];if(!t)return t=!0,e.apply(this,n)}}var ta=function(e){function t(t){e.call(this),this.name=this._name="NavigationDuplicated",this.message='Navigating to current location ("'+t.fullPath+'") is not allowed',Object.defineProperty(this,"stack",{value:(new e).stack,writable:!0,configurable:!0})}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t}(Error);ta._name="NavigationDuplicated";var na=function(e,t){this.router=e,this.base=function(e){if(!e)if(Ai){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=Jr,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[]};function oa(e,t,n,o){var r=Qi(e,(function(e,o,r,i){var a=function(e,t){"function"!=typeof e&&(e=xi.extend(e));return e.options[t]}(e,t);if(a)return Array.isArray(a)?a.map((function(e){return n(e,o,r,i)})):n(a,o,r,i)}));return Xi(o?r.reverse():r)}function ra(e,t){if(t)return function(){return e.apply(t,arguments)}}na.prototype.listen=function(e){this.cb=e},na.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},na.prototype.onError=function(e){this.errorCbs.push(e)},na.prototype.transitionTo=function(e,t,n){var o=this,r=this.router.match(e,this.current);this.confirmTransition(r,(function(){o.updateRoute(r),t&&t(r),o.ensureURL(),o.ready||(o.ready=!0,o.readyCbs.forEach((function(e){e(r)})))}),(function(e){n&&n(e),e&&!o.ready&&(o.ready=!0,o.readyErrorCbs.forEach((function(t){t(e)})))}))},na.prototype.confirmTransition=function(e,t,n){var o=this,r=this.current,i=function(e){!Rr(ta,e)&&Nr(e)&&(o.errorCbs.length?o.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)};if(Zr(e,r)&&e.matched.length===r.matched.length)return this.ensureURL(),i(new ta(e));var a=function(e,t){var n,o=Math.max(e.length,t.length);for(n=0;n<o&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),s=a.updated,c=a.deactivated,l=a.activated,u=[].concat(function(e){return oa(e,"beforeRouteLeave",ra,!0)}(c),this.router.beforeHooks,function(e){return oa(e,"beforeRouteUpdate",ra)}(s),l.map((function(e){return e.beforeEnter})),Ji(l));this.pending=e;var d=function(t,n){if(o.pending!==e)return i();try{t(e,r,(function(e){!1===e||Nr(e)?(o.ensureURL(!0),i(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(i(),"object"==typeof e&&e.replace?o.replace(e):o.push(e)):n(e)}))}catch(e){i(e)}};Ki(u,d,(function(){var n=[];Ki(function(e,t,n){return oa(e,"beforeRouteEnter",(function(e,o,r,i){return function(e,t,n,o,r){return function(i,a,s){return e(i,a,(function(e){"function"==typeof e&&o.push((function(){!function e(t,n,o,r){n[o]&&!n[o]._isBeingDestroyed?t(n[o]):r()&&setTimeout((function(){e(t,n,o,r)}),16)}(e,t.instances,n,r)})),s(e)}))}}(e,r,i,t,n)}))}(l,n,(function(){return o.current===e})).concat(o.router.resolveHooks),d,(function(){if(o.pending!==e)return i();o.pending=null,t(e),o.router.app&&o.router.app.$nextTick((function(){n.forEach((function(e){e()}))}))}))}))},na.prototype.updateRoute=function(e){var t=this.current;this.current=e,this.cb&&this.cb(e),this.router.afterHooks.forEach((function(n){n&&n(e,t)}))};var ia=function(e){function t(t,n){var o=this;e.call(this,t,n);var r=t.options.scrollBehavior,i=zi&&r;i&&Li();var a=aa(this.base);window.addEventListener("popstate",(function(e){var n=o.current,r=aa(o.base);o.current===Jr&&r===a||o.transitionTo(r,(function(e){i&&Fi(t,e,n,!0)}))}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var o=this,r=this.current;this.transitionTo(e,(function(e){Vi(ni(o.base+e.fullPath)),Fi(o.router,e,r,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var o=this,r=this.current;this.transitionTo(e,(function(e){Yi(ni(o.base+e.fullPath)),Fi(o.router,e,r,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(aa(this.base)!==this.current.fullPath){var t=ni(this.base+this.current.fullPath);e?Vi(t):Yi(t)}},t.prototype.getCurrentLocation=function(){return aa(this.base)},t}(na);function aa(e){var t=decodeURI(window.location.pathname);return e&&0===t.indexOf(e)&&(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var sa=function(e){function t(t,n,o){e.call(this,t,n),o&&function(e){var t=aa(e);if(!/^\/#/.test(t))return window.location.replace(ni(e+"/#"+t)),!0}(this.base)||ca()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this,t=this.router.options.scrollBehavior,n=zi&&t;n&&Li(),window.addEventListener(zi?"popstate":"hashchange",(function(){var t=e.current;ca()&&e.transitionTo(la(),(function(o){n&&Fi(e.router,o,t,!0),zi||fa(o.fullPath)}))}))},t.prototype.push=function(e,t,n){var o=this,r=this.current;this.transitionTo(e,(function(e){da(e.fullPath),Fi(o.router,e,r,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var o=this,r=this.current;this.transitionTo(e,(function(e){fa(e.fullPath),Fi(o.router,e,r,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;la()!==t&&(e?da(t):fa(t))},t.prototype.getCurrentLocation=function(){return la()},t}(na);function ca(){var e=la();return"/"===e.charAt(0)||(fa("/"+e),!1)}function la(){var e=window.location.href,t=e.indexOf("#");if(t<0)return"";var n=(e=e.slice(t+1)).indexOf("?");if(n<0){var o=e.indexOf("#");e=o>-1?decodeURI(e.slice(0,o))+e.slice(o):decodeURI(e)}else e=decodeURI(e.slice(0,n))+e.slice(n);return e}function ua(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function da(e){zi?Vi(ua(e)):window.location.hash=e}function fa(e){zi?Yi(ua(e)):window.location.replace(ua(e))}var ha=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var o=this;this.transitionTo(e,(function(e){o.stack=o.stack.slice(0,o.index+1).concat(e),o.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var o=this;this.transitionTo(e,(function(e){o.stack=o.stack.slice(0,o.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var o=this.stack[n];this.confirmTransition(o,(function(){t.index=n,t.updateRoute(o)}),(function(e){Rr(ta,e)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(na),pa=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ei(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!zi&&!1!==e.fallback,this.fallback&&(t="hash"),Ai||(t="abstract"),this.mode=t,t){case"history":this.history=new ia(this,e.base);break;case"hash":this.history=new sa(this,e.base,this.fallback);break;case"abstract":this.history=new ha(this,e.base);break;default:0}},ma={currentRoute:{configurable:!0}};function va(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}pa.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},ma.currentRoute.get=function(){return this.history&&this.history.current},pa.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null)})),!this.app){this.app=e;var n=this.history;if(n instanceof ia)n.transitionTo(n.getCurrentLocation());else if(n instanceof sa){var o=function(){n.setupListeners()};n.transitionTo(n.getCurrentLocation(),o,o)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},pa.prototype.beforeEach=function(e){return va(this.beforeHooks,e)},pa.prototype.beforeResolve=function(e){return va(this.resolveHooks,e)},pa.prototype.afterEach=function(e){return va(this.afterHooks,e)},pa.prototype.onReady=function(e,t){this.history.onReady(e,t)},pa.prototype.onError=function(e){this.history.onError(e)},pa.prototype.push=function(e,t,n){var o=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){o.history.push(e,t,n)}));this.history.push(e,t,n)},pa.prototype.replace=function(e,t,n){var o=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){o.history.replace(e,t,n)}));this.history.replace(e,t,n)},pa.prototype.go=function(e){this.history.go(e)},pa.prototype.back=function(){this.go(-1)},pa.prototype.forward=function(){this.go(1)},pa.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},pa.prototype.resolve=function(e,t,n){var o=ki(e,t=t||this.history.current,n,this),r=this.match(o,t),i=r.redirectedFrom||r.fullPath;return{location:o,route:r,href:function(e,t,n){var o="hash"===n?"#"+t:t;return e?ni(e+"/"+o):o}(this.history.base,i,this.mode),normalizedTo:o,resolved:r}},pa.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Jr&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(pa.prototype,ma),pa.install=function e(t){if(!e.installed||xi!==t){e.installed=!0,xi=t;var n=function(e){return void 0!==e},o=function(e,t){var o=e.$options._parentVnode;n(o)&&n(o=o.data)&&n(o=o.registerRouteInstance)&&o(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,o(this,this)},destroyed:function(){o(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",Fr),t.component("RouterLink",Ti);var r=t.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},pa.version="3.1.6",Ai&&window.Vue&&window.Vue.use(pa);var ga=pa;n(51),n(208),n(210),n(148),n(149),n(78),n(187),n(52);function ya(e){e.locales&&Object.keys(e.locales).forEach((function(t){e.locales[t].path=t})),Object.freeze(e)}n(188),n(152),n(24),n(190),n(47),n(43),n(63),n(97);function wa(e){return(wa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var ba=n(45),ka={NotFound:function(){return n.e(7).then(n.bind(null,372))},Layout:function(){return Promise.all([n.e(0),n.e(2)]).then(n.bind(null,371))}},xa={"v-bc8a9e7c":function(){return n.e(9).then(n.bind(null,376))},"v-7516ffb8":function(){return n.e(12).then(n.bind(null,377))},"v-7ce32f04":function(){return n.e(11).then(n.bind(null,378))},"v-50ad099c":function(){return n.e(14).then(n.bind(null,379))},"v-eecfef5c":function(){return n.e(13).then(n.bind(null,380))},"v-69e88912":function(){return n.e(10).then(n.bind(null,381))},"v-0b8efc12":function(){return n.e(17).then(n.bind(null,382))},"v-36fab472":function(){return n.e(16).then(n.bind(null,383))},"v-22d58fb8":function(){return n.e(15).then(n.bind(null,384))},"v-0f0d8802":function(){return n.e(19).then(n.bind(null,385))},"v-dd0e91dc":function(){return n.e(18).then(n.bind(null,386))},"v-638c7f72":function(){return n.e(23).then(n.bind(null,387))},"v-c8b5ac5c":function(){return n.e(21).then(n.bind(null,388))},"v-9fc3836c":function(){return n.e(20).then(n.bind(null,389))},"v-63ca6fb0":function(){return n.e(24).then(n.bind(null,390))},"v-69211952":function(){return n.e(26).then(n.bind(null,391))},"v-90365720":function(){return n.e(28).then(n.bind(null,392))},"v-3fad838b":function(){return n.e(22).then(n.bind(null,393))},"v-a903532c":function(){return n.e(27).then(n.bind(null,394))},"v-69788d92":function(){return n.e(25).then(n.bind(null,395))},"v-42255830":function(){return n.e(29).then(n.bind(null,396))},"v-673bc4f8":function(){return n.e(30).then(n.bind(null,397))},"v-9507cea6":function(){return n.e(32).then(n.bind(null,398))},"v-acc1c01c":function(){return n.e(31).then(n.bind(null,399))},"v-8600d25c":function(){return n.e(33).then(n.bind(null,400))},"v-c08582ea":function(){return n.e(34).then(n.bind(null,401))},"v-6afb1f94":function(){return n.e(35).then(n.bind(null,402))},"v-f44af5dc":function(){return n.e(36).then(n.bind(null,403))},"v-14c2a5f2":function(){return n.e(38).then(n.bind(null,404))},"v-1c78edd2":function(){return n.e(37).then(n.bind(null,405))},"v-38ecd0fa":function(){return n.e(40).then(n.bind(null,406))},"v-77dd3e5c":function(){return n.e(41).then(n.bind(null,407))},"v-1bb82bf2":function(){return n.e(39).then(n.bind(null,408))},"v-27ddd91c":function(){return n.e(42).then(n.bind(null,409))},"v-704d3a0b":function(){return n.e(44).then(n.bind(null,410))},"v-02405692":function(){return n.e(47).then(n.bind(null,411))},"v-de78b4f4":function(){return n.e(45).then(n.bind(null,412))},"v-2440909c":function(){return n.e(46).then(n.bind(null,413))},"v-65810322":function(){return n.e(49).then(n.bind(null,414))},"v-690f3d1c":function(){return n.e(48).then(n.bind(null,415))},"v-5891ac4c":function(){return n.e(50).then(n.bind(null,416))},"v-054a3e92":function(){return n.e(43).then(n.bind(null,417))},"v-6561abb4":function(){return n.e(54).then(n.bind(null,418))},"v-6b81078c":function(){return n.e(52).then(n.bind(null,419))},"v-4ce924ec":function(){return n.e(53).then(n.bind(null,420))},"v-f06c729c":function(){return n.e(51).then(n.bind(null,421))},"v-66ca865c":function(){return n.e(57).then(n.bind(null,422))},"v-9a2b5c34":function(){return n.e(55).then(n.bind(null,423))},"v-42c1d89c":function(){return n.e(59).then(n.bind(null,424))},"v-e1f9b0cc":function(){return n.e(56).then(n.bind(null,425))},"v-960c64bc":function(){return n.e(61).then(n.bind(null,426))},"v-f4212488":function(){return n.e(58).then(n.bind(null,427))},"v-8b4722ea":function(){return n.e(63).then(n.bind(null,428))},"v-66806f72":function(){return n.e(60).then(n.bind(null,429))},"v-4e8ba26c":function(){return n.e(64).then(n.bind(null,430))},"v-e357342a":function(){return n.e(62).then(n.bind(null,431))},"v-5b1f6c4b":function(){return n.e(65).then(n.bind(null,432))},"v-3da8b178":function(){return n.e(66).then(n.bind(null,433))},"v-62db476a":function(){return n.e(67).then(n.bind(null,434))}};function Sa(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var Ta=/-(\w)/g,Ca=Sa((function(e){return e.replace(Ta,(function(e,t){return t?t.toUpperCase():""}))})),Aa=/\B([A-Z])/g,Ia=Sa((function(e){return e.replace(Aa,"-$1").toLowerCase()})),_a=Sa((function(e){return e.charAt(0).toUpperCase()+e.slice(1)}));function Ea(e,t){if(t)return e(t)?e(t):t.includes("-")?e(_a(Ca(t))):e(_a(t))||e(Ia(t))}var Oa=Object.assign({},ka,xa),Pa=function(e){return Oa[e]},ja=function(e){return xa[e]},Wa=function(e){return ka[e]},Da=function(e){return Dr.component(e)};function Na(e){return Ea(ja,e)}function Ra(e){return Ea(Wa,e)}function La(e){return Ea(Pa,e)}function Fa(e){return Ea(Da,e)}function Ha(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Promise.all(t.filter((function(e){return e})).map(function(){var e=r(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(Fa(t)||!La(t)){e.next=5;break}return e.next=3,La(t)();case 3:n=e.sent,Dr.component(t,n.default);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()))}function qa(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}n(48),n(80),n(110);var $a=n(74);function Ma(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],o=!0,r=!1,i=void 0;try{for(var a,s=e[Symbol.iterator]();!(o=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);o=!0);}catch(e){r=!0,i=e}finally{try{o||null==s.return||s.return()}finally{if(r)throw i}}return n}}(e,t)||Object($a.a)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var Ga=n(182),Ua=n.n(Ga),Ba={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(e){return"meta"===Ma(e,1)[0]})).map((function(e){var t=Ma(e,2);t[0];return t[1]})),this.$ssrContext){var e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(t=e)?t.map((function(e){var t="<meta";return Object.keys(e).forEach((function(n){t+=" ".concat(n,'="').concat(e[n],'"')})),t+">"})).join("\n    "):""}var t},mounted:function(){this.currentMetaTags=Object(ba.a)(document.querySelectorAll("meta")),this.updateMeta()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var e=this.getMergedMetaTags();this.currentMetaTags=za(e,this.currentMetaTags)},getMergedMetaTags:function(){var e=this.$page.frontmatter.meta||[];return Ua()([{name:"description",content:this.$description}],e,this.siteMeta,Va)}},watch:{$page:function(){this.updateMeta()}},beforeDestroy:function(){za(null,this.currentMetaTags)}};function za(e,t){if(t&&Object(ba.a)(t).forEach((function(e){document.head.removeChild(e)})),e)return e.map((function(e){var t=document.createElement("meta");return Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])})),document.head.appendChild(t),t}))}function Va(e){for(var t=0,n=["name","property","itemprop"];t<n.length;t++){var o=n[t];if(e.hasOwnProperty(o))return e[o]+o}return JSON.stringify(e)}n(183);var Ya=n(75),Ka=n.n(Ya),Ja={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:Ka()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var e=this,t=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(e){return t.some((function(t){return t.hash===e.hash}))})),o=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+o,a=0;a<n.length;a++){var s=n[a],c=n[a+1],l=0===a&&0===o||o>=s.parentElement.offsetTop+10&&(!c||o<c.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(l&&u!==decodeURIComponent(s.hash)){var d=s;if(i===r)for(var f=a+1;f<n.length;f++)if(u===decodeURIComponent(n[f].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(d.hash),(function(){e.$nextTick((function(){e.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},Qa=(n(53),n(76)),Xa=n.n(Qa),Za={mounted:function(){var e=this;Xa.a.configure({showSpinner:!1}),this.$router.beforeEach((function(e,t,n){e.path===t.path||Dr.component(e.name)||Xa.a.start(),n()})),this.$router.afterEach((function(){Xa.a.done(),e.isSidebarOpen=!1}))}},es=(n(178),n(181)),ts=(n(192),{props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:function(){return{success:!1,originalBackground:null,originalTransition:null}},computed:{alignStyle:function(){var e={};return e[this.options.align]="7.5px",e},iconClass:function(){return this.options.staticIcon?"":"hover"}},mounted:function(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy:function(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb:function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},copyToClipboard:function(e){var t=this;if(navigator.clipboard)navigator.clipboard.writeText(this.code).then((function(){t.setSuccessTransitions()}),(function(){}));else{var n=document.createElement("textarea");document.body.appendChild(n),n.value=this.code,n.select(),document.execCommand("Copy"),n.remove(),this.setSuccessTransitions()}},setSuccessTransitions:function(){var e=this;if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";var t=this.hexToRgb(this.options.backgroundColor);this.parent.style.background="rgba(".concat(t.r,", ").concat(t.g,", ").concat(t.b,", 0.1)")}this.success=!0,this.successTimeout=setTimeout((function(){e.options.backgroundTransition&&(e.parent.style.background=e.originalBackground,e.parent.style.transition=e.originalTransition),e.success=!1}),500)}}}),ns=(n(311),n(8)),os=Object(ns.a)(ts,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"code-copy"},[n("svg",{class:e.iconClass,style:e.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:e.copyToClipboard}},[n("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e._v(" "),n("path",{attrs:{fill:e.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),e._v(" "),n("span",{class:e.success?"success":"",style:e.alignStyle},[e._v("\n        "+e._s(e.options.successText)+"\n    ")])])}),[],!1,null,"49140617",null).exports,rs=(n(312),[Ba,Ja,Za,{updated:function(){this.update()},methods:{update:function(){setTimeout((function(){document.querySelectorAll('div[class*="language-"] pre').forEach((function(e){if(!e.classList.contains("code-copy-added")){var t=new(Dr.extend(os));t.options=Object(es.a)({},{align:"bottom",color:"#27b1ff",backgroundTransition:!0,backgroundColor:"#0075b8",successText:"Copied!",staticIcon:!1}),t.code=e.innerText,t.parent=e,t.$mount(),e.classList.add("code-copy-added"),e.appendChild(t.$el)}}))}),100)}}}]),is={name:"GlobalLayout",computed:{layout:function(){var e=this.getLayout();return qa("layout",e),Dr.component(e)}},methods:{getLayout:function(){if(this.$page.path){var e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},as=Object(ns.a)(is,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){var o;switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),(o=e[t]).push.apply(o,Object(ba.a)(n));break;default:throw new Error("Unknown option name.")}}(as,"mixins",rs);var ss=[{name:"v-bc8a9e7c",path:"/GLOSSARY.html",component:as,beforeEnter:function(e,t,n){Ha("default","v-bc8a9e7c").then(n)}},{name:"v-7516ffb8",path:"/docs/use-cases/polling/",component:as,beforeEnter:function(e,t,n){Ha("default","v-7516ffb8").then(n)}},{path:"/docs/use-cases/polling/index.html",redirect:"/docs/use-cases/polling/"},{path:"/docs/01-use-cases/03-polling.html",redirect:"/docs/use-cases/polling/"},{name:"v-7ce32f04",path:"/docs/use-cases/orchestration/",component:as,beforeEnter:function(e,t,n){Ha("default","v-7ce32f04").then(n)}},{path:"/docs/use-cases/orchestration/index.html",redirect:"/docs/use-cases/orchestration/"},{path:"/docs/01-use-cases/02-orchestration.html",redirect:"/docs/use-cases/orchestration/"},{name:"v-50ad099c",path:"/docs/use-cases/partitioned-scan/",component:as,beforeEnter:function(e,t,n){Ha("default","v-50ad099c").then(n)}},{path:"/docs/use-cases/partitioned-scan/index.html",redirect:"/docs/use-cases/partitioned-scan/"},{path:"/docs/01-use-cases/05-partitioned-scan.html",redirect:"/docs/use-cases/partitioned-scan/"},{name:"v-eecfef5c",path:"/docs/use-cases/event-driven/",component:as,beforeEnter:function(e,t,n){Ha("default","v-eecfef5c").then(n)}},{path:"/docs/use-cases/event-driven/index.html",redirect:"/docs/use-cases/event-driven/"},{path:"/docs/01-use-cases/04-event-driven.html",redirect:"/docs/use-cases/event-driven/"},{name:"v-69e88912",path:"/docs/use-cases/periodic-execution/",component:as,beforeEnter:function(e,t,n){Ha("default","v-69e88912").then(n)}},{path:"/docs/use-cases/periodic-execution/index.html",redirect:"/docs/use-cases/periodic-execution/"},{path:"/docs/01-use-cases/01-periodic-execution.html",redirect:"/docs/use-cases/periodic-execution/"},{name:"v-0b8efc12",path:"/docs/use-cases/deployment/",component:as,beforeEnter:function(e,t,n){Ha("default","v-0b8efc12").then(n)}},{path:"/docs/use-cases/deployment/index.html",redirect:"/docs/use-cases/deployment/"},{path:"/docs/01-use-cases/08-deployment.html",redirect:"/docs/use-cases/deployment/"},{name:"v-36fab472",path:"/docs/use-cases/provisioning/",component:as,beforeEnter:function(e,t,n){Ha("default","v-36fab472").then(n)}},{path:"/docs/use-cases/provisioning/index.html",redirect:"/docs/use-cases/provisioning/"},{path:"/docs/01-use-cases/07-provisioning.html",redirect:"/docs/use-cases/provisioning/"},{name:"v-22d58fb8",path:"/docs/use-cases/batch-job/",component:as,beforeEnter:function(e,t,n){Ha("default","v-22d58fb8").then(n)}},{path:"/docs/use-cases/batch-job/index.html",redirect:"/docs/use-cases/batch-job/"},{path:"/docs/01-use-cases/06-batch-job.html",redirect:"/docs/use-cases/batch-job/"},{name:"v-0f0d8802",path:"/docs/use-cases/interactive/",component:as,beforeEnter:function(e,t,n){Ha("default","v-0f0d8802").then(n)}},{path:"/docs/use-cases/interactive/index.html",redirect:"/docs/use-cases/interactive/"},{path:"/docs/01-use-cases/10-interactive.html",redirect:"/docs/use-cases/interactive/"},{name:"v-dd0e91dc",path:"/docs/use-cases/operational-management/",component:as,beforeEnter:function(e,t,n){Ha("default","v-dd0e91dc").then(n)}},{path:"/docs/use-cases/operational-management/index.html",redirect:"/docs/use-cases/operational-management/"},{path:"/docs/01-use-cases/09-operational-management.html",redirect:"/docs/use-cases/operational-management/"},{name:"v-638c7f72",path:"/docs/concepts/workflows/",component:as,beforeEnter:function(e,t,n){Ha("default","v-638c7f72").then(n)}},{path:"/docs/concepts/workflows/index.html",redirect:"/docs/concepts/workflows/"},{path:"/docs/02-concepts/01-workflows.html",redirect:"/docs/concepts/workflows/"},{name:"v-c8b5ac5c",path:"/docs/use-cases/big-ml/",component:as,beforeEnter:function(e,t,n){Ha("default","v-c8b5ac5c").then(n)}},{path:"/docs/use-cases/big-ml/index.html",redirect:"/docs/use-cases/big-ml/"},{path:"/docs/01-use-cases/12-big-ml.html",redirect:"/docs/use-cases/big-ml/"},{name:"v-9fc3836c",path:"/docs/use-cases/dsl/",component:as,beforeEnter:function(e,t,n){Ha("default","v-9fc3836c").then(n)}},{path:"/docs/use-cases/dsl/index.html",redirect:"/docs/use-cases/dsl/"},{path:"/docs/01-use-cases/11-dsl.html",redirect:"/docs/use-cases/dsl/"},{name:"v-63ca6fb0",path:"/docs/concepts/activities/",component:as,beforeEnter:function(e,t,n){Ha("default","v-63ca6fb0").then(n)}},{path:"/docs/concepts/activities/index.html",redirect:"/docs/concepts/activities/"},{path:"/docs/02-concepts/02-activities.html",redirect:"/docs/concepts/activities/"},{name:"v-69211952",path:"/docs/concepts/queries/",component:as,beforeEnter:function(e,t,n){Ha("default","v-69211952").then(n)}},{path:"/docs/concepts/queries/index.html",redirect:"/docs/concepts/queries/"},{path:"/docs/02-concepts/04-queries.html",redirect:"/docs/concepts/queries/"},{name:"v-90365720",path:"/docs/concepts/task-lists/",component:as,beforeEnter:function(e,t,n){Ha("default","v-90365720").then(n)}},{path:"/docs/concepts/task-lists/index.html",redirect:"/docs/concepts/task-lists/"},{path:"/docs/02-concepts/06-task-lists.html",redirect:"/docs/concepts/task-lists/"},{name:"v-3fad838b",path:"/docs/use-cases/",component:as,beforeEnter:function(e,t,n){Ha("default","v-3fad838b").then(n)}},{path:"/docs/use-cases/index.html",redirect:"/docs/use-cases/"},{path:"/docs/01-use-cases/",redirect:"/docs/use-cases/"},{name:"v-a903532c",path:"/docs/concepts/topology/",component:as,beforeEnter:function(e,t,n){Ha("default","v-a903532c").then(n)}},{path:"/docs/concepts/topology/index.html",redirect:"/docs/concepts/topology/"},{path:"/docs/02-concepts/05-topology.html",redirect:"/docs/concepts/topology/"},{name:"v-69788d92",path:"/docs/concepts/events/",component:as,beforeEnter:function(e,t,n){Ha("default","v-69788d92").then(n)}},{path:"/docs/concepts/events/index.html",redirect:"/docs/concepts/events/"},{path:"/docs/02-concepts/03-events.html",redirect:"/docs/concepts/events/"},{name:"v-42255830",path:"/docs/concepts/archival/",component:as,beforeEnter:function(e,t,n){Ha("default","v-42255830").then(n)}},{path:"/docs/concepts/archival/index.html",redirect:"/docs/concepts/archival/"},{path:"/docs/02-concepts/07-archival.html",redirect:"/docs/concepts/archival/"},{name:"v-673bc4f8",path:"/docs/concepts/cross-dc-replication/",component:as,beforeEnter:function(e,t,n){Ha("default","v-673bc4f8").then(n)}},{path:"/docs/concepts/cross-dc-replication/index.html",redirect:"/docs/concepts/cross-dc-replication/"},{path:"/docs/02-concepts/08-cross-dc-replication.html",redirect:"/docs/concepts/cross-dc-replication/"},{name:"v-9507cea6",path:"/docs/concepts/",component:as,beforeEnter:function(e,t,n){Ha("default","v-9507cea6").then(n)}},{path:"/docs/concepts/index.html",redirect:"/docs/concepts/"},{path:"/docs/02-concepts/",redirect:"/docs/concepts/"},{name:"v-acc1c01c",path:"/docs/concepts/search-workflows/",component:as,beforeEnter:function(e,t,n){Ha("default","v-acc1c01c").then(n)}},{path:"/docs/concepts/search-workflows/index.html",redirect:"/docs/concepts/search-workflows/"},{path:"/docs/02-concepts/09-search-workflows.html",redirect:"/docs/concepts/search-workflows/"},{name:"v-8600d25c",path:"/docs/tutorials/java-hello-world/",component:as,beforeEnter:function(e,t,n){Ha("default","v-8600d25c").then(n)}},{path:"/docs/tutorials/java-hello-world/index.html",redirect:"/docs/tutorials/java-hello-world/"},{path:"/docs/03-video-tutorials/01-java-hello-world.html",redirect:"/docs/tutorials/java-hello-world/"},{name:"v-c08582ea",path:"/docs/tutorials/",component:as,beforeEnter:function(e,t,n){Ha("default","v-c08582ea").then(n)}},{path:"/docs/tutorials/index.html",redirect:"/docs/tutorials/"},{path:"/docs/03-video-tutorials/",redirect:"/docs/tutorials/"},{name:"v-6afb1f94",path:"/docs/java-client/quick-start/",component:as,beforeEnter:function(e,t,n){Ha("default","v-6afb1f94").then(n)}},{path:"/docs/java-client/quick-start/index.html",redirect:"/docs/java-client/quick-start/"},{path:"/docs/04-java-client/01-quick-start.html",redirect:"/docs/java-client/quick-start/"},{name:"v-f44af5dc",path:"/docs/java-client/workflow-interface/",component:as,beforeEnter:function(e,t,n){Ha("default","v-f44af5dc").then(n)}},{path:"/docs/java-client/workflow-interface/index.html",redirect:"/docs/java-client/workflow-interface/"},{path:"/docs/04-java-client/02-workflow-interface.html",redirect:"/docs/java-client/workflow-interface/"},{name:"v-14c2a5f2",path:"/docs/java-client/starting-workflow-executions/",component:as,beforeEnter:function(e,t,n){Ha("default","v-14c2a5f2").then(n)}},{path:"/docs/java-client/starting-workflow-executions/index.html",redirect:"/docs/java-client/starting-workflow-executions/"},{path:"/docs/04-java-client/04-starting-workflow-executions.html",redirect:"/docs/java-client/starting-workflow-executions/"},{name:"v-1c78edd2",path:"/docs/java-client/implementing-workflows/",component:as,beforeEnter:function(e,t,n){Ha("default","v-1c78edd2").then(n)}},{path:"/docs/java-client/implementing-workflows/index.html",redirect:"/docs/java-client/implementing-workflows/"},{path:"/docs/04-java-client/03-implementing-workflows.html",redirect:"/docs/java-client/implementing-workflows/"},{name:"v-38ecd0fa",path:"/docs/java-client/implementing-activities/",component:as,beforeEnter:function(e,t,n){Ha("default","v-38ecd0fa").then(n)}},{path:"/docs/java-client/implementing-activities/index.html",redirect:"/docs/java-client/implementing-activities/"},{path:"/docs/04-java-client/06-implementing-activities.html",redirect:"/docs/java-client/implementing-activities/"},{name:"v-77dd3e5c",path:"/docs/java-client/versioning/",component:as,beforeEnter:function(e,t,n){Ha("default","v-77dd3e5c").then(n)}},{path:"/docs/java-client/versioning/index.html",redirect:"/docs/java-client/versioning/"},{path:"/docs/04-java-client/07-versioning.html",redirect:"/docs/java-client/versioning/"},{name:"v-1bb82bf2",path:"/docs/java-client/activity-interface/",component:as,beforeEnter:function(e,t,n){Ha("default","v-1bb82bf2").then(n)}},{path:"/docs/java-client/activity-interface/index.html",redirect:"/docs/java-client/activity-interface/"},{path:"/docs/04-java-client/05-activity-interface.html",redirect:"/docs/java-client/activity-interface/"},{name:"v-27ddd91c",path:"/docs/java-client/distributed-cron/",component:as,beforeEnter:function(e,t,n){Ha("default","v-27ddd91c").then(n)}},{path:"/docs/java-client/distributed-cron/index.html",redirect:"/docs/java-client/distributed-cron/"},{path:"/docs/04-java-client/08-distributed-cron.html",redirect:"/docs/java-client/distributed-cron/"},{name:"v-704d3a0b",path:"/docs/java-client/",component:as,beforeEnter:function(e,t,n){Ha("default","v-704d3a0b").then(n)}},{path:"/docs/java-client/index.html",redirect:"/docs/java-client/"},{path:"/docs/04-java-client/",redirect:"/docs/java-client/"},{name:"v-02405692",path:"/docs/go-client/activities/",component:as,beforeEnter:function(e,t,n){Ha("default","v-02405692").then(n)}},{path:"/docs/go-client/activities/index.html",redirect:"/docs/go-client/activities/"},{path:"/docs/05-go-client/03-activities.html",redirect:"/docs/go-client/activities/"},{name:"v-de78b4f4",path:"/docs/go-client/workers/",component:as,beforeEnter:function(e,t,n){Ha("default","v-de78b4f4").then(n)}},{path:"/docs/go-client/workers/index.html",redirect:"/docs/go-client/workers/"},{path:"/docs/05-go-client/01-workers.html",redirect:"/docs/go-client/workers/"},{name:"v-2440909c",path:"/docs/go-client/create-workflows/",component:as,beforeEnter:function(e,t,n){Ha("default","v-2440909c").then(n)}},{path:"/docs/go-client/create-workflows/index.html",redirect:"/docs/go-client/create-workflows/"},{path:"/docs/05-go-client/02-create-workflows.html",redirect:"/docs/go-client/create-workflows/"},{name:"v-65810322",path:"/docs/go-client/child-workflows/",component:as,beforeEnter:function(e,t,n){Ha("default","v-65810322").then(n)}},{path:"/docs/go-client/child-workflows/index.html",redirect:"/docs/go-client/child-workflows/"},{path:"/docs/05-go-client/05-child-workflows.html",redirect:"/docs/go-client/child-workflows/"},{name:"v-690f3d1c",path:"/docs/go-client/execute-activity/",component:as,beforeEnter:function(e,t,n){Ha("default","v-690f3d1c").then(n)}},{path:"/docs/go-client/execute-activity/index.html",redirect:"/docs/go-client/execute-activity/"},{path:"/docs/05-go-client/04-execute-activity.html",redirect:"/docs/go-client/execute-activity/"},{name:"v-5891ac4c",path:"/docs/go-client/retries/",component:as,beforeEnter:function(e,t,n){Ha("default","v-5891ac4c").then(n)}},{path:"/docs/go-client/retries/index.html",redirect:"/docs/go-client/retries/"},{path:"/docs/05-go-client/06-retries.html",redirect:"/docs/go-client/retries/"},{name:"v-054a3e92",path:"/docs/java-client/java-samples/",component:as,beforeEnter:function(e,t,n){Ha("default","v-054a3e92").then(n)}},{path:"/docs/java-client/java-samples/index.html",redirect:"/docs/java-client/java-samples/"},{path:"/docs/04-java-client/09-java-samples.html",redirect:"/docs/java-client/java-samples/"},{name:"v-6561abb4",path:"/docs/go-client/side-effect/",component:as,beforeEnter:function(e,t,n){Ha("default","v-6561abb4").then(n)}},{path:"/docs/go-client/side-effect/index.html",redirect:"/docs/go-client/side-effect/"},{path:"/docs/05-go-client/10-side-effect.html",redirect:"/docs/go-client/side-effect/"},{name:"v-6b81078c",path:"/docs/go-client/signals/",component:as,beforeEnter:function(e,t,n){Ha("default","v-6b81078c").then(n)}},{path:"/docs/go-client/signals/index.html",redirect:"/docs/go-client/signals/"},{path:"/docs/05-go-client/08-signals.html",redirect:"/docs/go-client/signals/"},{name:"v-4ce924ec",path:"/docs/go-client/continue-as-new/",component:as,beforeEnter:function(e,t,n){Ha("default","v-4ce924ec").then(n)}},{path:"/docs/go-client/continue-as-new/index.html",redirect:"/docs/go-client/continue-as-new/"},{path:"/docs/05-go-client/09-continue-as-new.html",redirect:"/docs/go-client/continue-as-new/"},{name:"v-f06c729c",path:"/docs/go-client/error-handling/",component:as,beforeEnter:function(e,t,n){Ha("default","v-f06c729c").then(n)}},{path:"/docs/go-client/error-handling/index.html",redirect:"/docs/go-client/error-handling/"},{path:"/docs/05-go-client/07-error-handling.html",redirect:"/docs/go-client/error-handling/"},{name:"v-66ca865c",path:"/docs/go-client/workflow-testing/",component:as,beforeEnter:function(e,t,n){Ha("default","v-66ca865c").then(n)}},{path:"/docs/go-client/workflow-testing/index.html",redirect:"/docs/go-client/workflow-testing/"},{path:"/docs/05-go-client/13-workflow-testing.html",redirect:"/docs/go-client/workflow-testing/"},{name:"v-9a2b5c34",path:"/docs/go-client/queries/",component:as,beforeEnter:function(e,t,n){Ha("default","v-9a2b5c34").then(n)}},{path:"/docs/go-client/queries/index.html",redirect:"/docs/go-client/queries/"},{path:"/docs/05-go-client/11-queries.html",redirect:"/docs/go-client/queries/"},{name:"v-42c1d89c",path:"/docs/go-client/sessions/",component:as,beforeEnter:function(e,t,n){Ha("default","v-42c1d89c").then(n)}},{path:"/docs/go-client/sessions/index.html",redirect:"/docs/go-client/sessions/"},{path:"/docs/05-go-client/15-sessions.html",redirect:"/docs/go-client/sessions/"},{name:"v-e1f9b0cc",path:"/docs/go-client/activity-async-completion/",component:as,beforeEnter:function(e,t,n){Ha("default","v-e1f9b0cc").then(n)}},{path:"/docs/go-client/activity-async-completion/index.html",redirect:"/docs/go-client/activity-async-completion/"},{path:"/docs/05-go-client/12-activity-async-completion.html",redirect:"/docs/go-client/activity-async-completion/"},{name:"v-960c64bc",path:"/docs/go-client/tracing/",component:as,beforeEnter:function(e,t,n){Ha("default","v-960c64bc").then(n)}},{path:"/docs/go-client/tracing/index.html",redirect:"/docs/go-client/tracing/"},{path:"/docs/05-go-client/17-tracing.html",redirect:"/docs/go-client/tracing/"},{name:"v-f4212488",path:"/docs/go-client/workflow-versioning/",component:as,beforeEnter:function(e,t,n){Ha("default","v-f4212488").then(n)}},{path:"/docs/go-client/workflow-versioning/index.html",redirect:"/docs/go-client/workflow-versioning/"},{path:"/docs/05-go-client/14-workflow-versioning.html",redirect:"/docs/go-client/workflow-versioning/"},{name:"v-8b4722ea",path:"/docs/cli/",component:as,beforeEnter:function(e,t,n){Ha("default","v-8b4722ea").then(n)}},{path:"/docs/cli/index.html",redirect:"/docs/cli/"},{path:"/docs/06-cli/",redirect:"/docs/cli/"},{name:"v-66806f72",path:"/docs/go-client/distributed-cron/",component:as,beforeEnter:function(e,t,n){Ha("default","v-66806f72").then(n)}},{path:"/docs/go-client/distributed-cron/index.html",redirect:"/docs/go-client/distributed-cron/"},{path:"/docs/05-go-client/16-distributed-cron.html",redirect:"/docs/go-client/distributed-cron/"},{name:"v-4e8ba26c",path:"/docs/about/license/",component:as,beforeEnter:function(e,t,n){Ha("default","v-4e8ba26c").then(n)}},{path:"/docs/about/license/index.html",redirect:"/docs/about/license/"},{path:"/docs/07-about/01-license.html",redirect:"/docs/about/license/"},{name:"v-e357342a",path:"/docs/go-client/",component:as,beforeEnter:function(e,t,n){Ha("default","v-e357342a").then(n)}},{path:"/docs/go-client/index.html",redirect:"/docs/go-client/"},{path:"/docs/05-go-client/",redirect:"/docs/go-client/"},{name:"v-5b1f6c4b",path:"/docs/about/",component:as,beforeEnter:function(e,t,n){Ha("default","v-5b1f6c4b").then(n)}},{path:"/docs/about/index.html",redirect:"/docs/about/"},{path:"/docs/07-about/",redirect:"/docs/about/"},{name:"v-3da8b178",path:"/docs/cadence/",component:as,beforeEnter:function(e,t,n){Ha("default","v-3da8b178").then(n)}},{path:"/docs/cadence/index.html",redirect:"/docs/cadence/"},{path:"/docs/cadence.html",redirect:"/docs/cadence/"},{name:"v-62db476a",path:"/",component:as,beforeEnter:function(e,t,n){Ha("Layout","v-62db476a").then(n)}},{path:"/index.html",redirect:"/"},{path:"*",component:as}],cs={title:"Cadence",description:"",base:"/cadence/",headTags:[["link",{rel:"icon",href:"/cadence/img/favicon.ico"}]],pages:[{title:"Glossary",frontmatter:{layout:"default",title:"Glossary",terms:{activity:"A business-level function that implements your application logic such as calling a service or transcoding a media file. An activity usually implements a single well-defined action; it can be short or long running. An activity can be implemented as a synchronous method or fully asynchronously involving multiple processes. An activity can be retried indefinitely according to the provided exponential retry policy. If for any reason an activity is not completed within the specified timeout, an error is reported to the workflow and the workflow decides how to handle it. There is no limit on potential activity duration.","activity task":"A task that contains an activity invocation information that is delivered to an activity worker through and an  activity task list. An activity worker upon receiving activity task executes a correponding activity","activity task list":"Task list that is used to deliver activity task to activity worker","activity worker":"An object that is executed in the client application and receives activity task from an  activity task list it is subscribed to. Once task is received it invokes a correspondent activity.",archival:"Archival is a feature that automatically moves event history from persistence to a blobstore after the workflow retention period. The purpose of archival is to be able to keep histories as long as needed while not overwhelming the persistence store. There are two reasons you may want to keep the histories after the retention period has passed: 1. Compliance: For legal reasons, histories may need to be stored for a long period of time. 2. Debugging: Old histories can still be accessed for debugging.",CLI:"Cadence command-line interface.","client stub":"A client-side proxy used to make remote invocations to an entity that it represents. For example, to start a workflow, a stub object that represents this workflow is created through a special API. Then this stub is used to start, query, or signal the corresponding workflow.\nThe Go client doesn't use this.",decision:"Any action taken by the workflow durable function is called a decision. For example: scheduling an activity, canceling a child workflow, or starting a timer. A decision task contains an optional list of decisions. Every decision is recorded in the event history as an event.","decision task":"Every time a new external event that might affect a workflow state is recorded, a decision task that contains it is added to a decision task list and then picked up by a workflow worker. After the new event is handled, the decision task is completed with a list of decision. Note that handling of a decision task is usually very fast and is not related to duration of operations that the workflow invokes.","decision task list":"Task list that is used to deliver decision task to workflow worker",domain:"Cadence is backed by a multitenant service. The unit of isolation is called a domain. Each domain acts as a namespace for task list names as well as workflow IDs. For example, when a workflow is started, it is started in a specific domain. Cadence guarantees a unique workflow ID within a domain, and supports running workflow executions to use the same workflow ID if they are in different domains. Various configuration options like retention period or archival destination are configured per domain as well through a special CRUD API or through the Cadence CLI. In the multi-cluster deployment, domain is a unit of fail-over. Each domain can only be active on a single Cadence cluster at a time. However, different domains can be active in different clusters and can fail-over independently.",event:"An indivisible operation performed by your application. For example, activity_task_started, task_failed, or timer_canceled. Events are recorded in the event history.","event history":"An append log of events for your application. History is durably persisted by the Cadence service, enabling seamless recovery of your application state from crashes or failures. It also serves as an audit log for debugging.","local activity":"A local activity is an activity that is invoked directly in the same process by a workflow code. It consumes much less resources than a normal activity, but imposes a lot of limitations like low duration and lack of rate limiting.",query:"A synchronous (from the caller's point of view) operation that is used to report a workflow state. Note that a query is inherently read only and cannot affect a workflow state.","run ID":"A UUID that a Cadence service assigns to each workflow run. If allowed by a configured policy, you might be able to re-execute a workflow, after it has closed or failed, with the same workflow id. Each such re-execution is called a run. run id is used to uniquely identify a run even if it shares a workflow id with others.",signal:"An external asynchronous request to a workflow. It can be used to deliver notifications or updates to a running workflow at any point in its existence.",task:"The context needed to execute a specific activity or workflow state transition. There are two types of tasks: an activity task and a decision task (aka workflow task). Note that a single activity execution corresponds to a single activity task, while a workflow execution employs multiple decision tasks.","task list":"Common name for activity task list and decision task list","task token":"A unique correlation ID for a Cadence activity. Activity completion calls take either task token or DomainName, WorkflowID, ActivityID arguments.",worker:"Also known as a worker service. A service that hosts the workflow and activity implementations. The worker polls the Cadence service for tasks, performs those tasks, and communicates task execution results back to the Cadence service. Worker services are developed, deployed, and operated by Cadence customers.",workflow:"A fault-oblivious stateful function that orchestrates activities. A workflow has full control over which activities are executed, and in which order. A workflow must not affect the external world directly, only through activities. What makes workflow code a workflow is that its state is preserved by Cadence. Therefore any failure of a worker process that hosts the workflow code does not affect the workflow execution. The workflow continues as if these failures did not happen. At the same time, activities can fail any moment for any reason. Because workflow code is fully fault-oblivious, it is guaranteed to get notifications about activity failures or timeouts and act accordingly. There is no limit on potential workflow duration.","workflow execution":"An instance of a workflow. The instance can be in the process of executing or it could have already completed execution.","workflow ID":"A unique identifier for a workflow execution. Cadence guarantees the uniqueness of an ID within a domain. An attempt to start a workflow with a duplicate ID results in an already started error.","workflow task":"Synonym of the decision task.","workflow worker":"An object that is executed in the client application and receives decision task from an  decision task list it is subscribed to. Once task is received it is handled by a correponding workflow."},readingShow:"top"},regularPath:"/GLOSSARY.html",relativePath:"GLOSSARY.md",key:"v-bc8a9e7c",path:"/GLOSSARY.html",content:" Glossary \n \n"},{title:"Polling",frontmatter:{layout:"default",title:"Polling",permalink:"/docs/use-cases/polling",readingShow:"top"},regularPath:"/docs/01-use-cases/03-polling.html",relativePath:"docs/01-use-cases/03-polling.md",key:"v-7516ffb8",path:"/docs/use-cases/polling/",content:" Polling \n Polling is executing a periodic action checking for a state change. Examples are pinging a host, calling a REST API, or listing an Amazon S3 bucket for newly uploaded files. \n Cadence support for long running   and unlimited retries makes it a good fit. \n Some real-world use cases: \n \n Network, host and service monitoring \n Processing files uploaded to FTP or S3 \n Polling an external API for a specific resource to become available \n \n"},{title:"Orchestration",frontmatter:{layout:"default",title:"Orchestration",permalink:"/docs/use-cases/orchestration",readingShow:"top"},regularPath:"/docs/01-use-cases/02-orchestration.html",relativePath:"docs/01-use-cases/02-orchestration.md",key:"v-7ce32f04",path:"/docs/use-cases/orchestration/",content:" Microservice Orchestration and Saga \n It is common that some business processes are implemented as multiple microservice calls.\nAnd the implementation must guarantee that all of the calls must eventually succeed even with the occurrence of prolonged downstream service failures.\nIn some cases, instead of trying to complete the process by retrying for a long time, compensation rollback logic should be executed.\n Saga Pattern  is one way to standardize on compensation APIs. \n Cadence is a perfect fit for such scenarios. It guarantees that   code eventually completes, has built-in support\nfor unlimited exponential   retries and simplifies coding of the compensation logic. It also gives full visibility into the state of each  , in contrast to an orchestration based on queues where getting a current status of each individual request is practically impossible. \n Following are some real-world examples of Cadence-based service orchestration scenarios: \n \n Using Cadence workflows to spin up Kubernetes by Banzai Cloud \n Improving the User Experience with Uber’s Customer Obsession Ticket Routing Workflow and Orchestration Engine \n \n"},{title:"Storage scan",frontmatter:{layout:"default",title:"Storage scan",permalink:"/docs/use-cases/partitioned-scan",readingShow:"top"},regularPath:"/docs/01-use-cases/05-partitioned-scan.html",relativePath:"docs/01-use-cases/05-partitioned-scan.md",key:"v-50ad099c",path:"/docs/use-cases/partitioned-scan/",content:" Storage scan \n It is common to have large data sets partitioned across a large number of hosts or databases, or having billions of files in an Amazon S3 bucket.\nCadence is an ideal solution for implementing the full scan of such data in a scalable and resilient way. The standard pattern\nis to run an   (or multiple parallel   for partitioned data sets) that performs the scan and heartbeats its progress\nback to Cadence. In the case of a host failure, the   is retried on a different host and continues execution from the last reported progress. \n A real-world example: \n \n Cadence internal system   that performs periodic scan of all   records \n \n"},{title:"Event driven application",frontmatter:{layout:"default",title:"Event driven application",permalink:"/docs/use-cases/event-driven",readingShow:"top"},regularPath:"/docs/01-use-cases/04-event-driven.html",relativePath:"docs/01-use-cases/04-event-driven.md",key:"v-eecfef5c",path:"/docs/use-cases/event-driven/",content:" Event driven application \n Many applications listen to multiple   sources, update the state of correspondent business entities,\nand have to execute actions if some state is reached.\nCadence is a good fit for many of these. It has direct support for asynchronous   (aka  ),\nhas a simple programming model that obscures a lot of complexity\naround state persistence, and ensures external action execution through built-in retries. \n Real-world examples: \n \n Fraud detection where   reacts to   generated by consumer behavior \n Customer loyalty program where the   accumulates reward points and applies them when requested \n \n"},{title:"Periodic execution",frontmatter:{layout:"default",title:"Periodic execution",permalink:"/docs/use-cases/periodic-execution",readingShow:"top"},regularPath:"/docs/01-use-cases/01-periodic-execution.html",relativePath:"docs/01-use-cases/01-periodic-execution.md",key:"v-69e88912",path:"/docs/use-cases/periodic-execution/",content:" Periodic execution (aka Distributed Cron) \n Periodic execution, frequently referred to as distributed cron, is when you execute business logic periodically. The advantage of Cadence for these scenarios is that it guarantees execution, sophisticated error handling, retry policies, and visibility into execution history. \n Another important dimension is scale. Some use cases require periodic execution for a large number of entities.\nAt Uber, there are applications that create periodic   per customer.\nImagine 100+ million parallel cron jobs that don't require a separate batch processing framework. \n Periodic execution is often part of other use cases. For example, once a month report generation is a periodic service orchestration. Or an event-driven   that accumulates loyalty points for a customer and applies those points once a month. \n There are many real-world examples of Cadence periodic executions. Such as the following: \n \n An Uber backend service that recalculates various statistics for each  hex  in each city once a minute. \n Monthly Uber for Business report generation. \n \n"},{title:"Deployment",frontmatter:{layout:"default",title:"Deployment",permalink:"/docs/use-cases/deployment",readingShow:"top"},regularPath:"/docs/01-use-cases/08-deployment.html",relativePath:"docs/01-use-cases/08-deployment.md",key:"v-0b8efc12",path:"/docs/use-cases/deployment/",content:" CI/CD and Deployment \n Implementing CI/CD pipelines and deployment of applications to containers or virtual or physical machines is a non-trivial process.\nIts business logic has to deal with complex requirements around rolling upgrades, canary deployments, and rollbacks.\nCadence is a perfect platform for building a deployment solution because it provides all the necessary guarantees and abstractions\nallowing developers to focus on the business logic. \n Example production systems: \n \n Uber internal deployment infrastructure \n Update push to IoT devices \n \n"},{title:"Infrastructure provisioning",frontmatter:{layout:"default",title:"Infrastructure provisioning",permalink:"/docs/use-cases/provisioning",readingShow:"top"},regularPath:"/docs/01-use-cases/07-provisioning.html",relativePath:"docs/01-use-cases/07-provisioning.md",key:"v-36fab472",path:"/docs/use-cases/provisioning/",content:" Infrastructure provisioning \n Provisioning a new datacenter or a pool of machines in a public cloud is a potentially long running operation with\na lot of possibilities for intermittent failures. The scale is also a concern when tens or even hundreds of thousands of resources should be provisioned and configured. One useful feature for provisioning scenarios is Cadence support for routing   execution to a specific process or host. \n A lot of operations require some sort of locking to ensure that no more than one mutation is executed on a resource at a time.\nCadence provides strong guarantees of uniqueness by business ID. This can be used to implement such locking behavior in a fault tolerant and scalable manner. \n Some real-world use cases: \n \n Using Cadence workflows to spin up Kubernetes, by Banzai Cloud \n Using Cadence to orchestrate cluster life cycle in HashiCorp Consul, by HashiCorp \n \n"},{title:"Batch job",frontmatter:{layout:"default",title:"Batch job",permalink:"/docs/use-cases/batch-job",readingShow:"top"},regularPath:"/docs/01-use-cases/06-batch-job.html",relativePath:"docs/01-use-cases/06-batch-job.md",key:"v-22d58fb8",path:"/docs/use-cases/batch-job/",content:" Batch job \n A lot of batch jobs are not pure data manipulation programs. For those, the existing big data frameworks are the best fit.\nBut if processing a record requires external API calls that might fail and potentially take a long time, Cadence might be preferable. \n One of our internal Uber customer uses Cadence for end of month statement generation. Each statement requires calls to multiple\nmicroservices and some statements can be really large. Cadence was chosen because it provides hard guarantees around durability of the financial data and seamlessly deals with long running operations, retries, and intermittent failures. \n"},{title:"Interactive application",frontmatter:{layout:"default",title:"Interactive application",permalink:"/docs/use-cases/interactive",readingShow:"top"},regularPath:"/docs/01-use-cases/10-interactive.html",relativePath:"docs/01-use-cases/10-interactive.md",key:"v-0f0d8802",path:"/docs/use-cases/interactive/",content:" Interactive application \n Cadence is performant and scalable enough to support interactive applications. It can be used to track UI session state and\nat the same time execute background operations. For example, while placing an order a customer might need to go through several screens while a background   evaluates the customer for fraudulent  . \n"},{title:"Operational management",frontmatter:{layout:"default",title:"Operational management",permalink:"/docs/use-cases/operational-management",readingShow:"top"},regularPath:"/docs/01-use-cases/09-operational-management.html",relativePath:"docs/01-use-cases/09-operational-management.md",key:"v-dd0e91dc",path:"/docs/use-cases/operational-management/",content:" Operational management \n Imagine that you have to create a self operating database similar to Amazon RDS. Cadence is used in multiple projects\nthat automate managing and automatic recovery of various products like MySQL, Elasticsearch and Apache Cassandra. \n Such systems are usually a mixture of different use cases. They need to monitor the status of resources using polling. They have to execute orchestration API calls to administrative interfaces of a database. They have to provision new hardware or Docker instances if necessary. They need to push configuration updates and perform other actions like backups periodically. \n"},{title:"Workflows",frontmatter:{layout:"default",title:"Workflows",permalink:"/docs/concepts/workflows",readingShow:"top"},regularPath:"/docs/02-concepts/01-workflows.html",relativePath:"docs/02-concepts/01-workflows.md",key:"v-638c7f72",path:"/docs/concepts/workflows/",headers:[{level:2,title:"Overview",slug:"overview"},{level:2,title:"Example",slug:"example"},{level:2,title:"State Recovery and Determinism",slug:"state-recovery-and-determinism"},{level:2,title:"ID Uniqueness",slug:"id-uniqueness"},{level:2,title:"Child Workflow",slug:"child-workflow"},{level:2,title:"Workflow Retries",slug:"workflow-retries"}],content:" Fault-oblivious stateful workflow code \n Overview \n Cadence core abstraction is a  fault-oblivious stateful  . The state of the   code, including local variables and threads it creates, is immune to process and Cadence service failures.\nThis is a very powerful concept as it encapsulates state, processing threads, durable timers and   handlers. \n Example \n Let's look at a use case. A customer signs up for an application with a trial period. After the period, if the customer has not cancelled, he should be charged once a month for the renewal. The customer has to be notified by email about the charges and should be able to cancel the subscription at any time. \n The business logic of this use case is not very complicated and can be expressed in a few dozen lines of code. But any practical implementation has to ensure that the business process is fault tolerant and scalable. There are various ways to approach the design of such a system. \n One approach is to center it around a database. An application process would periodically scan database tables for customers in specific states, execute necessary actions, and update the state to reflect that. While feasible, this approach has various drawbacks. The most obvious is that the state machine of the customer state quickly becomes extremely complicated. For example, charging a credit card or sending emails can fail due to a downstream system unavailability. The failed calls might need to be retried for a long time, ideally using an exponential retry policy. These calls should be throttled to not overload external systems. There should be support for poison pills to avoid blocking the whole process if a single customer record cannot be processed for whatever reason. The database-based approach also usually has performance problems. Databases are not efficient for scenarios that require constant polling for records in a specific state. \n Another commonly employed approach is to use a timer service and queues. Any update is pushed to a queue and then a   that consumes from it updates a database and possibly pushes more messages in downstream queues. For operations that require scheduling, an external timer service can be used. This approach usually scales much better because a database is not constantly polled for changes. But it makes the programming model more complex and error prone as usually there is no transactional update between a queuing system and a database. \n With Cadence, the entire logic can be encapsulated in a simple durable function that directly implements the business logic. Because the function is stateful, the implementer doesn't need to employ any additional systems to ensure durability and fault tolerance. \n Here is an example   that implements the subscription management use case. It is in Java, but Go is also supported. The Python and .NET libraries are under active development. \n public   interface   SubscriptionWorkflow   { \n     @WorkflowMethod \n     void   execute ( String  customerId ) ; \n } \n\n public   class   SubscriptionWorkflowImpl   implements   SubscriptionWorkflow   { \n\n     private   final   SubscriptionActivities  activities  = \n         Workflow . newActivityStub ( SubscriptionActivities . class ) ; \n\n     @Override \n     public   void   execute ( String  customerId )   { \n        activities . sendWelcomeEmail ( customerId ) ; \n         try   { \n             boolean  trialPeriod  =   true ; \n             while   ( true )   { \n                 Workflow . sleep ( Duration . ofDays ( 30 ) ) ; \n                activities . chargeMonthlyFee ( customerId ) ; \n                 if   ( trialPeriod )   { \n                    activities . sendEndOfTrialEmail ( customerId ) ; \n                    trialPeriod  =   false ; \n                 }   else   { \n                    activities . sendMonthlyChargeEmail ( customerId ) ; \n                 } \n             } \n         }   catch   ( CancellationException  e )   { \n            activities . processSubscriptionCancellation ( customerId ) ; \n            activities . sendSorryToSeeYouGoEmail ( customerId ) ; \n         } \n     } \n } \n \n Again, note that this code directly implements the business logic. If any of the invoked operations (aka  ) takes a long time, the code is not going to change. It is okay to block on  chargeMonthlyFee  for a day if the downstream processing service is down that long. The same way that blocking sleep for 30 days is a normal operation inside the   code. \n Cadence has practically no scalability limits on the number of open   instances. So even if your site has hundreds of millions of consumers, the above code is not going to change. \n The commonly asked question by developers that learn Cadence is &quot;How do I handle   process failure/restart in my  &quot;? The answer is that you do not.  The   code is completely oblivious to any failures and downtime of   or even the Cadence service itself . As soon as they are recovered and the   needs to handle some  , like timer or an   completion, the current state of the   is fully restored and the execution is continued. The only reason for a   failure is the   business code throwing an exception, not underlying infrastructure outages. \n Another commonly asked question is whether a   can handle more   instances than its cache size or number of threads it can support. The answer is that a  , when in a blocked state, can be safely removed from a  .\nLater it can be resurrected on a different or the same   when the need (in the form of an external  ) arises. So a single   can handle millions of open  , assuming it can handle the update rate. \n State Recovery and Determinism \n The   state recovery utilizes   sourcing which puts a few restrictions on how the code is written. The main restriction is that the   code must be deterministic which means that it must produce exactly the same result if executed multiple times. This rules out any external API calls from the   code as external calls can fail intermittently or change its output any time. That is why all communication with the external world should happen through  . For the same reason,   code must use Cadence APIs to get current time, sleep, and create new threads. \n To understand the Cadence execution model as well as the recovery mechanism, watch the following webcast. The animation covering recovery starts at 15:50. \n ID Uniqueness \n  is assigned by a client when starting a  . It is usually a business level ID like customer ID or order ID. \n Cadence guarantees that there could be only one   (across all   types) with a given ID open per   at any time. An attempt to start a   with the same ID is going to fail with  WorkflowExecutionAlreadyStarted  error. \n An attempt to start a   if there is a completed   with the same ID depends on a  WorkflowIdReusePolicy  option: \n \n AllowDuplicateFailedOnly  means that it is allowed to start a   only if a previously executed   with the same ID failed. \n AllowDuplicate  means that it is allowed to start independently of the previous   completion status. \n RejectDuplicate  means that it is not allowed to start a   using the same   at all. \n \n The default is  AllowDuplicateFailedOnly . \n To distinguish multiple runs of a   with the same  , Cadence identifies a   with two IDs:  Workflow ID  and  Run ID .  Run ID  is a service-assigned UUID. To be precise, any   is uniquely identified by a triple:  Domain Name ,  Workflow ID  and  Run ID . \n Child Workflow \n A   can execute other   as  child :workflow:workflows: . A child   completion or failure is reported to its parent. \n Some reasons to use child   are: \n \n A child   can be hosted by a separate set of   which don't contain the parent   code. So it would act as a separate service that can be invoked from multiple other  . \n A single   has a limited size. For example, it cannot execute 100k  . Child   can be used to partition the problem into smaller chunks. One parent with 1000 children each executing 1000   is 1 million executed  . \n A child   can be used to manage some resource using its ID to guarantee uniqueness. For example, a   that manages host upgrades can have a child   per host (host name being a  ) and use them to ensure that all operations on the host are serialized. \n A child   can be used to execute some periodic logic without blowing up the parent history size. When a parent starts a child, it executes periodic logic calling that continues as many times as needed, then completes. From the parent point if view, it is just a single child   invocation. \n \n The main limitation of a child   versus collocating all the application logic in a single   is lack of the shared state. Parent and child can communicate only through asynchronous  . But if there is a tight coupling between them, it might be simpler to use a single   and just rely on a shared object state. \n We recommended starting from a single   implementation if your problem has bounded size in terms of number of executed   and processed  . It is more straightforward than multiple asynchronously communicating  . \n Workflow Retries \n  code is unaffected by infrastructure level downtime and failures. But it still can fail due to business logic level failures. For example, an   can fail due to exceeding the retry interval and the error is not handled by application code, or the   code having a bug. \n Some   require a guarantee that they keep running even in presence of such failures. To support such use cases, an optional exponential  retry policy  can be specified when starting a  . When it is specified, a   failure restarts a   from the beginning after the calculated retry interval. Following are the retry policy parameters: \n \n InitialInterval  is a delay before the first retry. \n BackoffCoefficient . Retry policies are exponential. The coefficient specifies how fast the retry interval is growing. The coefficient of 1 means that the retry interval is always equal to the  InitialInterval . \n MaximumInterval  specifies the maximum interval between retries. Useful for coefficients of more than 1. \n MaximumAttempts  specifies how many times to attempt to execute a   in the presence of failures. If this limit is exceeded, the   fails without retry. Not required if  ExpirationInterval  is specified. \n ExpirationInterval  specifies for how long to attempt executing a   in the presence of failures. If this interval is exceeded, the   fails without retry. Not required if  MaximumAttempts  is specified. \n NonRetryableErrorReasons  allows to specify errors that shouldn't be retried. For example, retrying invalid arguments error doesn't make sense in some scenarios. \n \n"},{title:"Big data and ML",frontmatter:{layout:"default",title:"Big data and ML",permalink:"/docs/use-cases/big-ml",readingShow:"top"},regularPath:"/docs/01-use-cases/12-big-ml.html",relativePath:"docs/01-use-cases/12-big-ml.md",key:"v-c8b5ac5c",path:"/docs/use-cases/big-ml/",content:" Big data and ML \n A lot of companies build custom ETL and ML training and deployment solutions. Cadence is a good fit for a control plane for such applications. \n One important feature of Cadence is its ability to route   execution to a specific process or host. It is useful to control how ML models and other large files are allocated to hosts. For example, if an ML model is partitioned by city, the requests should be routed to hosts that contain the corresponding city model. \n"},{title:"DSL workflows",frontmatter:{layout:"default",title:"DSL workflows",permalink:"/docs/use-cases/dsl",readingShow:"top"},regularPath:"/docs/01-use-cases/11-dsl.html",relativePath:"docs/01-use-cases/11-dsl.md",key:"v-9fc3836c",path:"/docs/use-cases/dsl/",content:" DSL workflows \n Cadence supports implementing business logic directly in programming languages like Java and Go. But there are cases when\nusing a domain-specific language is more appropriate. Or there might be a legacy system that uses some form of DSL for process definition but it is not operationally stable and scalable. This also applies to more recent systems like Apache Airflow, various BPMN engines and AWS Step Functions. \n An application that interprets the DSL definition can be written using the Cadence SDK. It automatically becomes highly fault tolerant, scalable, and durable when running on Cadence. Cadence has been used to deprecate several Uber internal DSL engines. The customers continue to use existing process definitions, but Cadence is used as an execution engine. \n There are multiple benefits of unifying all company   engines on top of Cadence. The most obvious one is that\nit is more efficient to support a single product instead of many. It is also difficult to beat the scalability and stability of\nCadence which each of the integrations it comes with. Additionally, the ability to share   across &quot;engines&quot;\nmight be a huge benefit in some cases. \n"},{title:"Activities",frontmatter:{layout:"default",title:"Activities",permalink:"/docs/concepts/activities",readingShow:"top"},regularPath:"/docs/02-concepts/02-activities.html",relativePath:"docs/02-concepts/02-activities.md",key:"v-63ca6fb0",path:"/docs/concepts/activities/",headers:[{level:2,title:"Timeouts",slug:"timeouts"},{level:2,title:"Retries",slug:"retries"},{level:2,title:"Long Running Activities",slug:"long-running-activities"},{level:2,title:"Cancellation",slug:"cancellation"},{level:2,title:"Activity Task Routing through Task Lists",slug:"activity-task-routing-through-task-lists"},{level:2,title:"Asynchronous Activity Completion",slug:"asynchronous-activity-completion"},{level:2,title:"Local Activities",slug:"local-activities"}],content:" Activities \n Fault-oblivious stateful   code is the core abstraction of Cadence. But, due to deterministic execution requirements, they are not allowed to call any external API directly.\nInstead they orchestrate execution of  . In its simplest form, a Cadence   is a function or an object method in one of the supported languages.\nCadence does not recover   state in case of failures. Therefore an   function is allowed to contain any code without restrictions. \n  are invoked asynchronously through  . A   is essentially a queue used to store an   until it is picked up by an available  . The   processes an   by invoking its implementation function. When the function returns, the   reports the result back to the Cadence service which in turn notifies the   about completion. It is possible to implement an   fully asynchronously by completing it from a different process. \n Timeouts \n Cadence does not impose any system limit on   duration. It is up to the application to choose the timeouts for its execution. These are the configurable   timeouts: \n \n ScheduleToStart  is the maximum time from a   requesting   execution to a   starting its execution. The usual reason for this timeout to fire is all   being down or not being able to keep up with the request rate. We recommend setting this timeout to the maximum time a   is willing to wait for an   execution in the presence of all possible   outages. \n StartToClose  is the maximum time an   can execute after it was picked by a  . \n ScheduleToClose  is the maximum time from the   requesting an   execution to its completion. \n Heartbeat  is the maximum time between heartbeat requests. See  Long Running Activities . \n \n Either  ScheduleToClose  or both  ScheduleToStart  and  StartToClose  timeouts are required. \n Retries \n As Cadence doesn't recover an  's state and they can communicate to any external system, failures are expected. Therefore, Cadence supports automatic   retries. Any   when invoked can have an associated retry policy. Here are the retry policy parameters: \n \n InitialInterval  is a delay before the first retry. \n BackoffCoefficient . Retry policies are exponential. The coefficient specifies how fast the retry interval is growing. The coefficient of 1 means that the retry interval is always equal to the  InitialInterval . \n MaximumInterval  specifies the maximum interval between retries. Useful for coefficients more than 1. \n MaximumAttempts  specifies how many times to attempt to execute an   in the presence of failures. If this limit is exceeded, the error is returned back to the   that invoked the  . Not required if  ExpirationInterval  is specified. \n ExpirationInterval  specifies for how long to attempt executing an   in the presence of failures. If this interval is exceeded, the error is returned back to the   that invoked the  . Not required if  MaximumAttempts  is specified. \n NonRetryableErrorReasons  allows you to specify errors that shouldn't be retried. For example retrying invalid arguments error doesn't make sense in some scenarios. \n \n There are scenarios when not a single   but rather the whole part of a   should be retried on failure. For example, a media encoding   that downloads a file to a host, processes it, and then uploads the result back to storage. In this  , if the host that hosts the   dies, all three   should be retried on a different host. Such retries should be handled by the   code as they are very use case specific. \n Long Running Activities \n For long running  , we recommended that you specify a relatively short heartbeat timeout and constantly heartbeat. This way   failures for even very long running   can be handled in a timely manner. An   that specifies the heartbeat timeout is expected to call the heartbeat method  periodically  from its implementation. \n A heartbeat request can include application specific payload. This is useful to save   execution progress. If an   times out due to a missed heartbeat, the next attempt to execute it can access that progress and continue its execution from that point. \n Long running   can be used as a special case of leader election. Cadence timeouts use second resolution. So it is not a solution for realtime applications. But if it is okay to react to the process failure within a few seconds, then a Cadence heartbeat   is a good fit. \n One common use case for such leader election is monitoring. An   executes an internal loop that periodically polls some API and checks for some condition. It also heartbeats on every iteration. If the condition is satisfied, the   completes which lets its   to handle it. If the   dies, the   times out after the heartbeat interval is exceeded and is retried on a different  . The same pattern works for polling for new files in Amazon S3 buckets or responses in REST or other synchronous APIs. \n Cancellation \n A   can request an   cancellation. Currently the only way for an   to learn that it was cancelled is through heart beating. The heartbeat request fails with a special error indicating that the   was cancelled. Then it is up to the   implementation to perform all the necessary cleanup and report that it is done with it. It is up to the   implementation to decide if it wants to wait for the   cancellation confirmation or just proceed without waiting. \n Another common case for   heartbeat failure is that the   that invoked it is in a completed state. In this case an   is expected to perform cleanup as well. \n Activity Task Routing through Task Lists \n  are dispatched to   through  .   are queues that   listen on.   are highly dynamic and lightweight. They don't need to be explicitly registered. And it is okay to have one   per   process. It is normal to have more than one   type to be invoked through a single  . And it is normal in some cases (like host routing) to invoke the same   type on multiple  . \n Here are some use cases for employing multiple   in a single workflow: \n \n Flow control . A   that consumes from a   asks for an   only when it has available capacity. So   are never overloaded by request spikes. If   executions are requested faster than   can process them, they are backlogged in the  . \n Throttling . Each   can specify the maximum rate it is allowed to processes   on a  . It does not exceed this limit even if it has spare capacity. There is also support for global   rate limiting. This limit works across all   for the given  . It is frequently used to limit load on a downstream service that an   calls into. \n Deploying a set of   independently . Think about a service that hosts   and can be deployed independently from other   and  . To send   to this service, a separate   is needed. \n  with different capabilities . For example,   on GPU boxes vs non GPU boxes. Having two separate   in this case allows   to pick which one to send   an execution request to. \n Routing   to a specific host . For example, in the media encoding case the transform and upload   have to run on the same host as the download one. \n Routing   to a specific process . For example, some   load large data sets and caches it in the process. The   that rely on this data set should be routed to the same process. \n Multiple priorities . One   per priority and having a   pool per priority. \n Versioning . A new backwards incompatible implementation of an   might use a different  . \n Asynchronous Activity Completion \n By default an   is a function or a method depending on a client side library language. As soon as the function returns, an   completes. But in some cases an   implementation is asynchronous. For example it is forwarded to an external system through a message queue. And the reply comes through a different queue. \n To support such use cases, Cadence allows   implementations that do not complete upon   function completions. A separate API should be used in this case to complete the  . This API can be called from any process, even in a different programming language, that the original   used. \n Local Activities \n Some of the   are very short lived and do not need the queing semantic, flow control, rate limiting and routing capabilities. For these Cadence supports so called   feature.   are executed in the same   process as the   that invoked them. Consider using   for functions that are: \n \n no longer than a few seconds \n do not require global rate limiting \n do not require routing to specific   or pools of  \n can be implemented in the same binary as the   that invokes them \n \n The main benefit of   is that they are much more efficient in utilizing Cadence service resources and have much lower latency overhead comparing to the usual   invocation. \n"},{title:"Synchronous query",frontmatter:{layout:"default",title:"Synchronous query",permalink:"/docs/concepts/queries",readingShow:"top"},regularPath:"/docs/02-concepts/04-queries.html",relativePath:"docs/02-concepts/04-queries.md",key:"v-69211952",path:"/docs/concepts/queries/",headers:[{level:2,title:"Stack Trace Query",slug:"stack-trace-query"}],content:" Synchronous query \n  code is stateful with the Cadence framework preserving it over various software and hardware failures. The state is constantly mutated during  . To expose this internal state to the external world Cadence provides a synchronous   feature. From the   implementer point of view the   is exposed as a synchronous callback that is invoked by external entities. Multiple such callbacks can be provided per   type exposing different information to different external systems. \n To execute a   an external client calls a synchronous Cadence API providing  , workflowID,   name  and optional   arguments . \n  callbacks must be read-only not mutating the   state in any way. The other limitation is that the   callback cannot contain any blocking code. Both above limitations rule out ability to invoke   from the   handlers. \n Cadence team is currently working on implementing  update  feature that would be similar to   in the way it is invoked, but would support   state mutation and   invocations. \n Stack Trace Query \n The Cadence client libraries expose some predefined   out of the box. Currently the only supported built-in   is  stack_trace . This   returns stacks of all   owned threads. This is a great way to troubleshoot any   in production. \n"},{title:"Task lists",frontmatter:{layout:"default",title:"Task lists",permalink:"/docs/concepts/task-lists",readingShow:"top"},regularPath:"/docs/02-concepts/06-task-lists.html",relativePath:"docs/02-concepts/06-task-lists.md",key:"v-90365720",path:"/docs/concepts/task-lists/",content:" Task lists \n When a   invokes an  , it sends the  ScheduleActivityTask    to the\nCadence service. As a result, the service updates the   state and dispatches\nan   to a   that implements the  .\nInstead of calling the   directly, an intermediate queue is used. So the service adds an   to this\nqueue and a   receives the   using a long poll request.\nCadence calls this queue used to dispatch   an  . \n Similarly, when a   needs to handle an external  , a   is created.\nA   is used to deliver it to the   (also called  decider ). \n While Cadence   are queues, they have some differences from commonly used queuing technologies.\nThe main one is that they do not require explicit registration and are created on demand. The number of  \nis not limited. A common use case is to have a   per   process and use it to deliver  \nto the process. Another use case is to have a   per pool of  . \n There are multiple advantages of using a   to deliver   instead of invoking an   through a synchronous RPC: \n \n  doesn't need to have any open ports, which is more secure. \n  doesn't need to advertise itself through DNS or any other network discovery mechanism. \n When all   are down, messages are persisted in a   waiting for the   to recover. \n A   polls for a message only when it has spare capacity, so it never gets overloaded. \n Automatic load balancing across a large number of  . \n  support server side throttling. This allows you to limit the   dispatch rate to the pool of   and still supports adding a   with a higher rate when spikes happen. \n  can be used to route a request to specific pools of   or even a specific process. \n \n"},{title:"Introduction",frontmatter:{layout:"default",title:"Introduction",permalink:"/docs/use-cases/",readingShow:"top"},regularPath:"/docs/01-use-cases/",relativePath:"docs/01-use-cases/index.md",key:"v-3fad838b",path:"/docs/use-cases/",content:" Use cases \n As Cadence developers, we face a difficult non-technical problem: How to position and describe the Cadence platform. \n We call it  workflow . But when most people hear the word &quot;workflow&quot; they think about  low-code  and UIs. While these might be useful for non technical users, they frequently bring more pain than value to software engineers. Most UIs and low-code  DSLs  are awesome for &quot;hello world&quot; demo applications, but any diagram with 100+ elements or a few thousand lines of JSON DSL is completely impractical. So positioning Cadence as a   is not ideal as it turns away developers that would enjoy its code-only approach. \n We call it  orchestrator . But this term is  pretty narrow  and turns away customers that want to implement business process automation solutions. \n We call it  durable function  platform. It is technically a correct term. But most developers outside of the Microsoft ecosystem have never heard of  Durable Functions . \n We believe that problem in naming comes from the fact that Cadence is indeed a  new way to write distributed applications . It is generic enough that it can be applied to practically any use case that goes beyond a single request reply. It can be used to build applications that are in traditional areas of   or orchestration platforms. But it is also huge  developer productivity  boost for multiple use cases that traditionally rely on databases and/or   queues. \n This section represents a far from complete list of use cases where Cadence is a good fit. All of them have been used by real production services inside and outside of Uber. \n Don't think of this list as exhaustive. It is common to employ multiple use types in a single application. For example, an operational management use case might need periodic execution, service orchestration, polling,   driven, as well as interactive parts. \n"},{title:"Deployment topology",frontmatter:{layout:"default",title:"Deployment topology",permalink:"/docs/concepts/topology",readingShow:"top"},regularPath:"/docs/02-concepts/05-topology.html",relativePath:"docs/02-concepts/05-topology.md",key:"v-a903532c",path:"/docs/concepts/topology/",headers:[{level:2,title:"Overview",slug:"overview"},{level:2,title:"Cadence Service",slug:"cadence-service"},{level:2,title:"Workflow Worker",slug:"workflow-worker"},{level:2,title:"Activity Worker",slug:"activity-worker"},{level:2,title:"External Clients",slug:"external-clients"}],content:" Deployment topology \n Overview \n Cadence is a highly scalable fault-oblivious stateful code platform. The fault-oblivious code is a next level of abstraction over commonly used techniques to achieve fault tolerance and durability. \n A common Cadence-based application consists of a Cadence service,   and  , and external clients.\nNote that both types of   as well as external clients are roles and can be collocated in a single application process if necessary. \n Cadence Service \n \n At the core of Cadence is a highly scalable multitentant service. The service exposes all its functionality through a strongly typed  Thrift API . \n Internally it depends on a persistent store. Currently, Apache Cassandra and MySQL stores are supported out of the box. For listing   using complex predicates, Elasticsearch cluster can be used. \n Cadence service is responsible for keeping   state and associated durable timers. It maintains internal queues (called  ) which are used to dispatch   to external  . \n Cadence service is multitentant. Therefore it is expected that multiple pools of   implementing different use cases connect to the same service instance. For example, at Uber a single service is used by more than a hundred applications. At the same time some external customers deploy an instance of Cadence service per application. For local development, a local Cadence service instance configured through docker-compose is used. \n Workflow Worker \n Cadence reuses terminology from  workflow automation   . So fault-oblivious stateful code is called  . \n The Cadence service does not execute   code directly. The   code is hosted by an external (from the service point of view)   process. These processes receive   that contain   that the   is expected to handle from the Cadence service, delivers them to the   code, and communicates     back to the service. \n As   code is external to the service, it can be implemented in any language that can talk service Thrift API. Currently Java and Go clients are production ready. While Python and C# clients are under development. Let us know if you are interested in contributing a client in your preferred language. \n The Cadence service API doesn't impose any specific   definition language. So a specific   can be implemented to execute practically any existing   specification. The model the Cadence team chose to support out of the box is based on the idea of durable function. Durable functions are as close as possible to application business logic with minimal plumbing required. \n Activity Worker \n  fault-oblivious code is immune to infrastructure failures. But it has to communicate with the imperfect external world where failures are common. All communication to the external world is done through  .   are pieces of code that can perform any application-specific action like calling a service, updating a database record, or downloading a file from Amazon S3. Cadence   are very feature-rich compared to queuing systems. Example features are   routing to specific processes, infinite retries, heartbeats, and unlimited execution time. \n  are hosted by   processes that receive   from the Cadence service, invoke correspondent   implementations and report back   completion statuses. \n External Clients \n  and   host   and   code. But to create a   instance (an execution in Cadence terminology) the  StartWorkflowExecution  Cadence service API call should be used. Usually,   are started by outside entities like UIs, microservices or CLIs. \n These entities can also: \n \n notify   about asynchronous external   in the form of  \n synchronously     state \n synchronously wait for a   completion \n cancel, terminate, restart, and reset  \n search for specific   using list API \n \n"},{title:"Event handling",frontmatter:{layout:"default",title:"Event handling",permalink:"/docs/concepts/events",readingShow:"top"},regularPath:"/docs/02-concepts/03-events.html",relativePath:"docs/02-concepts/03-events.md",key:"v-69788d92",path:"/docs/concepts/events/",headers:[{level:2,title:"Event Aggregation and Correlation",slug:"event-aggregation-and-correlation"},{level:2,title:"Human Tasks",slug:"human-tasks"},{level:2,title:"Process Execution Alteration",slug:"process-execution-alteration"},{level:2,title:"Synchronization",slug:"synchronization"}],content:" Event handling \n Fault-oblivious stateful   can be   about an external  . A   is always point to point destined to a specific   instance.   are always processed in the order in which they are received. \n There are multiple scenarios for which   are useful. \n Event Aggregation and Correlation \n Cadence is not a replacement for generic stream processing engines like Apache Flink or Apache Spark. But in certain scenarios it is a better fit. For example, when all   that should be aggregated and correlated are always applied to to some business entity with a clear ID. And then when a certain condition is met, actions should be executed. \n The main limitation is that a single Cadence   has a pretty limited throughput, while the number of   is practically unlimited. So if you need to aggregate   per customer, and your application has 100 million customers and each customer doesn't generate more than 20   per second, then Cadence would work fine. But if you want to aggregate all   for US customers then the rate of these   would be beyond the single   capacity. \n For example, an IoT device generates   and a certain sequence of   indicates that the device should be reprovisioned. A   instance per device would be created and each instance would manage the state machine of the device and execute reprovision   when necessary. \n Another use case is a customer loyalty program. Every time a customer makes a purchase, an   is generated into Apache Kafka for downstream systems to process. A loyalty service Kafka consumer receives the   and   a customer   about the purchase using the Cadence  signalWorkflowExecution  API. The   accumulates the count of the purchases. If a specified threshold is achieved, the   executes an   that notifies some external service that the customer has reached the next level of loyalty program. The   also executes   to periodically message the customer about their current status. \n Human Tasks \n A lot of business processes involve human participants. The standard Cadence pattern for implementing an external interaction is to execute an   that creates a human   in an external system. It can be an email with a form, or a record in some external database, or a mobile app notification. When a user changes the status of the  , a   is sent to the corresponding  . For example, when the form is submitted, or a mobile app notification is acknowledged. Some   have multiple possible actions like claim, return, complete, reject. So multiple   can be sent in relation to it. \n Process Execution Alteration \n Some business processes should change their behavior if some external   has happened. For example, while executing an order shipment  , any change in item quantity could be delivered in a form of a  . \n Another example is a service deployment  . While rolling out new software version to a Kubernetes cluster some problem was identified. A   can be used to ask the   to pause while the problem is investigated. Then either a continue or a rollback   can be used to execute the appropriate action. \n Synchronization \n Cadence   are strongly consistent so they can be used as a synchronization point for executing actions. For example, there is a requirement that all messages for a single user are processed sequentially but the underlying messaging infrastructure can deliver them in parallel. The Cadence solution would be to have a   per user and   it when an   is received. Then the   would buffer all   in an internal data structure and then call an   for every   received. See the following  Stack Overflow answer  for an example. \n"},{title:"Archival",frontmatter:{layout:"default",title:"Archival",permalink:"/docs/concepts/archival",readingShow:"top"},regularPath:"/docs/02-concepts/07-archival.html",relativePath:"docs/02-concepts/07-archival.md",key:"v-42255830",path:"/docs/concepts/archival/",headers:[{level:2,title:"Concepts",slug:"concepts"},{level:2,title:"Configuring Archival",slug:"configuring-archival"},{level:3,title:"Cluster Archival Config",slug:"cluster-archival-config"},{level:3,title:"Domain Archival Config",slug:"domain-archival-config"},{level:2,title:"Running Locally",slug:"running-locally"},{level:2,title:"FAQ",slug:"faq"},{level:3,title:"How does archival interact with global domains?",slug:"how-does-archival-interact-with-global-domains"},{level:3,title:"Can I specify multiple archival URIs?",slug:"can-i-specify-multiple-archival-uris"},{level:3,title:"How does archival work with PII?",slug:"how-does-archival-work-with-pii"},{level:2,title:"Planned Future Work",slug:"planned-future-work"}],content:" Archival \n  is a feature that automatically moves   histories from persistence to another location after the retention period. The purpose of archival is to be able to keep histories as long as needed while not overwhelming the persistence store. There are two reasons you may want to keep the histories after the retention period has past: \n \n Compliance:  For legal reasons histories may need to be stored for a long period of time. \n Debugging:  Old histories can still be accessed for debugging. \n \n  is still in beta and there are three limits to its feature set: \n \n Only Histories:  Only histories are archived, visibility records are simply deleted after the retention period. \n RunID Required:  In order to access an archived history, both workflowID and runID are required. \n Best Effort:  There are cases in which a history can be deleted from persistence without being archived first. These cases are rare but are possible with the current state of  . \n \n Work is being prioritized on   to eliminate these limitations. \n Concepts \n \n Archiver:  Archiver is the component responsible for archiving and retrieving   histories.  Its interface is quite generic and supports different kinds of   locations: local file system, S3, Kafka, etc. Check  this README  for how to add a new archiver implementation. \n URI:  An URI is used to specify the   location. Based on the scheme part of an URI, the corresponding archiver will be selected by the system to perform  . \n Configuring Archival \n  is controlled by both   level config and cluster level config. \n Cluster Archival Config \n A Cadence cluster can be in one of three   states: \n \n Disabled:  No   will occur and the archivers will be not initialized on startup. \n Paused:  This state is not yet implemented. Currently setting cluster to paused is the same as setting it to disabled. \n Enabled:    will occur. \n \n Enabling the cluster for   simply means histories are being archived. There is another config which controls whether histories can be accessed from  . Both these configs have defaults defined in static yaml, and have dynamic config overwrites. Note, however, dynamic config will take effect only when   is enabled in static yaml. \n Domain Archival Config \n A   includes two pieces of   related config: \n \n Status:  Either enabled or disabled. If a   is in the disabled state no   will occur for that  .\nA   can safely switch between statuses. \n URI:  The scheme and location where histories will be archived to. When a   enables   for the first time URI is set and can never be mutated. If URI is not specified when first enabling a   for  , a default URI from static config will be used. \n Running Locally \n In order to run locally do the following: \n \n ./cadence-server start \n ./cadence --do samples-domain domain register --gd false --history_archival_status enabled --retention 0 \n Run the  helloworld cadence-sample  by following the README \n Copy the workflowID and runID of the completed   from log output \n ./cadence --do samples-domain wf show --wid &lt;workflowID&gt; --rid &lt;runID&gt; \n \n In step 2, we registered a new   and enabled history   feature for that  . Since we didn't provide an   URI when registering the new  , the default URI specified in  config/development.yaml  is used. The default URI is  file:///tmp/cadence_archival/development , so you can find the archived   history under the  /tmp/cadence_archival/development  directory. \n FAQ \n How does archival interact with global domains? \n When   occurs it will first run on the active side and some time later it will run on the standby side as well.\nBefore uploading history a check is done to see if it has already been uploaded, if so it is not re-uploaded. \n Can I specify multiple archival URIs? \n No, each   can only have one URI for history   and one URI for visibility  . Different  , however, can have different URIs (with different schemes). \n How does archival work with PII? \n No cadence   should ever operate on clear text PII. Cadence can be thought\nof as a database and just as one would not store PII in a database PII should not be\nstored in Cadence. This is even more important when   is enabled because\nthese histories can be kept forever. \n Planned Future Work \n \n Support   of visibility. \n Support accessing histories without providing runID. \n Provide hard guarantee that no history is deleted from persistence before being archived if   is enabled. \n Implement paused state. In this state no   will occur but histories also will not be deleted from persistence.\nOnce enabled again from paused state, all skipped   will occur. \n \n"},{title:"Cross DC replication",frontmatter:{layout:"default",title:"Cross DC replication",permalink:"/docs/concepts/cross-dc-replication",readingShow:"top"},regularPath:"/docs/02-concepts/08-cross-dc-replication.html",relativePath:"docs/02-concepts/08-cross-dc-replication.md",key:"v-673bc4f8",path:"/docs/concepts/cross-dc-replication/",headers:[{level:2,title:"Global Domains Architecture",slug:"global-domains-architecture"},{level:2,title:"New config for Global Domains",slug:"new-config-for-global-domains"},{level:3,title:"IsGlobal",slug:"isglobal"},{level:3,title:"Clusters",slug:"clusters"},{level:3,title:"Active Cluster Name",slug:"active-cluster-name"},{level:3,title:"Failover Version",slug:"failover-version"},{level:2,title:"Conflict Resolution",slug:"conflict-resolution"},{level:2,title:"Visibility API",slug:"visibility-api"},{level:2,title:"CLI",slug:"cli"},{level:3,title:"Query Global Domain",slug:"query-global-domain"},{level:3,title:"Failover Global Domain",slug:"failover-global-domain"},{level:2,title:"FAQ",slug:"faq"},{level:3,title:"What happens to outstanding activities after failover?",slug:"what-happens-to-outstanding-activities-after-failover"},{level:3,title:"What happens when a start or signal API call is made to a standby cluster?",slug:"what-happens-when-a-start-or-signal-api-call-is-made-to-a-standby-cluster"},{level:3,title:"What is the recommended pattern to send external events to an active cluster?",slug:"what-is-the-recommended-pattern-to-send-external-events-to-an-active-cluster"}],content:" Cross-DC replication \n The Cadence Global   feature provides clients with the capability to continue their   from another\ncluster in the event of a datacenter failover. Although you can configure a Global   to be replicated to any number of\nclusters, it is only considered active in a single cluster. \n Global Domains Architecture \n Cadence has introduced a new top level entity, Global  , which provides support for replication of  \nexecution across clusters. Client applications need to run   polling on  /  on all clusters.\nCadence will only dispatch tasks on the current active cluster;   on the standby cluster will sit idle\nuntil the Global   is failed over. \n Because Cadence is a service that provides highly consistent semantics, we only allow external   like\n StartWorkflowExecution ,  SignalWorkflowExecution , etc. on an active cluster. Global   relies on light-weight\ntransactions (paxos) on the local cluster (Local_Quorum) to update the   state and create replication\n  which are applied asynchronously to replicate state across clusters. If an application makes these API calls on a\ncluster where Global   is in standby mode, Cadence will reject those calls with  DomainNotActiveError , which\ncontains the name of the current active cluster. It is the responsibility of the application to forward the external\n  to the cluster that is currently active. \n New config for Global Domains \n IsGlobal \n This config is used to distinguish   local to the cluster from the global  . It controls the creation of\nreplication   on updates allowing the state to be replicated across clusters. This is a read-only setting that can\nonly be set when the   is provisioned. \n Clusters \n A list of clusters where the   can fail over to, including the current active cluster.\nThis is also a read-only setting that can only be set when the   is provisioned. A re-replication feature on the\nroadmap will allow updating this config to add/remove clusters in the future. \n Active Cluster Name \n Name of the current active cluster for the Global  . This config is updated each time the Global   is failed over to\nanother cluster. \n Failover Version \n Unique failover version which also represents the current active cluster for Global  . Cadence allows failover to\nbe triggered from any cluster, so failover version is designed in a way to not allow conflicts if failover is mistakenly\ntriggered simultaneously on two clusters. \n Conflict Resolution \n Unlike local   which provide at-most-once semantics for   execution, Global   can only support at-least-once\nsemantics. Cadence XDC relies on asynchronous replication of   across clusters, so in the event of a failover\nit is possible that   gets dispatched again on the new active cluster due to a replication   lag. This also\nmeans that whenever   is updated after a failover by the new cluster, any previous replication  \nfor that execution cannot be applied. This results in loss of some progress made by the   in the\nprevious active cluster. During such conflict resolution, Cadence re-injects any external   like   to the\nnew history before discarding replication  . Even though some progress could rollback during failovers, Cadence\nprovides the guarantee that   won’t get stuck and will continue to make forward progress. \n Visibility API \n All Visibility APIs are allowed on both active and standby clusters. This enables\n Cadence Web  to work seamlessly for Global   as all visibility records for\n  can be queried from any cluster the   is replicated to. Applications making API calls directly\nto the Cadence Visibility API will continue to work even if a Global   is in standby mode. However, they might see\na lag due to replication delay when   the   state from a standby cluster. \n CLI \n The Cadence   can also be used to   the   config or perform failovers. Here are some useful commands. \n Query Global Domain \n The following command can be used to describe Global   metadata: \n $ cadence --do cadence-canary-xdc d desc\nName: cadence-canary-xdc\nDescription: cadence canary cross  dc  testing domain\nOwnerEmail: cadence-dev@cadenceworkflow.io\nDomainData:\nStatus: REGISTERED\nRetentionInDays:  7 \nEmitMetrics:  true \nActiveClusterName: dc1\nClusters: dc1, dc2\n Failover Global Domain \n The following command can be used to failover Global    my-domain-global  to the  dc2  cluster: \n $ cadence --do my-domain-global d up --ac dc2\n FAQ \n What happens to outstanding activities after failover? \n Cadence does not forward   completions across clusters. Any outstanding   will eventually timeout based\non the configuration. Your application should have retry logic in place so that the   gets retried and dispatched\nagain to a   after the failover to the new DC. Handling this is pretty much the same as   timeout caused by\na   restart even without Global  . \n What happens when a start or signal API call is made to a standby cluster? \n Cadence will reject the call and return  DomainNotActiveError . It is the responsibility of the application to forward\nthe failed call to active cluster based on information provided in the error. \n What is the recommended pattern to send external events to an active cluster? \n The recommendation at this point is to publish   to a Kafka topic if they can be generated in any DC.\nThen, have a consumer that consumes from the aggregated Kafka topic in the same DC and sends them to Cadence. Both the\nKafka consumer and Global   need to be failed over together. \n"},{title:"Introduction",frontmatter:{layout:"default",title:"Introduction",permalink:"/docs/concepts",readingShow:"top"},regularPath:"/docs/02-concepts/",relativePath:"docs/02-concepts/index.md",key:"v-9507cea6",path:"/docs/concepts/",content:" Concepts \n Cadence is a new developer friendly way to develop distributed applications. \n It borrows the core terminology from the workflow-automation space. So its concepts include  workflows  and  activities .   can react to  events  and return internal state through  queries . \n The  deployment topology  explains how all these concepts are mapped to deployable software components. \n"},{title:"Search and filtering workflows",frontmatter:{layout:"default",title:"Search and filtering workflows",permalink:"/docs/concepts/search-workflows",readingShow:"top"},regularPath:"/docs/02-concepts/09-search-workflows.html",relativePath:"docs/02-concepts/09-search-workflows.md",key:"v-acc1c01c",path:"/docs/concepts/search-workflows/",headers:[{level:2,title:"Introduction",slug:"introduction"},{level:2,title:"Memo vs Search Attributes",slug:"memo-vs-search-attributes"},{level:2,title:"Search Attributes (Go Client Usage)",slug:"search-attributes-go-client-usage"},{level:3,title:"Allow Listing Search Attributes",slug:"allow-listing-search-attributes"},{level:3,title:"Value Types",slug:"value-types"},{level:3,title:"Limit",slug:"limit"},{level:3,title:"Upsert Search Attributes in Workflow",slug:"upsert-search-attributes-in-workflow"},{level:3,title:"ContinueAsNew and Cron",slug:"continueasnew-and-cron"},{level:2,title:"Query Capabilities",slug:"query-capabilities"},{level:3,title:"Supported Operators",slug:"supported-operators"},{level:3,title:"Default Attributes",slug:"default-attributes"},{level:3,title:"General Notes About Queries",slug:"general-notes-about-queries"},{level:2,title:"Tools Support",slug:"tools-support"},{level:3,title:"CLI",slug:"cli"},{level:3,title:"Web UI Support",slug:"web-ui-support"},{level:2,title:"Local Testing",slug:"local-testing"}],content:' Searching/Filtering Workflows \n Introduction \n Cadence supports creating   with customized key-value pairs, updating the information within the   code, and then listing/searching   with a SQL-like  . For example, you can create   with keys  city  and  age , then search all   with  city = seattle and age &gt; 22 . \n Also note that normal   properties like start time and   type can be queried as well. For example, the following   could be specified when  listing workflows from the CLI  or using the list APIs ( Go ,  Java ): \n WorkflowType  =   "main.Workflow"   and  CloseStatus  !=   0   and   ( StartTime  >   "2019-06-07T16:46:34-08:00"   or  CloseTime  >   "2019-06-07T16:46:34-08:00"   order   by  StartTime  desc ) \n Memo vs Search Attributes \n Cadence offers two methods for creating   with key-value pairs: memo and search attributes. Memo can only be provided on   start. Also, memo data are not indexed, and are therefore not searchable. Memo data are visible when listing   using the list APIs. Search attributes data are indexed so you can search   by   on these attributes. However, search attributes require the use of Elasticsearch. \n Memo and search attributes are available in the Go client in  StartWorkflowOptions . \n type  StartWorkflowOptions  struct   { \n     // ... \n\n     // Memo - Optional non-indexed info that will be shown in list workflow. \n    Memo  map [ string ] interface { } \n\n     // SearchAttributes - Optional indexed info that can be used in query of List/Scan/Count workflow APIs (only \n     // supported when Cadence server is using Elasticsearch). The key and value type must be registered on Cadence server side. \n     // Use GetSearchAttributes API to get valid key and corresponding value type. \n    SearchAttributes  map [ string ] interface { } \n } \n \n In the Java client, the  WorkflowOptions.Builder  has similar methods for  memo  and  search attributes . \n Some important distinctions between memo and search attributes: \n \n Memo can support all data types because it is not indexed. Search attributes only support basic data types (including String, Int, Float, Bool, Datetime) because it is indexed by Elasticsearch. \n Memo does not restrict on key names. Search attributes require that keys are allowlisted before using them because Elasticsearch has a limit on indexed keys. \n Memo doesn\'t require Cadence clusters to depend on Elasticsearch while search attributes only works with Elasticsearch. \n Search Attributes (Go Client Usage) \n When using the Cadence Go client, provide key-value pairs as SearchAttributes in  StartWorkflowOptions . \n SearchAttributes is  map[string]interface{}  where the keys need to be allowlisted so that Cadence knows the attribute key name and value type. The value provided in the map must be the same type as registered. \n Allow Listing Search Attributes \n Start by   the list of search attributes using the  \n $ cadence --domain samples-domain cl get-search-attr\n+---------------------+------------+\n |          KEY          |  VALUE TYPE  | \n+---------------------+------------+\n |  CloseStatus          |  INT         | \n |  CloseTime            |  INT         | \n |  CustomBoolField      |  DOUBLE      | \n |  CustomDatetimeField  |  DATETIME    | \n |  CustomDomain         |  KEYWORD     | \n |  CustomDoubleField    |  BOOL        | \n |  CustomIntField       |  INT         | \n |  CustomKeywordField   |  KEYWORD     | \n |  CustomStringField    |  STRING      | \n |  DomainID             |  KEYWORD     | \n |  ExecutionTime        |  INT         | \n |  HistoryLength        |  INT         | \n |  RunID                |  KEYWORD     | \n |  StartTime            |  INT         | \n |  WorkflowID           |  KEYWORD     | \n |  WorkflowType         |  KEYWORD     | \n+---------------------+------------+\n \n Use the admin   to add a new search attribute: \n cadence --domain samples-domain adm cl asa --search_attr_key NewKey --search_attr_type  1 \n \n The numbers for the attribute types map as follows: \n \n 0 = String \n 1 = Keyword \n 2 = Int \n 3 = Double \n 4 = Bool \n 5 = DateTime \n Keyword vs String \n Note that  Keyword  and  String  are concepts taken from Elasticsearch. Each word in a  String  is considered a searchable keyword. For a UUID, that can be problematic as Elasticsearch will index each portion of the UUID separately. To have the whole string considered as a searchable keyword, use the  Keyword  type. \n For example, key RunID with value &quot;2dd29ab7-2dd8-4668-83e0-89cae261cfb1&quot; \n \n as a  Keyword  will only be matched by RunID = &quot;2dd29ab7-2dd8-4668-83e0-89cae261cfb1&quot; (or in the future with  regular expressions ) \n as a  String  will be matched by RunID =  &quot;2dd8&quot;, which may cause unwanted matches \n \n Note:  String type can not be used in Order By  . \n There are some pre-allowlisted search attributes that are handy for testing: \n \n CustomKeywordField \n CustomIntField \n CustomDoubleField \n CustomBoolField \n CustomDatetimeField \n CustomStringField \n \n Their types are indicated in their names. \n Value Types \n Here are the Search Attribute value types and their correspondent Golang types: \n \n Keyword = string \n Int = int64 \n Double = float64 \n Bool = bool \n Datetime = time.Time \n String = string \n Limit \n We recommend limiting the number of Elasticsearch indexes by enforcing limits on the following: \n \n Number of keys: 100 per  \n Size of value: 2kb per value \n Total size of key and values: 40kb per  \n \n Cadence reserves keys like DomainID, WorkflowID, and RunID. These can only be used in list  . The values are not updatable. \n Upsert Search Attributes in Workflow \n UpsertSearchAttributes  is used to add or update search attributes from within the   code. \n Go samples for search attributes can be found at  github.com/uber-common/cadence-samples . \n UpsertSearchAttributes will merge attributes to the existing map in the  . Consider this example   code: \n func   MyWorkflow ( ctx workflow . Context ,  input  string )   error   { \n\n    attr1  :=   map [ string ] interface { } { \n         "CustomIntField" :   1 , \n         "CustomBoolField" :   true , \n     } \n    workflow . UpsertSearchAttributes ( ctx ,  attr1 ) \n\n    attr2  :=   map [ string ] interface { } { \n         "CustomIntField" :   2 , \n         "CustomKeywordField" :   "seattle" , \n     } \n    workflow . UpsertSearchAttributes ( ctx ,  attr2 ) \n } \n \n After the second call to UpsertSearchAttributes, the map will contain: \n map [ string ] interface { } { \n     "CustomIntField" :   2 , \n     "CustomBoolField" :   true , \n     "CustomKeywordField" :   "seattle" , \n } \n \n There is no support for removing a field. To achieve a similar effect, set the field to a sentinel value. For example, to remove “CustomKeywordField”, update it to “impossibleVal”. Then searching  CustomKeywordField != ‘impossibleVal’   will match   with CustomKeywordField not equal to &quot;impossibleVal&quot;, which  includes    without the CustomKeywordField set. \n Use  workflow.GetInfo  to get current search attributes. \n ContinueAsNew and Cron \n When performing a  ContinueAsNew  or using  Cron , search attributes (and memo) will be carried over to the new run by default. \n Query Capabilities \n    by using a SQL-like where clause when  listing workflows from the CLI  or using the list APIs ( Go ,  Java ). \n Note that you will only see   from one domain when  . \n Supported Operators \n \n AND, OR, () \n =, !=, &gt;, &gt;=, &lt;, &lt;= \n IN \n BETWEEN ... AND \n ORDER BY \n Default Attributes \n These can be found by using the   get-search-attr command or the GetSearchAttributes API. The names and types are as follows: \n \n \n \n KEY \n VALUE TYPE \n \n \n \n \n CloseStatus \n INT \n \n \n CloseTime \n INT \n \n \n CustomBoolField \n DOUBLE \n \n \n CustomDatetimeField \n DATETIME \n \n \n CustomDomain \n KEYWORD \n \n \n CustomDoubleField \n BOOL \n \n \n CustomIntField \n INT \n \n \n CustomKeywordField \n KEYWORD \n \n \n CustomStringField \n STRING \n \n \n DomainID \n KEYWORD \n \n \n ExecutionTime \n INT \n \n \n HistoryLength \n INT \n \n \n RunID \n KEYWORD \n \n \n StartTime \n INT \n \n \n WorkflowID \n KEYWORD \n \n \n WorkflowType \n KEYWORD \n \n \n \n There are some special considerations for these attributes: \n \n CloseStatus, CloseTime, DomainID, ExecutionTime, HistoryLength, RunID, StartTime, WorkflowID, WorkflowType are reserved by Cadence and are read-only \n CloseStatus is a mapping of int to state:\n \n 0 = completed \n 1 = failed \n 2 = canceled \n 3 = terminated \n 4 = continuedasnew \n 5 = timedout \n \n \n StartTime, CloseTime and ExecutionTime are stored as INT, but support   using both EpochTime in nanoseconds, and string in RFC3339 format (ex.  &quot;2006-01-02T15:04:05+07:00&quot; ) \n CloseTime, CloseStatus, HistoryLength are only present in closed  \n ExecutionTime is for Retry/Cron user to   a   that will run in the future \n \n To list only open  , add  CloseTime = missing  to the end of the  . \n If you use retry or the cron feature to     that will start execution in a certain time range, you can add predicates on ExecutionTime. For example:  ExecutionTime &gt; 2019-01-01T10:00:00-07:00 . Note that if predicates on ExecutionTime are included, only cron or a   that needs to retry will be returned. \n General Notes About Queries \n \n Pagesize default is 1000, and cannot be larger than 10k \n Range   on Cadence timestamp (StartTime, CloseTime, ExecutionTime) cannot be larger than 9223372036854775807 (maxInt64 - 1001) \n  by time range will have 1ms resolution \n  column names are case sensitive \n ListWorkflow may take longer when retrieving a large number of   (10M+) \n To retrieve a large number of   without caring about order, use the ScanWorkflow API \n To efficiently count the number of  , use the CountWorkflow API \n Tools Support \n CLI \n Support for search attributes is available as of version 0.6.0 of the Cadence server. You can also use the   from the latest  CLI Docker image  (supported on 0.6.4 or later). \n Start Workflow with Search Attributes \n cadence --do samples-domain workflow start --tl helloWorldGroup --wt main.Workflow --et  60  --dt  10  -i  \'"vancexu"\'  -search_attr_key  \'CustomIntField | CustomKeywordField | CustomStringField |  CustomBoolField | CustomDatetimeField\'  -search_attr_value  \'5 | keyword1 | vancexu test | true | 2019-06-07T16:16:36-08:00\' \n Search Workflows with List API \n cadence --do samples-domain wf list -q  \'(CustomKeywordField = "keyword1" and CustomIntField >= 5) or CustomKeywordField = "keyword2"\'  -psa\n \n cadence --do samples-domain wf list -q  \'CustomKeywordField in ("keyword2", "keyword1") and CustomIntField >= 5 and CloseTime between "2018-06-07T16:16:36-08:00" and "2019-06-07T16:46:34-08:00" order by CustomDatetimeField desc\'  -psa\n \n To list only open  , add  CloseTime = missing  to the end of the  . \n Note that   can support more than one type of filter: \n cadence --do samples-domain wf list -q  \'WorkflowType = "main.Workflow" and (WorkflowID = "1645a588-4772-4dab-b276-5f9db108b3a8" or RunID = "be66519b-5f09-40cd-b2e8-20e4106244dc")\' \n \n cadence --do samples-domain wf list -q  \'WorkflowType = "main.Workflow" StartTime > "2019-06-07T16:46:34-08:00" and CloseTime = missing\' \n Web UI Support \n  are supported in  Cadence Web  as of release 3.4.0. Use the &quot;Basic/Advanced&quot; button to switch to &quot;Advanced&quot; mode and type the   in the search box. \n Local Testing \n \n Increase Docker memory to higher than 6GB. Navigate to Docker -&gt; Preferences -&gt; Advanced -&gt; Memory \n Get the Cadence Docker compose file. Run  curl -O https://raw.githubusercontent.com/uber/cadence/master/docker/docker-compose-es.yml \n Start Cadence Docker (which contains Apache Kafka, Apache Zookeeper, and Elasticsearch) using  docker-compose -f docker-compose-es.yml up \n From the Docker output log, make sure Elasticsearch and Cadence started correctly. If you encounter an insufficient disk space error, try  docker system prune -a --volumes \n Register a local domain and start using it.  cadence --do samples-domain d re \n Allowlist search attributes.  cadence --do domain adm cl asa --search_attr_key NewKey --search_attr_type 1 \n \n Note: starting a   with search attributes but without Elasticsearch will succeed as normal, but will not be searchable and will not be shown in list results. \n'},{title:"Java hello world",frontmatter:{layout:"default",title:"Java hello world",permalink:"/docs/tutorials/java-hello-world",readingShow:"top"},regularPath:"/docs/03-video-tutorials/01-java-hello-world.html",relativePath:"docs/03-video-tutorials/01-java-hello-world.md",key:"v-8600d25c",path:"/docs/tutorials/java-hello-world/",headers:[{level:2,title:"Workflow implementation",slug:"workflow-implementation"}],content:' Java Hello World \n Workflow implementation \n \n   \n \n Source code: \n public   interface   HelloWorkflow   { \n     @WorkflowMethod ( executionStartToCloseTimeoutSeconds  =   300 ) \n     String   getGreeting ( String  name ) ; \n } \n \n package   com . tutorial ; \n\n import   com . uber . cadence . workflow . Workflow ; \n\n import   java . time . Duration ; \n\n public   class   HelloWorkflowImpl   implements   HelloWorkflow   { \n     @Override \n     public   String   getGreeting ( String  name )   { \n         Workflow . sleep ( Duration . ofMinutes ( 1 ) ) ; \n         return   "Hello "   +  name  +   "!" ; \n     } \n } \n \n package   com . tutorial ; \n\n import   com . uber . cadence . worker . Worker ; \n\n public   class   Main   { \n\n     public   static   void   main ( String [ ]  args )   { \n         Worker . Factory  f  =   new   Worker . Factory ( "samples-domain" ) ; \n         Worker  w  =  f . newWorker ( "hello" ) ; \n        w . registerWorkflowImplementationTypes ( HelloWorkflowImpl . class ) ; \n        f . start ( ) ; \n     } \n } \n \n Commands: \n cadence -do samples-domain workflow start --et  300  --tl hello --wt HelloWorkflow::getGreeting --input  \\ "World \\ "\n \n '},{title:"Getting started",frontmatter:{layout:"default",title:"Getting started",permalink:"/docs/tutorials/",readingShow:"top"},regularPath:"/docs/03-video-tutorials/",relativePath:"docs/03-video-tutorials/index.md",key:"v-c08582ea",path:"/docs/tutorials/",headers:[{level:2,title:"Installing Cadence Service and UI on a Mac",slug:"installing-cadence-service-and-ui-on-a-mac"}],content:' Getting started \n Installing Cadence Service and UI on a Mac \n \n   \n \n Commands executed during the tutorial: \n docker-compose up\n\ndocker run --rm ubercadence/cli:master --address host.docker.internal:7933 --domain samples-domain domain register\n\ndocker run --rm ubercadence/cli:master --address host.docker.internal:7933 --domain samples-domain domain describe\n\n alias   cadence = "docker run --rm ubercadence/cli:master --address host.docker.internal:7933" \n\ncadence --domain samples-domain domain desc\n\ncadence  help \n\ncadence workflow  help \n\ncadence --domain samples-domain workflow list\n\ncadence --domain samples-domain workflow  help  start\n\ncadence --domain samples-domain workflow start -wt  test  -tl  test  -et  300 \n\ncadence --domain samples-domain workflow list -op\n\ncadence --domain samples-domain workflow terminate -wid  &lt; workflowID > \n \n '},{title:"Quick start",frontmatter:{layout:"default",title:"Quick start",permalink:"/docs/java-client/quick-start",readingShow:"top"},regularPath:"/docs/04-java-client/01-quick-start.html",relativePath:"docs/04-java-client/01-quick-start.md",key:"v-6afb1f94",path:"/docs/java-client/quick-start/",headers:[{level:2,title:"Install Cadence Service Locally",slug:"install-cadence-service-locally"},{level:3,title:"Install docker",slug:"install-docker"},{level:3,title:"Run Cadence Server Using Docker Compose",slug:"run-cadence-server-using-docker-compose"},{level:3,title:"Register a Domain Using the CLI",slug:"register-a-domain-using-the-cli"},{level:2,title:"Implement Hello World Java Workflow",slug:"implement-hello-world-java-workflow"},{level:3,title:"Include Cadence Java Client Dependency",slug:"include-cadence-java-client-dependency"},{level:3,title:"Implement Hello World Workflow",slug:"implement-hello-world-workflow"},{level:3,title:"Execute Hello World Workflow using the CLI",slug:"execute-hello-world-workflow-using-the-cli"},{level:3,title:"List Workflows and Workflow History",slug:"list-workflows-and-workflow-history"},{level:3,title:"Workflow ID Uniqueness",slug:"workflow-id-uniqueness"},{level:3,title:"CLI Help",slug:"cli-help"},{level:2,title:"Signals",slug:"signals"},{level:2,title:"Query",slug:"query"},{level:2,title:"Activities",slug:"activities"}],content:' Quick start \n This topic helps you install the Cadence service and implement a  . \n Install Cadence Service Locally \n Install docker \n Follow the Docker installation instructions found here:  https://docs.docker.com/engine/installation/ \n Run Cadence Server Using Docker Compose \n Download the Cadence docker-compose file: \n >   curl  -O https://raw.githubusercontent.com/uber/cadence/master/docker/docker-compose.yml\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n 100     675    100     675      0       0      958        0  --:--:-- --:--:-- --:--:--    958 \n >   ls \ndocker-compose.yml\n \n Start Cadence Service: \n >  docker-compose up\nCreating network  "quick_start_default"  with the default driver\nPulling cadence  ( ubercadence/server:0.5.8 ) .. .\n 0.5 .8: Pulling from ubercadence/server\ndb0035920883: Pull complete\n82eed7f2d38e: Pull complete\nf81e11a89e41: Pull complete\nae3538b1ae1c: Pull complete\n23ddfb58e314: Pull complete\n52a6bbeb81b5: Pull complete\na72c7949d8ac: Pull complete\n1c3b1d477195: Pull complete\n3312d4123248: Pull complete\n5bbc95a38c5f: Pull complete\n29176d1ce1ca: Pull complete\n27ec3755f89c: Pull complete\n0a5d2a29a5e5: Pull complete\nCreating quick_start_statsd_1     .. .  done \nCreating quick_start_cassandra_1  .. .  done \nCreating quick_start_cadence_1    .. .  done \nCreating quick_start_cadence-web_1  .. .  done \nAttaching to quick_start_cassandra_1, quick_start_statsd_1, quick_start_cadence_1, quick_start_cadence-web_1\nstatsd_1        |  *** Running /etc/my_init.d/00_regen_ssh_host_keys.sh .. .\nstatsd_1        |  *** Running /etc/my_init.d/01_conf_init.sh .. .\ncadence_1       |  +  CADENCE_HOME = /cadence\ncadence_1       |  +  DB = cassandra\n .. .\n .. .\n .. .\ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:26:38.199Z" , "msg" : "Get dynamic config" , "name" : "matching.longPollExpirationInterval" , "value" : "1m0s" , "default-value" : "1m0s" , "logging-call-at" : "config.go:57" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:26:38.199Z" , "msg" : "Get dynamic config" , "name" : "matching.updateAckInterval" , "value" : "1m0s" , "default-value" : "1m0s" , "logging-call-at" : "config.go:57" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:26:38.199Z" , "msg" : "Get dynamic config" , "name" : "matching.idleTasklistCheckInterval" , "value" : "5m0s" , "default-value" : "5m0s" , "logging-call-at" : "config.go:57" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:26:38.765Z" , "msg" : "message is empty" , "service" : "cadence-matching" , "component" : "matching-engine" , "lifecycle" : "Starting" , "wf-task-list-name" : "cadence-archival-tl" , "wf-task-list-type" :0, "logging-call-at" : "matchingEngine.go:185" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:26:38.775Z" , "msg" : "message is empty" , "service" : "cadence-matching" , "component" : "matching-engine" , "lifecycle" : "Started" , "wf-task-list-name" : "cadence-archival-tl" , "wf-task-list-type" :0, "logging-call-at" : "matchingEngine.go:199" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:26:38.891Z" , "msg" : "message is empty" , "service" : "cadence-matching" , "component" : "matching-engine" , "lifecycle" : "Starting" , "wf-task-list-name" : "51f3b9fdfa7d:7feebe1f-95b2-44b8-8633-5ba7f4113508" , "wf-task-list-type" :0, "logging-call-at" : "matchingEngine.go:185" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:26:38.900Z" , "msg" : "message is empty" , "service" : "cadence-matching" , "component" : "matching-engine" , "lifecycle" : "Started" , "wf-task-list-name" : "51f3b9fdfa7d:7feebe1f-95b2-44b8-8633-5ba7f4113508" , "wf-task-list-type" :0, "logging-call-at" : "matchingEngine.go:199" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:26:52.282Z" , "msg" : "Get dynamic config" , "name" : "history.shardUpdateMinInterval" , "value" : "5m0s" , "default-value" : "5m0s" , "logging-call-at" : "config.go:57" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:26:52.282Z" , "msg" : "Get dynamic config" , "name" : "history.emitShardDiffLog" , "value" : "false" , "default-value" : "false" , "logging-call-at" : "config.go:57" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:27:24.903Z" , "msg" : "Get dynamic config" , "name" : "history.transferProcessorCompleteTransferFailureRetryCount" , "value" : "10" , "default-value" : "10" , "logging-call-at" : "config.go:57" } \ncadence_1       |   { "level" : "info" , "ts" : "2019-06-06T15:27:24.905Z" , "msg" : "Get dynamic config" , "name" : "history.timerProcessorCompleteTimerFailureRetryCount" , "value" : "10" , "default-value" : "10" , "logging-call-at" : "config.go:57" } \n Register a Domain Using the CLI \n From a different console window: \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain domain register -rd  1 \nUnable to  find  image  \'ubercadence/cli:master\'  locally\nmaster: Pulling from ubercadence/cli\n22dc81ace0ea: Pull complete\n1a8b3c87dba3: Pull complete\n91390a1c435a: Pull complete\n07844b14977e: Pull complete\nb78396653dae: Pull complete\n5259e0c8568e: Pull complete\nbe8b5313e7cd: Pull complete\nda2cfe74be81: Pull complete\n5320bde81c0c: Pull complete\nDigest: sha256:f5e5e708347909c8d3f74c47878b201d91606994394e94eaede9a80e3b9f077b\nStatus: Downloaded newer image  for  ubercadence/cli:master\nDomain test-domain successfully registered.\n > \n \n Check that the domain is indeed registered: \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain domain describe\nName: test-domain\nDescription:\nOwnerEmail:\nDomainData: map [ ] \nStatus: REGISTERED\nRetentionInDays:  1 \nEmitMetrics:  false \nActiveClusterName: active\nClusters: active\nArchivalStatus: DISABLED\nBad binaries to reset:\n+-----------------+----------+------------+--------+\n |  BINARY CHECKSUM  |  OPERATOR  |  START TIME  |  REASON  | \n+-----------------+----------+------------+--------+\n+-----------------+----------+------------+--------+\n > \n Implement Hello World Java Workflow \n Include Cadence Java Client Dependency \n Go to the  Maven Repository Uber Cadence Java Client Page \nand find the latest version of the library. Include it as a dependency into your Java project. For example if you\nare using Gradle the dependency looks like: \n compile group:  \'com.uber.cadence\' , name:  \'cadence-client\' , version:  \'&lt;latest_version>\' \n \n Also add the following dependencies that cadence-client relies on: \n compile group:  \'commons-configuration\' , name:  \'commons-configuration\' , version:  \'1.9\' \ncompile group:  \'ch.qos.logback\' , name:  \'logback-classic\' , version:  \'1.2.3\' \n \n Make sure that the following code compiles: \n import   com . uber . cadence . workflow . Workflow ; \n import   com . uber . cadence . workflow . WorkflowMethod ; \n import   org . slf4j . Logger ; \n\n public   class   GettingStarted   { \n\n     private   static   Logger  logger  =   Workflow . getLogger ( GettingStarted . class ) ; \n\n     interface   HelloWorld   { \n         @WorkflowMethod \n         void   sayHello ( String  name ) ; \n     } \n\n } \n \n If you are having problems setting up the build files use the\n Cadence Java Samples  GitHub repository as a reference. \n Also add the following logback config file somewhere in your classpath: \n &lt; configuration > \n     &lt; appender   name = " STDOUT "   class = " ch.qos.logback.core.ConsoleAppender " > \n         &lt;!-- encoders are assigned the type\n             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default --\x3e \n         &lt; encoder > \n             &lt; pattern > %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n &lt;/ pattern > \n         &lt;/ encoder > \n     &lt;/ appender > \n     &lt; logger   name = " io.netty "   level = " INFO " /> \n     &lt; root   level = " INFO " > \n         &lt; appender-ref   ref = " STDOUT "   /> \n     &lt;/ root > \n &lt;/ configuration > \n Implement Hello World Workflow \n Let\'s add  HelloWorldImpl  with the  sayHello  method that just logs the &quot;Hello ...&quot; and returns. \n import   com . uber . cadence . worker . Worker ; \n import   com . uber . cadence . workflow . Workflow ; \n import   com . uber . cadence . workflow . WorkflowMethod ; \n import   org . slf4j . Logger ; \n\n public   class   GettingStarted   { \n\n     private   static   Logger  logger  =   Workflow . getLogger ( GettingStarted . class ) ; \n\n     public   interface   HelloWorld   { \n         @WorkflowMethod \n         void   sayHello ( String  name ) ; \n     } \n\n     public   static   class   HelloWorldImpl   implements   HelloWorld   { \n\n         @Override \n         public   void   sayHello ( String  name )   { \n            logger . info ( "Hello "   +  name  +   "!" ) ; \n         } \n     } \n } \n \n To link the   implementation to the Cadence framework, it should be registered with a   that connects to\na Cadence Service. By default the   connects to the locally running Cadence service. \n public   static   void   main ( String [ ]  args )   { \n     Worker . Factory  factory  =   new   Worker . Factory ( "test-domain" ) ; \n     Worker  worker  =  factory . newWorker ( "HelloWorldTaskList" ) ; \n    worker . registerWorkflowImplementationTypes ( HelloWorldImpl . class ) ; \n    factory . start ( ) ; \n } \n Execute Hello World Workflow using the CLI \n Now run the   program. Following is an example log: \n 13 :35:02.575  [ main ]  INFO  c.u.c.s.WorkflowServiceTChannel - Initialized TChannel  for   service  cadence-frontend, LibraryVersion:  2.2 .0, FeatureVersion:  1.0 .0\n 13 :35:02.671  [ main ]  INFO  c.u.cadence.internal.worker.Poller - start ( ) : Poller { options = PollerOptions { maximumPollRateIntervalMilliseconds = 1000 ,  maximumPollRatePerSecond = 0.0 ,  pollBackoffCoefficient = 2.0 ,  pollBackoffInitialInterval = PT0.2S,  pollBackoffMaximumInterval = PT20S,  pollThreadCount = 1 ,  pollThreadNamePrefix = \'Workflow Poller taskList="HelloWorldTaskList", domain="test-domain", type="workflow"\' } ,  identity = 45937 @maxim-C02XD0AAJGH6 } \n 13 :35:02.673  [ main ]  INFO  c.u.cadence.internal.worker.Poller - start ( ) : Poller { options = PollerOptions { maximumPollRateIntervalMilliseconds = 1000 ,  maximumPollRatePerSecond = 0.0 ,  pollBackoffCoefficient = 2.0 ,  pollBackoffInitialInterval = PT0.2S,  pollBackoffMaximumInterval = PT20S,  pollThreadCount = 1 ,  pollThreadNamePrefix = \'null\' } ,  identity = 81b8d0ac-ff89-47e8-b842-3dd26337feea } \n \n No Hello printed. This is expected because a   is just a   code host. The   has to be started to execute. Let\'s use Cadence   to start the workflow: \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain workflow start --tasklist HelloWorldTaskList --workflow_type HelloWorld::sayHello --execution_timeout  3600  --input  \\ "World \\ "\nStarted Workflow Id: bcacfabd-9f9a-46ac-9b25-83bcea5d7fd7, run Id: e7c40431-8e23-485b-9649-e8f161219efe\n \n The output of the program should change to: \n 13 :35:02.575  [ main ]  INFO  c.u.c.s.WorkflowServiceTChannel - Initialized TChannel  for   service  cadence-frontend, LibraryVersion:  2.2 .0, FeatureVersion:  1.0 .0\n 13 :35:02.671  [ main ]  INFO  c.u.cadence.internal.worker.Poller - start ( ) : Poller { options = PollerOptions { maximumPollRateIntervalMilliseconds = 1000 ,  maximumPollRatePerSecond = 0.0 ,  pollBackoffCoefficient = 2.0 ,  pollBackoffInitialInterval = PT0.2S,  pollBackoffMaximumInterval = PT20S,  pollThreadCount = 1 ,  pollThreadNamePrefix = \'Workflow Poller taskList="HelloWorldTaskList", domain="test-domain", type="workflow"\' } ,  identity = 45937 @maxim-C02XD0AAJGH6 } \n 13 :35:02.673  [ main ]  INFO  c.u.cadence.internal.worker.Poller - start ( ) : Poller { options = PollerOptions { maximumPollRateIntervalMilliseconds = 1000 ,  maximumPollRatePerSecond = 0.0 ,  pollBackoffCoefficient = 2.0 ,  pollBackoffInitialInterval = PT0.2S,  pollBackoffMaximumInterval = PT20S,  pollThreadCount = 1 ,  pollThreadNamePrefix = \'null\' } ,  identity = 81b8d0ac-ff89-47e8-b842-3dd26337feea } \n 13 :40:28.308  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted - Hello World ! \n \n Let\'s start another  \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain workflow start --tasklist HelloWorldTaskList --workflow_type HelloWorld::sayHello --execution_timeout  3600  --input  \\ "Cadence \\ "\nStarted Workflow Id: d2083532-9c68-49ab-90e1-d960175377a7, run Id: 331bfa04-834b-45a7-861e-bcb9f6ddae3e\n \n And the output changed to: \n 13 :35:02.575  [ main ]  INFO  c.u.c.s.WorkflowServiceTChannel - Initialized TChannel  for   service  cadence-frontend, LibraryVersion:  2.2 .0, FeatureVersion:  1.0 .0\n 13 :35:02.671  [ main ]  INFO  c.u.cadence.internal.worker.Poller - start ( ) : Poller { options = PollerOptions { maximumPollRateIntervalMilliseconds = 1000 ,  maximumPollRatePerSecond = 0.0 ,  pollBackoffCoefficient = 2.0 ,  pollBackoffInitialInterval = PT0.2S,  pollBackoffMaximumInterval = PT20S,  pollThreadCount = 1 ,  pollThreadNamePrefix = \'Workflow Poller taskList="HelloWorldTaskList", domain="test-domain", type="workflow"\' } ,  identity = 45937 @maxim-C02XD0AAJGH6 } \n 13 :35:02.673  [ main ]  INFO  c.u.cadence.internal.worker.Poller - start ( ) : Poller { options = PollerOptions { maximumPollRateIntervalMilliseconds = 1000 ,  maximumPollRatePerSecond = 0.0 ,  pollBackoffCoefficient = 2.0 ,  pollBackoffInitialInterval = PT0.2S,  pollBackoffMaximumInterval = PT20S,  pollThreadCount = 1 ,  pollThreadNamePrefix = \'null\' } ,  identity = 81b8d0ac-ff89-47e8-b842-3dd26337feea } \n 13 :40:28.308  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted - Hello World ! \n 13 :42:34.994  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted - Hello Cadence ! \n List Workflows and Workflow History \n Let\'s list our   in the  \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain workflow list\n             WORKFLOW TYPE             |              WORKFLOW ID               |                 RUN ID                 |  START TIME  |  EXECUTION TIME  |  END TIME\n  HelloWorld::sayHello                 |  d2083532-9c68-49ab-90e1-d960175377a7  |  331bfa04-834b-45a7-861e-bcb9f6ddae3e  |   20 :42:34    |   20 :42:34        |   20 :42:35\n  HelloWorld::sayHello                 |  bcacfabd-9f9a-46ac-9b25-83bcea5d7fd7  |  e7c40431-8e23-485b-9649-e8f161219efe  |   20 :40:28    |   20 :40:28        |   20 :40:29\n \n Now let\'s look at the   history: \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain workflow showid 1965109f-607f-4b14-a5f2-24399a7b8fa7\n   1   WorkflowExecutionStarted     { WorkflowType: { Name:HelloWorld::sayHello } ,\n                                  TaskList: { Name:HelloWorldTaskList } ,\n                                  Input: [ "World" ] ,\n                                  ExecutionStartToCloseTimeoutSeconds:3600,\n                                  TaskStartToCloseTimeoutSeconds:10,\n                                  ContinuedFailureDetails: [ ] ,\n                                  LastCompletionResult: [ ] ,\n                                  Identity:cadence-cli@linuxkit-025000000001,\n                                  Attempt:0,\n                                  FirstDecisionTaskBackoffSeconds:0 } \n   2   DecisionTaskScheduled        { TaskList: { Name:HelloWorldTaskList } ,\n                                  StartToCloseTimeoutSeconds:10,\n                                  Attempt:0 } \n   3   DecisionTaskStarted          { ScheduledEventId:2,\n                                  Identity:45937@maxim-C02XD0AAJGH6,\n                                  RequestId:481a14e5-67a4-436e-9a23-7f7fb7f87ef3 } \n   4   DecisionTaskCompleted        { ExecutionContext: [ ] ,\n                                  ScheduledEventId:2,\n                                  StartedEventId:3,\n                                  Identity:45937@maxim-C02XD0AAJGH6 } \n   5   WorkflowExecutionCompleted   { Result: [ ] ,\n                                  DecisionTaskCompletedEventId:4 } \n \n Even for such a trivial  , the history gives a lot of useful information. For complex   this is a really useful tool for production and development troubleshooting. History can be automatically archived to a long-term blob store (for example Amazon S3) upon   completion for compliance, analytical, and troubleshooting purposes. \n Workflow ID Uniqueness \n Before proceeding to a more complex   implementation, let\'s take a look at the   semantic.\nWhen starting a   without providing an ID, the client generates one in the form of a UUID. In most real-life scenarios this is not a desired behavior. The business ID should be used instead. Here, we\'ll specify the ID when starting a workflow: \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain workflow start  --workflow_id  "HelloCadence1"  --tasklist HelloWorldTaskList --workflow_type HelloWorld::sayHello --execution_timeout  3600  --input  \\ "Cadence \\ "\nStarted Workflow Id: HelloCadence1, run Id: 75170c60-6d72-48c6-b509-7c9d9f25a8a8\n \n Now the list operation is more meaningful as the   is our business ID: \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain workflow list\n             WORKFLOW TYPE             |              WORKFLOW ID               |                 RUN ID                 |  START TIME  |  EXECUTION TIME  |  END TIME\n  HelloWorld::sayHello                 |  HelloCadence1                         |  75170c60-6d72-48c6-b509-7c9d9f25a8a8  |   21 :04:46    |   21 :04:46        |   21 :04:46\n \n Let\'s try to start   with the same ID: \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain workflow start  --workflow_id  "HelloCadence1"  --tasklist HelloWorldTaskList --workflow_type HelloWorld::sayHello --execution_timeout  3600  --input  \\ "Cadence \\ "\nError: Failed to create workflow.\nError Details: WorkflowExecutionAlreadyStartedError { Message: Workflow execution already finished successfully. WorkflowId: HelloCadence1, RunId: 75170c60-6d72-48c6-b509-7c9d9f25a8a8. Workflow ID reuse policy: allow duplicate workflow ID  if  last run failed., StartRequestId: 350a03ed-a11f-4959-a424-8ff7166ed457, RunId: 75170c60-6d72-48c6-b509-7c9d9f25a8a8 } \n ( \'export CADENCE_CLI_SHOW_STACKS=1\'  to see stack traces ) \n \n Oops, Cadence doesn\'t let us create a   with the same ID. But there are use cases when it is desired. For example if there is a need to re-execute the   for a particular reason. This is achieved by specifying a special flag  Workflow ID Reuse Policy . The value of 1 means  AllowDuplicate : \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain workflow start  --workflowidreusepolicy  1  --workflow_id  "HelloCadence1"  --tasklist HelloWorldTaskList --workflow_type HelloWorld::sayHello --execution_timeout  3600  --input  \\ "Cadence \\ "\nStarted Workflow Id: HelloCadence1, run Id: 37a740e5-838c-4020-aed6-1111b0689c38\n \n After the second start the   list is: \n      WORKFLOW TYPE      |              WORKFLOW ID               |                 RUN ID                 |  START TIME  |  EXECUTION TIME  |  END TIME\n  HelloWorld::sayHello  |  HelloCadence1                         |  37a740e5-838c-4020-aed6-1111b0689c38  |   21 :11:47    |   21 :11:47        |   21 :11:47\n  HelloWorld::sayHello  |  HelloCadence1                         |  75170c60-6d72-48c6-b509-7c9d9f25a8a8  |   21 :04:46    |   21 :04:46        |   21 :04:46\n \n It might be clear why every   has two IDs:   and  . Because the   can be reused, the   uniquely identifies a particular run of a  .   is system generated and cannot be controlled by client code. \n Note that ID Reuse Policy applies only when previous the run of a   is completed.\nUnder no circumstances does Cadence allow more than one instance of an open   with the same ID. \n CLI Help \n You might be asking how to discover that 1 means  AllowDuplicate . It came from the help command: \n >  docker run --network = host --rm ubercadence/cli:master workflow  help  start\nNAME:\n   cadence workflow start - start a new workflow execution\n\nUSAGE:\n   cadence workflow start  [ command options ]   [ arguments .. . ] \n\nOPTIONS:\n   --tasklist value, --tl value                TaskList\n   --workflow_id value, --wid value, -w value  WorkflowID\n   --workflow_type value, --wt value           WorkflowTypeName\n   --execution_timeout value, --et value       Execution start to close  timeout   in  seconds  ( default:  0 ) \n   --decision_timeout value, --dt value        Decision task start to close  timeout   in  seconds  ( default:  10 ) \n   --cron value                                Optional  cron  schedule  for  the workflow. Cron spec is as following:\n                                               ┌───────────── minute  ( 0  -  59 ) \n                                               │ ┌───────────── hour  ( 0  -  23 ) \n                                               │ │ ┌───────────── day of the month  ( 1  -  31 ) \n                                               │ │ │ ┌───────────── month  ( 1  -  12 ) \n                                               │ │ │ │ ┌───────────── day of the week  ( 0  -  6 )   ( Sunday to Saturday ) \n                                               │ │ │ │ │\n                                               * * * * *\n   --workflowidreusepolicy value, --wrp value  Optional input to configure  if  the same workflow ID is allowed to be used  for  a new workflow execution. Available options:  0 : AllowDuplicateFailedOnly,  1 : AllowDuplicate,  2 : RejectDuplicate  ( default:  0 ) \n   --input value, -i value                     Optional input  for  the workflow,  in  JSON format. If there are multiple parameters, concatenate them and separate by a space.\n   --input_file value, --if value              Optional input  for  the workflow from a JSON file. If there are multiple JSON, concatenate them and separate by a space or newline. Input from the  file  will be overwritten by input from the  command  line.\n   --memo_key value                            Optional key of memo. If there are multiple keys, concatenate them and separate by space.\n   --memo value                                Optional info that can be shown  in  list workflow,  in  JSON format. If there are multiple JSON, concatenate them and separate by a space. The order must be the same as memo_key.\n   --memo_file value                           Optional info that can be listed  in  list workflow, from JSON  format  file. If there are multiple JSON, concatenate them and separate by a space or newline. The order must be same as memo_key.\n Signals \n So far our   is not very interesting. Let\'s change it to listen on an external   and update state accordingly. \n public   interface   HelloWorld   { \n     @WorkflowMethod \n     void   sayHello ( String  name ) ; \n\n     @SignalMethod \n     void   updateGreeting ( String  greeting ) ; \n } \n\n public   static   class   HelloWorldImpl   implements   HelloWorld   { \n\n     private   String  greeting  =   "Hello" ; \n\n     @Override \n     public   void   sayHello ( String  name )   { \n         int  count  =   0 ; \n         while   ( ! "Bye" . equals ( greeting ) )   { \n            logger . info ( ++ count  +   ": "   +  greeting  +   " "   +  name  +   "!" ) ; \n             String  oldGreeting  =  greeting ; \n             Workflow . await ( ( )   ->   ! Objects . equals ( greeting ,  oldGreeting ) ) ; \n         } \n        logger . info ( ++ count  +   ": "   +  greeting  +   " "   +  name  +   "!" ) ; \n     } \n\n     @Override \n     public   void   updateGreeting ( String  greeting )   { \n         this . greeting  =  greeting ; \n     } \n } \n \n The   interface now has a new method annotated with @SignalMethod. It is a callback method that is invoked\nevery time a new   of &quot;HelloWorld updateGreeting&quot; is delivered to a  . The   interface can have only\none @WorkflowMethod which is a  main  function of the   and as many   methods as needed. \n The updated   implementation demonstrates a few important Cadence concepts. The first is that   is stateful and can\nhave fields of any complex type. Another is that the  Workflow.await  function that blocks until the function it receives as a parameter evaluates to true. The condition is going to be evaluated only on   state changes, so it is not a busy wait in traditional sense. \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow start  --workflow_id  "HelloSignal"  --tasklist HelloWorldTaskList --workflow_type HelloWorld::sayHello --execution_timeout  3600  --input  \\ "World \\ "\nStarted Workflow Id: HelloSignal, run Id: 6fa204cb-f478-469a-9432-78060b83b6cd\n \n Program output: \n 16 :53:56.120  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  1 : Hello World ! \n \n Let\'s send a   using  \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow signal --workflow_id  "HelloSignal"  --name  "HelloWorld::updateGreeting"  --input  \\ "Hi \\ "\nSignal workflow succeeded.\n \n Program output: \n 16 :53:56.120  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  1 : Hello World ! \n 16 :54:57.901  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  2 : Hi World ! \n \n Try sending the same   with the same input again. Note that the output doesn\'t change. This happens because the await condition\ndoesn\'t unblock when it sees the same value. But a new greeting unblocks it: \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow signal --workflow_id  "HelloSignal"  --name  "HelloWorld::updateGreeting"  --input  \\ "Welcome \\ "\nSignal workflow succeeded.\n \n Program output: \n 16 :53:56.120  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  1 : Hello World ! \n 16 :54:57.901  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  2 : Hi World ! \n 16 :56:24.400  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  3 : Welcome World ! \n \n Now shut down the   and send the same   again: \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow signal --workflow_id  "HelloSignal"  --name  "HelloWorld::updateGreeting"  --input  \\ "Welcome \\ "\nSignal workflow succeeded.\n \n Note that sending   as well as starting   does not need a   running. The requests are queued inside the Cadence service. \n Now bring the   back. Note that it doesn\'t log anything besides the standard startup messages.\nThis occurs because it ignores the queued   that contains the same input as the current value of greeting.\nNote that the restart of the   didn\'t affect the  . It is still blocked on the same line of code as before the failure.\nThis is the most important feature of Cadence. The   code doesn\'t need to deal with   failures at all. Its state is fully recovered to its current state that includes all the local variables and threads. \n Let\'s look at the line where the   is blocked: \n >  docker run --network = host --rm ubercadence/cli:master --do test-domain workflow stack --workflow_id  "Hello2" \nQuery result:\n "workflow-root: (BLOCKED on await)\ncom.uber.cadence.internal.sync.SyncDecisionContext.await(SyncDecisionContext.java:546)\ncom.uber.cadence.internal.sync.WorkflowInternal.await(WorkflowInternal.java:243)\ncom.uber.cadence.workflow.Workflow.await(Workflow.java:611)\ncom.uber.cadence.samples.hello.GettingStarted $HelloWorldImpl .sayHello(GettingStarted.java:32)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)" \n \n Yes, indeed the   is blocked on await. This feature works for any open  , greatly simplifying troubleshooting in production.\nLet\'s complete the   by sending a   with a &quot;Bye&quot; greeting: \n 16 :58:22.962  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  4 : Bye World ! \n \n Note that the value of the count variable was not lost during the restart. \n Also note that while a single   instance is used for this\nwalkthrough, any real production deployment has multiple   instances running. So any   failure or restart does not delay any\n  because it is just migrated to any other available  . \n Query \n So far we have learned that the   code is fault tolerant and can update its state in reaction to external   in the form of  .\nCadence provides a   feature that supports synchronously returning any information from a   to an external caller. \n Update the   code to: \n public   interface   HelloWorld   { \n     @WorkflowMethod \n     void   sayHello ( String  name ) ; \n\n     @SignalMethod \n     void   updateGreeting ( String  greeting ) ; \n\n     @QueryMethod \n     int   getCount ( ) ; \n } \n\n public   static   class   HelloWorldImpl   implements   HelloWorld   { \n\n     private   String  greeting  =   "Hello" ; \n     private   int  count  =   0 ; \n\n     @Override \n     public   void   sayHello ( String  name )   { \n         while   ( ! "Bye" . equals ( greeting ) )   { \n            logger . info ( ++ count  +   ": "   +  greeting  +   " "   +  name  +   "!" ) ; \n             String  oldGreeting  =  greeting ; \n             Workflow . await ( ( )   ->   ! Objects . equals ( greeting ,  oldGreeting ) ) ; \n         } \n        logger . info ( ++ count  +   ": "   +  greeting  +   " "   +  name  +   "!" ) ; \n     } \n\n     @Override \n     public   void   updateGreeting ( String  greeting )   { \n         this . greeting  =  greeting ; \n     } \n\n     @Override \n     public   int   getCount ( )   { \n         return  count ; \n     } \n } \n \n The new  getCount  method annotated with  @QueryMethod  was added to the   interface definition. It is allowed\nto have multiple   methods per   interface. \n The main restriction on the implementation of the   method is that it is not allowed to modify   state in any form.\nIt also is not allowed to block its thread in any way. It usually just returns a value derived from the fields of the   object.\nLet\'s run the updated   and send a couple   to it: \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow start  --workflow_id  "HelloQuery"  --tasklist HelloWorldTaskList --workflow_type HelloWorld::sayHello --execution_timeout  3600  --input  \\ "World \\ "\nStarted Workflow Id: HelloQuery, run Id: 1925f668-45b5-4405-8cba-74f7c68c3135\ncadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow signal --workflow_id  "HelloQuery"  --name  "HelloWorld::updateGreeting"  --input  \\ "Hi \\ "\nSignal workflow succeeded.\ncadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow signal --workflow_id  "HelloQuery"  --name  "HelloWorld::updateGreeting"  --input  \\ "Welcome \\ "\nSignal workflow succeeded.\n \n The   output: \n 17 :35:50.485  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  1 : Hello World ! \n 17 :36:10.483  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  2 : Hi World ! \n 17 :36:16.204  [ workflow-root ]  INFO  c.u.c.samples.hello.GettingStarted -  3 : Welcome World ! \n \n Now let\'s   the   using the  \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow query --workflow_id  "HelloQuery"  --query_type  "HelloWorld::getCount" \n:query:Query: result as JSON:\n 3 \n \n One limitation of the   is that it requires a   process running because it is executing callback code.\nAn interesting feature of the   is that it works for completed   as well. Let\'s complete the   by sending &quot;Bye&quot; and   it. \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow signal --workflow_id  "HelloQuery"  --name  "HelloWorld::updateGreeting"  --input  \\ "Bye \\ "\nSignal workflow succeeded.\ncadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow query --workflow_id  "HelloQuery"  --query_type  "HelloWorld::getCount" \n:query:Query: result as JSON:\n 4 \n \n The   method can accept parameters. This might be useful if only part of the   state should be returned. \n Activities \n Having fault tolerant code that maintains state, updates it in reaction to external  , and supports   is already very useful.\nBut in most practical applications, the   is expected to act upon the external world. Cadence supports such externally-facing code in the form of  . \n An   is essentially a function that can execute any code like DB updates or service calls. The   is not allowed to\ndirectly call any external APIs; it can do this only through  . The   is essentially an orchestrator of  .\nLet\'s change our program to print the greeting from an   on every change. \n First let\'s define an   interface and implement it: \n public   interface   HelloWorldActivities   { \n     @ActivityMethod ( scheduleToCloseTimeoutSeconds  =   100 ) \n     void   say ( String  message ) ; \n } \n \n The  @ActivityMethod  annotation is not required, but  scheduleToCloseTimeoutSeconds  is required and annotation is a convenient way to specify it.\nIt is allowed to have multiple   on a single interface. \n Activity implementation is just a normal  POJO .\nThe  out  stream is passed as a parameter to the constructor to demonstrate that the\nactivity object can have any dependencies. Examples of real application dependencies are database connections and service clients. \n public   class   HelloWordActivitiesImpl   implements   HelloWorldActivities   { \n     private   final   PrintStream  out ; \n\n     public   HelloWordActivitiesImpl ( PrintStream  out )   { \n         this . out  =  out ; \n     } \n\n     @Override \n     public   void   say ( String  message )   { \n        out . println ( message ) ; \n     } \n } \n \n Let\'s create a separate main method for the  . It is common to have a single   that hosts both   and  ,\nbut here we keep them separate to demonstrate how Cadence deals with   failures.\nTo make the   implementation known to Cadence, register it with the  \n public   class   GettingStartedActivityWorker   { \n\n     public   static   void   main ( String [ ]  args )   { \n         Worker . Factory  factory  =   new   Worker . Factory ( "test-domain" ) ; \n         Worker  worker  =  factory . newWorker ( "HelloWorldTaskList" ) ; \n        worker . registerActivitiesImplementations ( new   HelloWordActivitiesImpl ( System . out ) ) ; \n        factory . start ( ) ; \n     } \n } \n \n A single instance of an   object is registered per   interface type. This means that the   implementation should be thread-safe since the   method can be simultaneously called from multiple threads. \n Let\'s modify the   code to invoke the   instead of logging: \n public   static   class   HelloWorldImpl   implements   HelloWorld   { \n\n     private   final   HelloWorldActivities  activities  =   Workflow . newActivityStub ( HelloWorldActivities . class ) ; \n     private   String  greeting  =   "Hello" ; \n     private   int  count  =   0 ; \n\n     @Override \n     public   void   sayHello ( String  name )   { \n         while   ( ! "Bye" . equals ( greeting ) )   { \n            activities . say ( ++ count  +   ": "   +  greeting  +   " "   +  name  +   "!" ) ; \n             String  oldGreeting  =  greeting ; \n             Workflow . await ( ( )   ->   ! Objects . equals ( greeting ,  oldGreeting ) ) ; \n         } \n        activities . say ( ++ count  +   ": "   +  greeting  +   " "   +  name  +   "!" ) ; \n     } \n\n     @Override \n     public   void   updateGreeting ( String  greeting )   { \n         this . greeting  =  greeting ; \n     } \n\n     @Override \n     public   int   getCount ( )   { \n         return  count ; \n     } \n } \n \n  are invoked through a stub that implements their interface. So an invocation is just a method call on an   stub. \n Now run the  . Do not run the   yet. Then start a new  \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow start  --workflow_id  "HelloActivityWorker"  --tasklist HelloWorldTaskList --workflow_type HelloWorld::sayHello --execution_timeout  3600  --input  \\ "World \\ "\nStarted Workflow Id: HelloActivityWorker, run Id: ff015637-b5af-43e8-b3f6-8b6c7b919b62\n \n The   is started, but nothing visible happens. This is expected as the   is not running. What are the options to understand the currently running   state? \n The first option is look at the stack trace: \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow stack  --workflow_id  "HelloActivityWorker" \n:query:Query: result as JSON:\n "workflow-root: (BLOCKED on Feature.get)com.uber.cadence.internal.sync.CompletablePromiseImpl.get(CompletablePromiseImpl.java:71)\ncom.uber.cadence.internal.sync.ActivityStubImpl.execute(ActivityStubImpl.java:58)\ncom.uber.cadence.internal.sync.ActivityInvocationHandler.lambda $invoke $0 (ActivityInvocationHandler.java:87)\ncom.uber.cadence.internal.sync.ActivityInvocationHandler $$ Lambda $25 /1816732716.apply(Unknown Source)\ncom.uber.cadence.internal.sync.ActivityInvocationHandler.invoke(ActivityInvocationHandler.java:94)\ncom.sun.proxy. $Proxy6 .say(Unknown Source)\ncom.uber.cadence.samples.hello.GettingStarted $HelloWorldImpl .sayHello(GettingStarted.java:55)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n" \n \n It shows that the   code is blocked on the &quot;say&quot; method of a Proxy object that implements the   stub.\nYou can restart the   if you want to make sure that restarting it does not change that. It works for  \nof any duration. It is okay for the   code to block on an   invocation for a month for example. \n Another way to see what exactly happened in the   is to look at the   history: \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow show  --workflow_id  "HelloActivityWorker" \n   1   WorkflowExecutionStarted   { WorkflowType: { Name:HelloWorld::sayHello } ,\n                                TaskList: { Name:HelloWorldTaskList } ,\n                                Input: [ "World" ] ,\n                                ExecutionStartToCloseTimeoutSeconds:3600,\n                                TaskStartToCloseTimeoutSeconds:10,\n                                ContinuedFailureDetails: [ ] ,\n                                LastCompletionResult: [ ] ,\n                                Identity:cadence-cli@linuxkit-025000000001,\n                                Attempt:0,\n                                FirstDecisionTaskBackoffSeconds:0 } \n   2   DecisionTaskScheduled      { TaskList: { Name:HelloWorldTaskList } ,\n                                StartToCloseTimeoutSeconds:10,\n                                Attempt:0 } \n   3   DecisionTaskStarted        { ScheduledEventId:2,\n                                Identity:36234@maxim-C02XD0AAJGH6,\n                                RequestId:ef645576-7cee-4d2e-9892-597a08b7b01f } \n   4   DecisionTaskCompleted      { ExecutionContext: [ ] ,\n                                ScheduledEventId:2,\n                                StartedEventId:3,\n                                Identity:36234@maxim-C02XD0AAJGH6 } \n   5   ActivityTaskScheduled      { ActivityId:0,\n                                ActivityType: { Name:HelloWorldActivities::say } ,\n                                TaskList: { Name:HelloWorldTaskList } ,\n                                Input: [ "1: Hello World!" ] ,\n                                ScheduleToCloseTimeoutSeconds:100,\n                                ScheduleToStartTimeoutSeconds:100,\n                                StartToCloseTimeoutSeconds:100,\n                                HeartbeatTimeoutSeconds:100,\n                                DecisionTaskCompletedEventId:4 } \n \n The last   in the   history is  ActivityTaskScheduled . It is recorded when   invoked the  , but it wasn\'t picked up by an   yet. \n Another useful API is  DescribeWorkflowExecution  which, among other information, contains the list of outstanding activities: \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow describe  --workflow_id  "HelloActivityWorker" \n { \n     "ExecutionConfiguration" :   { \n         "taskList" :   { \n             "name" :   "HelloWorldTaskList" \n         } ,\n         "executionStartToCloseTimeoutSeconds" :   3600 ,\n         "taskStartToCloseTimeoutSeconds" :   10 ,\n         "childPolicy" :   "TERMINATE" \n     } ,\n     "WorkflowExecutionInfo" :   { \n         "Execution" :   { \n             "workflowId" :   "HelloActivityWorker" ,\n             "runId" :   "ff015637-b5af-43e8-b3f6-8b6c7b919b62" \n         } ,\n         "Type" :   { \n             "name" :   "HelloWorld::sayHello" \n         } ,\n         "StartTime" :   "2019-06-08T23:56:41Z" ,\n         "CloseTime" :   "1970-01-01T00:00:00Z" ,\n         "CloseStatus" :  null,\n         "HistoryLength" :   5 ,\n         "ParentDomainID" :  null,\n         "ParentExecution" :  null,\n         "AutoResetPoints" :   { } \n     } ,\n     "PendingActivities" :   [ \n         { \n             "ActivityID" :   "0" ,\n             "ActivityType" :   { \n                 "name" :   "HelloWorldActivities::say" \n             } ,\n             "State" :   "SCHEDULED" ,\n             "ScheduledTimestamp" :   "2019-06-08T23:57:00Z" \n         } \n     ] \n } \n \n Let\'s start the  . It starts and immediately prints: \n 1 : Hello World ! \n \n Let\'s look at the   history: \n cadence: docker run --network = host --rm ubercadence/cli:master --do test-domain workflow show  --workflow_id  "HelloActivityWorker" \n    1   WorkflowExecutionStarted   { WorkflowType: { Name:HelloWorld::sayHello } ,\n                                TaskList: { Name:HelloWorldTaskList } ,\n                                Input: [ "World" ] ,\n                                ExecutionStartToCloseTimeoutSeconds:3600,\n                                TaskStartToCloseTimeoutSeconds:10,\n                                ContinuedFailureDetails: [ ] ,\n                                LastCompletionResult: [ ] ,\n                                Identity:cadence-cli@linuxkit-025000000001,\n                                Attempt:0,\n                                FirstDecisionTaskBackoffSeconds:0 } \n    2   DecisionTaskScheduled      { TaskList: { Name:HelloWorldTaskList } ,\n                                StartToCloseTimeoutSeconds:10,\n                                Attempt:0 } \n    3   DecisionTaskStarted        { ScheduledEventId:2,\n                                Identity:37694@maxim-C02XD0AAJGH6,\n                                RequestId:1d7cba6d-98c8-41fd-91b1-c27dffb21c7f } \n    4   DecisionTaskCompleted      { ExecutionContext: [ ] ,\n                                ScheduledEventId:2,\n                                StartedEventId:3,\n                                Identity:37694@maxim-C02XD0AAJGH6 } \n    5   ActivityTaskScheduled      { ActivityId:0,\n                                ActivityType: { Name:HelloWorldActivities::say } ,\n                                TaskList: { Name:HelloWorldTaskList } ,\n                                Input: [ "1: Hello World!" ] ,\n                                ScheduleToCloseTimeoutSeconds:300,\n                                ScheduleToStartTimeoutSeconds:300,\n                                StartToCloseTimeoutSeconds:300,\n                                HeartbeatTimeoutSeconds:300,\n                                DecisionTaskCompletedEventId:4 } \n    6   ActivityTaskStarted        { ScheduledEventId:5,\n                                Identity:37784@maxim-C02XD0AAJGH6,\n                                RequestId:a646d5d2-566f-4f43-92d7-6689139ce944,\n                                Attempt:0 } \n    7   ActivityTaskCompleted      { Result: [ ] , ScheduledEventId:5,\n                                StartedEventId:6,\n                                Identity:37784@maxim-C02XD0AAJGH6 } \n    8   DecisionTaskScheduled      { TaskList: { Name:maxim-C02XD0AAJGH6:fd3a85ed-752d-4662-a49d-2665b7667c8a } ,\n                                StartToCloseTimeoutSeconds:10, Attempt:0 } \n    9   DecisionTaskStarted        { ScheduledEventId:8,\n                                Identity:fd3a85ed-752d-4662-a49d-2665b7667c8a,\n                                RequestId:601ef30a-0d1b-4400-b034-65b8328ad34c } \n   10   DecisionTaskCompleted      { ExecutionContext: [ ] ,\n                                ScheduledEventId:8,\n                                StartedEventId:9,\n                                Identity:37694@maxim-C02XD0AAJGH6 } \n \n ActivityTaskStarted    is recorded when the   is picked up by an  . The Identity field\ncontains the ID of the   (you can set it to any value on   startup). \n ActivityTaskCompleted    is recorded when   completes. It contains the result of the   execution. \n Let\'s look at various failure scenarios. Modify     timeout: \n public   interface   HelloWorldActivities   { \n     @ActivityMethod ( scheduleToCloseTimeoutSeconds  =   100 ) \n     void   say ( String  message ) ; \n } \n\n public   class   HelloWordActivitiesImpl   implements   HelloWorldActivities   { \n     private   final   PrintStream  out ; \n\n     public   HelloWordActivitiesImpl ( PrintStream  out )   { \n         this . out  =  out ; \n     } \n\n     @Override \n     public   void   say ( String  message )   { \n        out . println ( message ) ; \n     } \n } \n \n (To be continued ...) \n'},{title:"Workflow interface",frontmatter:{layout:"default",title:"Workflow interface",permalink:"/docs/java-client/workflow-interface",readingShow:"top"},regularPath:"/docs/04-java-client/02-workflow-interface.html",relativePath:"docs/04-java-client/02-workflow-interface.md",key:"v-f44af5dc",path:"/docs/java-client/workflow-interface/",content:' Workflow interface \n  encapsulates the orchestration of   and child  .\nIt can also answer synchronous   and receive external   (also known as  ). \n A   must define an interface class. All of its methods must have one of the following annotations: \n \n @WorkflowMethod  indicates an entry point to a  . It contains parameters such as timeouts and a  .\nRequired parameters (such as  executionStartToCloseTimeoutSeconds ) that are not specified through the annotation must be provided at runtime. \n @SignalMethod  indicates a method that reacts to external  . It must have a  void  return type. \n @QueryMethod  indicates a method that reacts to synchronous   requests. \n \n You can have more than one method with the same annotation (except @WorkflowMethod). For example: \n public   interface   FileProcessingWorkflow   { \n\n     @WorkflowMethod ( executionStartToCloseTimeoutSeconds  =   10 ,  taskList  =   "file-processing" ) \n     String   processFile ( Arguments  args ) ; \n\n     @QueryMethod ( name = "history" ) \n     List &lt; String >   getHistory ( ) ; \n\n     @QueryMethod ( name = "status" ) \n     String   getStatus ( ) ; \n\n     @SignalMethod \n     void   retryNow ( ) ; \n\n     @SignalMethod \n     void   abandon ( ) ; \n } \n \n We recommended that you use a single value type argument for   methods. In this way, adding new arguments as fields to the value type is a backwards-compatible change. \n'},{title:"Starting workflows",frontmatter:{layout:"default",title:"Starting workflows",permalink:"/docs/java-client/starting-workflow-executions",readingShow:"top"},regularPath:"/docs/04-java-client/04-starting-workflow-executions.html",relativePath:"docs/04-java-client/04-starting-workflow-executions.md",key:"v-14c2a5f2",path:"/docs/java-client/starting-workflow-executions/",content:' Starting workflow executions \n A   interface that executes a   requires initializing a  WorkflowClient  instance, creating\na client side stub to the  , and then calling a method annotated with @WorkflowMethod. \n WorkflowClient  workflowClient  =   WorkflowClient . newClient ( cadenceServiceHost ,  cadenceServicePort ,  domain ) ; \n // Create a workflow stub. \n FileProcessingWorkflow  workflow  =  workflowClient . newWorkflowStub ( FileProcessingWorkflow . class ) ; \n \n There are two ways to start   asynchronously and synchronously. Asynchronous start initiates a   and immediately returns to the caller. This is the most common way to start   in production code. Synchronous invocation starts a  \nand then waits for its completion. If the process that started the   crashes or stops waiting, the   continues executing.\nBecause   are potentially long running, and crashes of clients happen, this is not very commonly found in production use. \n Asynchronous start: \n // Returns as soon as the workflow starts. \n WorkflowExecution  workflowExecution  =   WorkflowClient . start ( workflow :: processFile ,  workflowArgs ) ; \n\n System . out . println ( "Started process file workflow with workflowId=\\""   +  workflowExecution . getWorkflowId ( ) \n                     +   "\\" and runId=\\""   +  workflowExecution . getRunId ( )   +   "\\"" ) ; \n \n Synchronous start: \n // Start a workflow and then wait for a result. \n // Note that if the waiting process is killed, the workflow will continue execution. \n String  result  =  workflow . processFile ( workflowArgs ) ; \n \n If you need to wait for a   completion after an asynchronous start, the most straightforward way\nis to call the blocking version again. If  WorkflowOptions.WorkflowIdReusePolicy  is not  AllowDuplicate , then instead\nof throwing  DuplicateWorkflowException , it reconnects to an existing   and waits for its completion.\nThe following example shows how to do this from a different process than the one that started the  . All this process\nneeds is a  WorkflowID . \n WorkflowExecution  execution  =   new   WorkflowExecution ( ) . setWorkflowId ( workflowId ) ; \n FileProcessingWorkflow  workflow  =  workflowClient . newWorkflowStub ( execution ) ; \n // Returns result potentially waiting for workflow to complete. \n String  result  =  workflow . processFile ( workflowArgs ) ; \n \n '},{title:"Implementing workflows",frontmatter:{layout:"default",title:"Implementing workflows",permalink:"/docs/java-client/implementing-workflows",readingShow:"top"},regularPath:"/docs/04-java-client/03-implementing-workflows.html",relativePath:"docs/04-java-client/03-implementing-workflows.md",key:"v-1c78edd2",path:"/docs/java-client/implementing-workflows/",headers:[{level:2,title:"Calling Activities",slug:"calling-activities"},{level:2,title:"Calling Activities Asynchronously",slug:"calling-activities-asynchronously"},{level:2,title:"Child Workflows",slug:"child-workflows"},{level:2,title:"Workflow Implementation Constraints",slug:"workflow-implementation-constraints"}],content:' Implementing workflows \n A   implementation implements a   interface. Each time a new   is started,\na new instance of the   implementation object is created. Then, one of the methods\n(depending on which   type has been started) annotated with  @WorkflowMethod  is invoked. As soon as this method\nreturns, the   is closed. While   is open, it can receive calls to   and   methods.\nNo additional calls to   methods are allowed. The   object is stateful, so   and   methods\ncan communicate with the other parts of the   through   object fields. \n Calling Activities \n Workflow.newActivityStub  returns a client-side stub that implements an   interface.\nIt takes   type and   options as arguments.   options are needed only if some of the required\ntimeouts are not specified through the  @ActivityMethod  annotation. \n Calling a method on this interface invokes an   that implements this method.\nAn   invocation synchronously blocks until the   completes, fails, or times out. Even if  \nexecution takes a few months, the   code still sees it as a single synchronous invocation.\nIt doesn\'t matter what happens to the processes that host the  . The business logic code\njust sees a single method call. \n public   class   FileProcessingWorkflowImpl   implements   FileProcessingWorkflow   { \n\n     private   final   FileProcessingActivities  activities ; \n\n     public   FileProcessingWorkflowImpl ( )   { \n         this . activities  =   Workflow . newActivityStub ( FileProcessingActivities . class ) ; \n     } \n\n     @Override \n     public   void   processFile ( Arguments  args )   { \n         String  localName  =   null ; \n         String  processedName  =   null ; \n         try   { \n            localName  =  activities . download ( args . getSourceBucketName ( ) ,  args . getSourceFilename ( ) ) ; \n            processedName  =  activities . processFile ( localName ) ; \n            activities . upload ( args . getTargetBucketName ( ) ,  args . getTargetFilename ( ) ,  processedName ) ; \n         }   finally   { \n             if   ( localName  !=   null )   {   // File was downloaded. \n                activities . deleteLocalFile ( localName ) ; \n             } \n             if   ( processedName  !=   null )   {   // File was processed. \n                activities . deleteLocalFile ( processedName ) ; \n             } \n         } \n     } \n     . . . \n } \n \n If different   need different options, like timeouts or a  , multiple client-side stubs can be created\nwith different options. \n public   FileProcessingWorkflowImpl ( )   { \n     ActivityOptions  options1  =   new   ActivityOptions . Builder ( ) \n              . setTaskList ( "taskList1" ) \n              . build ( ) ; \n     this . store1  =   Workflow . newActivityStub ( FileProcessingActivities . class ,  options1 ) ; \n\n     ActivityOptions  options2  =   new   ActivityOptions . Builder ( ) \n              . setTaskList ( "taskList2" ) \n              . build ( ) ; \n     this . store2  =   Workflow . newActivityStub ( FileProcessingActivities . class ,  options2 ) ; \n } \n Calling Activities Asynchronously \n Sometimes   need to perform certain operations in parallel.\nThe  Async  class static methods allow you to invoke any   asynchronously. The calls return a  Promise  result immediately.\n Promise  is similar to both Java  Future  and  CompletionStage . The  Promise   get  blocks until a result is available.\nIt also exposes the  thenApply  and  handle  methods. See the  Promise  JavaDoc for technical details about differences with  Future . \n To convert a synchronous call: \n String  localName  =  activities . download ( sourceBucket ,  sourceFile ) ; \n \n To asynchronous style, the method reference is passed to  Async.function  or  Async.procedure \nfollowed by   arguments: \n Promise &lt; String >  localNamePromise  =   Async . function ( activities :: download ,  sourceBucket ,  sourceFile ) ; \n \n Then to wait synchronously for the result: \n String  localName  =  localNamePromise . get ( ) ; \n \n Here is the above example rewritten to call download and upload in parallel on multiple files: \n public   void   processFile ( Arguments  args )   { \n     List &lt; Promise &lt; String > >  localNamePromises  =   new   ArrayList &lt; > ( ) ; \n     List &lt; String >  processedNames  =   null ; \n     try   { \n         // Download all files in parallel. \n         for   ( String  sourceFilename  :  args . getSourceFilenames ( ) )   { \n             Promise &lt; String >  localName  =   Async . function ( activities :: download , \n                args . getSourceBucketName ( ) ,  sourceFilename ) ; \n            localNamePromises . add ( localName ) ; \n         } \n         // allOf converts a list of promises to a single promise that contains a list \n         // of each promise value. \n         Promise &lt; List &lt; String > >  localNamesPromise  =   Promise . allOf ( localNamePromises ) ; \n\n         // All code until the next line wasn\'t blocking. \n         // The promise get is a blocking call. \n         List &lt; String >  localNames  =  localNamesPromise . get ( ) ; \n        processedNames  =  activities . processFiles ( localNames ) ; \n\n         // Upload all results in parallel. \n         List &lt; Promise &lt; Void > >  uploadedList  =   new   ArrayList &lt; > ( ) ; \n         for   ( String  processedName  :  processedNames )   { \n             Promise &lt; Void >  uploaded  =   Async . procedure ( activities :: upload , \n                args . getTargetBucketName ( ) ,  args . getTargetFilename ( ) ,  processedName ) ; \n            uploadedList . add ( uploaded ) ; \n         } \n         // Wait for all uploads to complete. \n         Promise &lt; ? >  allUploaded  =   Promise . allOf ( uploadedList ) ; \n        allUploaded . get ( ) ;   // blocks until all promises are ready. \n     }   finally   { \n         for   ( Promise &lt; String >  localNamePromise  :  localNamePromises )   { \n             // Skip files that haven\'t completed downloading. \n             if   ( localNamePromise . isCompleted ( ) )   { \n                activities . deleteLocalFile ( localNamePromise . get ( ) ) ; \n             } \n         } \n         if   ( processedNames  !=   null )   { \n             for   ( String  processedName  :  processedNames )   { \n                activities . deleteLocalFile ( processedName ) ; \n             } \n         } \n     } \n } \n Child Workflows \n Besides  , a   can also orchestrate other  . \n Workflow.newChildWorkflowStub  returns a client-side stub that implements a child   interface.\nIt takes a child   type and optional child   options as arguments.   options may be needed to override\nthe timeouts and   if they differ from the ones defined in the  @WorkflowMethod  annotation or parent  . \n The first call to the child   stub must always be to a method annotated with  @WorkflowMethod . Similar to  , a call\ncan be made synchronous or asynchronous by using  Async#function  or  Async#procedure . The synchronous call blocks until a child   completes. The asynchronous call\nreturns a  Promise  that can be used to wait for the completion. After an async call returns the stub, it can be used to send   to the child\nby calling methods annotated with  @SignalMethod .   a child   by calling methods annotated with  @QueryMethod \nfrom within   code is not supported. However,   can be done from  \nusing the provided  WorkflowClient  stub. \n public   interface   GreetingChild   { \n    @WorkflowMethod \n    String   composeGreeting ( String  greeting ,   String  name ) ; \n } \n\n public   static   class   GreetingWorkflowImpl   implements   GreetingWorkflow   { \n\n    @Override \n    public   String   getGreeting ( String  name )   { \n        GreetingChild  child  =   Workflow . newChildWorkflowStub ( GreetingChild . class ) ; \n\n        // This is a blocking call that returns only after child has completed. \n        return  child . composeGreeting ( "Hello" ,  name  ) ; \n    } \n } \n \n Running two children in parallel: \n public   static   class   GreetingWorkflowImpl   implements   GreetingWorkflow   { \n\n     @Override \n     public   String   getGreeting ( String  name )   { \n\n         // Workflows are stateful, so a new stub must be created for each new child. \n         GreetingChild  child1  =   Workflow . newChildWorkflowStub ( GreetingChild . class ) ; \n         Promise &lt; String >  greeting1  =   Async . function ( child1 :: composeGreeting ,   "Hello" ,  name ) ; \n\n         // Both children will run concurrently. \n         GreetingChild  child2  =   Workflow . newChildWorkflowStub ( GreetingChild . class ) ; \n         Promise &lt; String >  greeting2  =   Async . function ( child2 :: composeGreeting ,   "Bye" ,  name ) ; \n\n         // Do something else here. \n         . . . \n         return   "First: "   +  greeting1 . get ( )   +   ", second: "   +  greeting2 . get ( ) ; \n     } \n } \n \n To send a   to a child, call a method annotated with  @SignalMethod : \n public   interface   GreetingChild   { \n     @WorkflowMethod \n     String   composeGreeting ( String  greeting ,   String  name ) ; \n\n     @SignalMethod \n     void   updateName ( String  name ) ; \n } \n\n public   static   class   GreetingWorkflowImpl   implements   GreetingWorkflow   { \n\n     @Override \n     public   String   getGreeting ( String  name )   { \n         GreetingChild  child  =   Workflow . newChildWorkflowStub ( GreetingChild . class ) ; \n         Promise &lt; String >  greeting  =   Async . function ( child :: composeGreeting ,   "Hello" ,  name ) ; \n        child . updateName ( "Cadence" ) ; \n         return  greeting . get ( ) ; \n     } \n } \n \n Calling methods annotated with  @QueryMethod  is not allowed from within   code. \n Workflow Implementation Constraints \n Cadence uses the  Microsoft Azure Event Sourcing pattern  to recover\nthe state of a   object including its threads and local variable values.\nIn essence, every time a   state has to be restored, its code is re-executed from the beginning. When replaying, side\neffects (such as   invocations) are ignored because they are already recorded in the    .\nWhen writing   logic, the replay is not visible, so the code should be written since it executes only once.\nThis design puts the following constraints on the   implementation: \n \n Do not use any mutable global variables because multiple instances of   are executed in parallel. \n Do not call any non-deterministic functions like non seeded random or UUID.randomUUID() directly from the   code. \n \n Always do the following in  : \n \n Don’t perform any IO or service calls as they are not usually deterministic. Use   for this. \n Only use  Workflow.currentTimeMillis()  to get the current time inside a  . \n Do not use native Java  Thread  or any other multi-threaded classes like  ThreadPoolExecutor . Use  Async.function  or  Async.procedure \nto execute code asynchronously. \n Don\'t use any synchronization, locks, and other standard Java blocking concurrency-related classes besides those provided\nby the Workflow class. There is no need in explicit synchronization because multi-threaded code inside a   is\nexecuted one thread at a time and under a global lock.\n \n Call  WorkflowThread.sleep  instead of  Thread.sleep . \n Use  Promise  and  CompletablePromise  instead of  Future  and  CompletableFuture . \n Use  WorkflowQueue  instead of  BlockingQueue . \n \n \n Use  Workflow.getVersion  when making any changes to the   code. Without this, any deployment of updated   code\nmight break already open  . \n Don’t access configuration APIs directly from a   because changes in the configuration might affect a   path.\nPass it as an argument to a   function or use an   to load it. \n \n  method arguments and return values are serializable to a byte array using the provided\n DataConverter \ninterface. The default implementation uses JSON serializer, but you can use any alternative serialization mechanism. \n The values passed to   through invocation parameters or returned through a result value are recorded in the execution history.\nThe entire execution history is transferred from the Cadence service to   with every   that the   logic needs to process.\nA large execution history can thus adversely impact the performance of your  .\nTherefore, be mindful of the amount of data that you transfer via   invocation parameters or return values.\nOtherwise, no additional limitations exist on   implementations. \n'},{title:"Implementing activities",frontmatter:{layout:"default",title:"Implementing activities",permalink:"/docs/java-client/implementing-activities",readingShow:"top"},regularPath:"/docs/04-java-client/06-implementing-activities.html",relativePath:"docs/04-java-client/06-implementing-activities.md",key:"v-38ecd0fa",path:"/docs/java-client/implementing-activities/",headers:[{level:2,title:"Accessing Activity Info",slug:"accessing-activity-info"},{level:2,title:"Asynchronous Activity Completion",slug:"asynchronous-activity-completion"},{level:2,title:"Activity Heart Beating",slug:"activity-heart-beating"}],content:' Implementing activities \n  implementation is an implementation of an   interface. A single instance of the   implementation\nis shared across multiple simultaneous   invocations. Therefore, the   implementation code must be  thread safe . \n The values passed to   through invocation parameters or returned through a result value are recorded in the execution history.\nThe entire execution history is transferred from the Cadence service to   when a   state needs to recover.\nA large execution history can thus adversely impact the performance of your  . Therefore, be mindful of the amount of data you transfer via   invocation parameters or return values. Otherwise, no additional limitations exist on   implementations. \n public   class   FileProcessingActivitiesImpl   implements   FileProcessingActivities   { \n\n     private   final   AmazonS3  s3Client ; \n\n     private   final   String  localDirectory ; \n\n     void   upload ( String  bucketName ,   String  localName ,   String  targetName )   { \n         File  f  =   new   File ( localName ) ; \n        s3Client . putObject ( bucket ,  remoteName ,  f ) ; \n     } \n\n     String   download ( String  bucketName ,   String  remoteName ,   String  localName )   { \n         // Implementation omitted for brevity. \n         return   downloadFileFromS3 ( bucketName ,  remoteName ,  localDirectory  +  localName ) ; \n     } \n\n     String   processFile ( String  localName )   { \n         // Implementation omitted for brevity. \n         return   compressFile ( localName ) ; \n     } \n\n     void   deleteLocalFile ( String  fileName )   { \n         File  f  =   new   File ( localDirectory  +  fileName ) ; \n        f . delete ( ) ; \n     } \n } \n Accessing Activity Info \n The  Activity \nclass provides static getters to access information about the   that invoked it. Note that this information is stored in a thread local variable. Therefore, calls to   accessors succeed only in the thread that invoked the   function. \n public   class   FileProcessingActivitiesImpl   implements   FileProcessingActivities   { \n\n     @Override \n     public   String   download ( String  bucketName ,   String  remoteName ,   String  localName )   { \n        log . info ( "domain="   +    Activity . getDomain ( ) ) ; \n         WorkflowExecution  execution  =   Activity . getWorkflowExecution ( ) ; \n        log . info ( "workflowId="   +  execution . getWorkflowId ( ) ) ; \n        log . info ( "runId="   +  execution . getRunId ( ) ) ; \n         ActivityTask  activityTask  =   Activity . getTask ( ) ; \n        log . info ( "activityId="   +  activityTask . getActivityId ( ) ) ; \n        log . info ( "activityTimeout="   +  activityTask . getStartToCloseTimeoutSeconds ( ) ) ; \n         return   downloadFileFromS3 ( bucketName ,  remoteName ,  localDirectory  +  localName ) ; \n     } \n     . . . \n } \n Asynchronous Activity Completion \n Sometimes an   lifecycle goes beyond a synchronous method invocation. For example, a request can be put in a queue\nand later a reply comes and is picked up by a different   process. The whole request-reply interaction can be modeled\nas a single Cadence  . \n To indicate that an   should not be completed upon its method return, call  Activity.doNotCompleteOnReturn()  from the\noriginal   thread. Then later, when replies come, complete the   using  ActivityCompletionClient .\nTo correlate   invocation with completion, use either  TaskToken  or   and   IDs. \n public   class   FileProcessingActivitiesImpl   implements   FileProcessingActivities   { \n\n     public   String   download ( String  bucketName ,   String  remoteName ,   String  localName )   { \n         byte [ ]  taskToken  =   Activity . getTaskToken ( ) ;   // Used to correlate reply. \n         asyncDownloadFileFromS3 ( taskToken ,  bucketName ,  remoteName ,  localDirectory  +  localName ) ; \n         Activity . doNotCompleteOnReturn ( ) ; \n         return   "ignored" ;   // Return value is ignored when doNotCompleteOnReturn was called. \n     } \n     . . . \n } \n \n When the download is complete, the download service potentially calls back from a different process: \n public   &lt; R >   void   completeActivity ( byte [ ]  taskToken ,   R  result )   { \n    completionClient . complete ( taskToken ,  result ) ; \n } \n\n public   void   failActivity ( byte [ ]  taskToken ,   Exception  failure )   { \n    completionClient . completeExceptionally ( taskToken ,  failure ) ; \n } \n Activity Heart Beating \n Some   are long running. To react to a crash quickly, use a heartbeat mechanism.\nThe  Activity.heartbeat  function lets the Cadence service know that the   is still alive. You can piggyback\n details  on an   heartbeat. If an   times out, the last value of  details  is included\nin the  ActivityTimeoutException  delivered to a  . Then the   can pass the details to\nthe next   invocation. This acts as a periodic checkpoint mechanism for the progress of an  . \n public   class   FileProcessingActivitiesImpl   implements   FileProcessingActivities   { \n\n     @Override \n     public   String   download ( String  bucketName ,   String  remoteName ,   String  localName )   { \n         InputStream  inputStream  =   openInputStream ( file ) ; \n         try   { \n             byte [ ]  bytes  =   new   byte [ MAX_BUFFER_SIZE ] ; \n             while   ( ( read  =  inputStream . read ( bytes ) )   !=   - 1 )   { \n                totalRead  +=  read ; \n                f . write ( bytes ,   0 ,  read ) ; \n                 /*\n                 * Let the service know about the download progress.\n                 */ \n                 Activity . heartbeat ( totalRead ) ; \n             } \n         }   finally   { \n            inputStream . close ( ) ; \n         } \n     } \n     . . . \n } \n \n '},{title:"Versioning",frontmatter:{layout:"default",title:"Versioning",permalink:"/docs/java-client/versioning",readingShow:"top"},regularPath:"/docs/04-java-client/07-versioning.html",relativePath:"docs/04-java-client/07-versioning.md",key:"v-77dd3e5c",path:"/docs/java-client/versioning/",content:' Versioning \n As outlined in the  Workflow Implementation Constraints  section,   code has to be deterministic by taking the same\ncode path when replaying history  . Any   code change that affects the order in which   are generated breaks\nthis assumption. The solution that allows updating code of already running   is to keep both the old and new code.\nWhen replaying, use the code version that the   were generated with and when executing a new code path, always take the\nnew code. \n Use the  Workflow.getVersion  function to return a version of the code that should be executed and then use the returned\nvalue to pick a correct branch. Let\'s look at an example. \n public   void   processFile ( Arguments  args )   { \n     String  localName  =   null ; \n     String  processedName  =   null ; \n     try   { \n        localName  =  activities . download ( args . getSourceBucketName ( ) ,  args . getSourceFilename ( ) ) ; \n        processedName  =  activities . processFile ( localName ) ; \n        activities . upload ( args . getTargetBucketName ( ) ,  args . getTargetFilename ( ) ,  processedName ) ; \n     }   finally   { \n         if   ( localName  !=   null )   {   // File was downloaded. \n            activities . deleteLocalFile ( localName ) ; \n         } \n         if   ( processedName  !=   null )   {   // File was processed. \n            activities . deleteLocalFile ( processedName ) ; \n         } \n     } \n } \n \n Now we decide to calculate the processed file checksum and pass it to upload.\nThe correct way to implement this change is: \n public   void   processFile ( Arguments  args )   { \n     String  localName  =   null ; \n     String  processedName  =   null ; \n     try   { \n        localName  =  activities . download ( args . getSourceBucketName ( ) ,  args . getSourceFilename ( ) ) ; \n        processedName  =  activities . processFile ( localName ) ; \n         int  version  =   Workflow . getVersion ( "checksumAdded" ,   Workflow . DEFAULT_VERSION ,   1 ) ; \n         if   ( version  ==   Workflow . DEFAULT_VERSION )   { \n            activities . upload ( args . getTargetBucketName ( ) ,  args . getTargetFilename ( ) ,  processedName ) ; \n         }   else   { \n             long  checksum  =  activities . calculateChecksum ( processedName ) ; \n            activities . uploadWithChecksum ( \n                args . getTargetBucketName ( ) ,  args . getTargetFilename ( ) ,  processedName ,  checksum ) ; \n         } \n     }   finally   { \n         if   ( localName  !=   null )   {   // File was downloaded. \n            activities . deleteLocalFile ( localName ) ; \n         } \n         if   ( processedName  !=   null )   {   // File was processed. \n            activities . deleteLocalFile ( processedName ) ; \n         } \n     } \n } \n \n Later, when all   that use the old version are completed, the old branch can be removed. \n public   void   processFile ( Arguments  args )   { \n     String  localName  =   null ; \n     String  processedName  =   null ; \n     try   { \n        localName  =  activities . download ( args . getSourceBucketName ( ) ,  args . getSourceFilename ( ) ) ; \n        processedName  =  activities . processFile ( localName ) ; \n         // getVersion call is left here to ensure that any attempt to replay history \n         // for a different version fails. It can be removed later when there is no possibility \n         // of this happening. \n         Workflow . getVersion ( "checksumAdded" ,   1 ,   1 ) ; \n         long  checksum  =  activities . calculateChecksum ( processedName ) ; \n        activities . uploadWithChecksum ( \n            args . getTargetBucketName ( ) ,  args . getTargetFilename ( ) ,  processedName ,  checksum ) ; \n     }   finally   { \n         if   ( localName  !=   null )   {   // File was downloaded. \n            activities . deleteLocalFile ( localName ) ; \n         } \n         if   ( processedName  !=   null )   {   // File was processed. \n            activities . deleteLocalFile ( processedName ) ; \n         } \n     } \n } \n \n The ID that is passed to the  getVersion  call identifies the change. Each change is expected to have its own ID. But if\na change spawns multiple places in the   code and the new code should be either executed in all of them or\nin none of them, then they have to share the ID. \n'},{title:"Activity interface",frontmatter:{layout:"default",title:"Activity interface",permalink:"/docs/java-client/activity-interface",readingShow:"top"},regularPath:"/docs/04-java-client/05-activity-interface.html",relativePath:"docs/04-java-client/05-activity-interface.md",key:"v-1bb82bf2",path:"/docs/java-client/activity-interface/",content:" Activity interface \n An   is a manifestation of a particular   in the business logic. \n  are defined as methods of a plain Java interface. Each method defines a single   type. A single\n  can use more than one   interface and call more that one   method from the same interface.\nThe only requirement is that   method arguments and return values are serializable to a byte array using the provided\n DataConverter \ninterface. The default implementation uses a JSON serializer, but an alternative implementation can be easily configured. \n Following is an example of an interface that defines four activities: \n public   interface   FileProcessingActivities   { \n\n     void   upload ( String  bucketName ,   String  localName ,   String  targetName ) ; \n\n     String   download ( String  bucketName ,   String  remoteName ) ; \n\n     @ActivityMethod ( scheduleToCloseTimeoutSeconds  =   2 ) \n     String   processFile ( String  localName ) ; \n\n     void   deleteLocalFile ( String  fileName ) ; \n } \n\n \n We recommend to use a single value type argument for   methods. In this way, adding new arguments as fields\nto the value type is a backwards-compatible change. \n An optional @ActivityMethod annotation can be used to specify   options like timeouts or a  . Required options\nthat are not specified through the annotation must be specified at runtime. \n"},{title:"Distributed CRON",frontmatter:{layout:"default",title:"Distributed CRON",permalink:"/docs/java-client/distributed-cron",readingShow:"top"},regularPath:"/docs/04-java-client/08-distributed-cron.html",relativePath:"docs/04-java-client/08-distributed-cron.md",key:"v-27ddd91c",path:"/docs/java-client/distributed-cron/",headers:[{level:2,title:"Convert an existing cron workflow",slug:"convert-an-existing-cron-workflow"},{level:2,title:"Retrieve last successful result",slug:"retrieve-last-successful-result"}],content:" Distributed CRON \n It is relatively straightforward to turn any Cadence   into a Cron  . All you need\nis to supply a cron schedule when starting the   using the CronSchedule\nparameter of\n StartWorkflowOptions . \n You can also start a   using the Cadence   with an optional cron schedule using the  --cron  argument. \n For   with CronSchedule: \n \n CronSchedule is based on UTC time. For example cron schedule &quot;15 8 * * *&quot;\nwill run daily at 8:15am UTC. \n If a   failed and a RetryPolicy is supplied to the StartWorkflowOptions\nas well, the   will retry based on the RetryPolicy. While the   is\nretrying, the server will not schedule the next cron run. \n Cadence server only schedules the next cron run after the current run is\ncompleted. If the next schedule is due while a   is running (or retrying),\nthen it will skip that schedule. \n Cron   will not stop until they are terminated or cancelled. \n \n Cadence supports the standard cron spec: \n // CronSchedule - Optional cron schedule for workflow. If a cron schedule is specified, the workflow will run \n // as a cron based on the schedule. The scheduling will be based on UTC time. The schedule for the next run only happens \n // after the current run is completed/failed/timeout. If a RetryPolicy is also supplied, and the workflow failed \n // or timed out, the workflow will be retried based on the retry policy. While the workflow is retrying, it won't \n // schedule its next run. If the next schedule is due while the workflow is running (or retrying), then it will skip that \n // schedule. Cron workflow will not stop until it is terminated or cancelled (by returning cadence.CanceledError). \n // The cron spec is as follows: \n // ┌───────────── minute (0 - 59) \n // │ ┌───────────── hour (0 - 23) \n // │ │ ┌───────────── day of the month (1 - 31) \n // │ │ │ ┌───────────── month (1 - 12) \n // │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday) \n // │ │ │ │ │ \n // │ │ │ │ │ \n // * * * * * \n CronSchedule  string\n \n The  crontab guru site  is useful for testing your cron expressions. \n Convert an existing cron workflow \n Before CronSchedule was available, the previous approach to implementing cron\n  was to use a delay timer as the last step and then return\n ContinueAsNew . One problem with that implementation is that if the  \nfails or times out, the cron would stop. \n To convert those   to make use of Cadence CronSchedule, all you need is to remove the delay timer and return without using\n ContinueAsNew . Then start the   with the desired CronSchedule. \n Retrieve last successful result \n Sometimes it is useful to obtain the progress of previous successful runs.\nThis is supported by two new APIs in the client library:\n HasLastCompletionResult  and  GetLastCompletionResult . Below is an example of how\nto use this in Java: \n public   String   cronWorkflow ( )   { \n     String  lastProcessedFileName  =   Workflow . getLastCompletionResult ( String . class ) ; \n\n     // Process work starting from the lastProcessedFileName. \n     // Business logic implementation goes here. \n     // Updates lastProcessedFileName to the new value. \n\n     return  lastProcessedFileName ; \n } \n \n Note that this works even if one of the cron schedule runs failed. The\nnext schedule will still get the last successful result if it ever successfully\ncompleted at least once. For example, for a daily cron  , if the first day\nrun succeeds and the second day fails, then the third day run will still get\nthe result from first day's run using these APIs. \n"},{title:"Introduction",frontmatter:{layout:"default",title:"Introduction",permalink:"/docs/java-client",readingShow:"top"},regularPath:"/docs/04-java-client/",relativePath:"docs/04-java-client/index.md",key:"v-704d3a0b",path:"/docs/java-client/",content:" Java client \n The following are important links for the Cadence Java client: \n \n GitHub project:  https://github.com/uber/cadence-java-client \n Samples:  https://github.com/uber/cadence-java-samples \n JavaDoc documentation:  https://www.javadoc.io/doc/com.uber.cadence/cadence-client \n \n"},{title:"Activity overview",frontmatter:{layout:"default",title:"Activity overview",permalink:"/docs/go-client/activities",readingShow:"top"},regularPath:"/docs/05-go-client/03-activities.html",relativePath:"docs/05-go-client/03-activities.md",key:"v-02405692",path:"/docs/go-client/activities/",headers:[{level:2,title:"Overview",slug:"overview"},{level:3,title:"Declaration",slug:"declaration"},{level:3,title:"Implementation",slug:"implementation"},{level:3,title:"Registration",slug:"registration"},{level:2,title:"Failing an Activity",slug:"failing-an-activity"}],content:' Activity overview \n An   is the implementation of a particular   in the business logic. \n  are implemented as functions. Data can be passed directly to an   via function\nparameters. The parameters can be either basic types or structs, with the only requirement being that\nthe parameters must be serializable. Though it is not required, we recommend that the first parameter\nof an   function is of type  context.Context , in order to allow the   to interact with\nother framework methods. The function must return an  error  value, and can optionally return a result\nvalue. The result value can be either a basic type or a struct with the only requirement being that\nit is serializable. \n The values passed to   through invocation parameters or returned through the result value\nare recorded in the execution history. The entire execution history is transferred from the Cadence\nservice to   with every   that the   logic needs to process. A large execution\nhistory can thus adversely impact the performance of your  . Therefore, be mindful of the amount\nof data you transfer via   invocation parameters or return values. Otherwise, no additional\nlimitations exist on   implementations. \n Overview \n The following example demonstrates a simple   that accepts a string parameter, appends a word\nto it, and then returns a result. \n package  simple\n\n import   ( \n     "context" \n\n     "go.uber.org/cadence/activity" \n     "go.uber.org/zap" \n ) \n\n func   init ( )   { \n    activity . Register ( SimpleActivity ) \n } \n\n // SimpleActivity is a sample Cadence activity function that takes one parameter and \n // returns a string containing the parameter value. \n func   SimpleActivity ( ctx context . Context ,  value  string )   ( string ,   error )   { \n    activity . GetLogger ( ctx ) . Info ( "SimpleActivity called." ,  zap . String ( "Value" ,  value ) ) \n     return   "Processed: "   +  value ,   nil \n } \n \n Let\'s take a look at each component of this activity. \n Declaration \n In the Cadence programing model, an   is implemented with a function. The function declaration specifies the parameters the   accepts as well as any values it might return. An   function can take zero or many   specific parameters and can return one or two values. It must always at least return an error value. The   function can accept as parameters and return as results any serializable type. \n func SimpleActivity(ctx context.Context, value string) (string, error) \n The first parameter to the function is context.Context. This is an optional parameter and can be omitted. This parameter is the standard Go context.\nThe second string parameter is a custom   specific parameter that can be used to pass data into the   on start. An   can have one or more such parameters. All parameters to an   function must be serializable, which essentially means that params can’t be channels, functions, variadic, or unsafe pointers.\nThe   declares two return values: string and error. The string return value is used to return the result of the  . The error return value is used to indicate that an error was encountered during execution. \n Implementation \n You can write   implementation code in the same way that you would any other Go service code.\nAdditionally, you can use the usual loggers and metrics controllers, and the standard Go concurrency\nconstructs. \n Heart Beating \n For long-running  , Cadence provides an API for the   code to report both liveness and\nprogress back to the Cadence managed service. \n progress  :=   0 \n for  hasWork  { \n     // Send heartbeat message to the server. \n    cadence . RecordActivityHeartbeat ( ctx ,  progress ) \n     // Do some work. \n     ... \n    progress ++ \n } \n \n When an   times out due to a missed heartbeat, the last value of the details ( progress  in the\nabove sample) is returned from the  cadence.ExecuteActivity  function as the details field of  TimeoutError \nwith  TimeoutType_HEARTBEAT . \n You can also heartbeat an   from an external source: \n // Instantiate a Cadence service client. \ncadence . Client client  =  cadence . NewClient ( ... ) \n\n // Record heartbeat. \nerr  :=  client . RecordActivityHeartbeat ( taskToken ,  details ) \n \n The parameters of the  RecordActivityHeartbeat  function are: \n \n taskToken : The value of the binary  TaskToken  field of the  ActivityInfo  struct retrieved inside\nthe  . \n details : The serializable payload containing progress information. \n Cancellation \n When an   is cancelled, or its   has completed or failed, the context passed\ninto its function is cancelled, which sets its channel’s closed state to  Done . An   can use that\nto perform any necessary cleanup and abort its execution. Cancellation is only delivered to  \nthat call  RecordActivityHeartbeat . \n Registration \n To make the   visible to the   process hosting it, the   must be registered via a\ncall to  activity.Register . \n func   init ( )   { \n    activity . Register ( SimpleActivity ) \n } \n \n This call creates an in-memory mapping inside the   process between the fully qualified function\nname and the implementation. If a   receives a request to start an   execution for an\n  type it does not know, it will fail that request. \n Failing an Activity \n To mark an   as failed, the   function must return an error via the  error  return value. \n'},{title:"Worker service",frontmatter:{layout:"default",title:"Worker service",permalink:"/docs/go-client/workers",readingShow:"top"},regularPath:"/docs/05-go-client/01-workers.html",relativePath:"docs/05-go-client/01-workers.md",key:"v-de78b4f4",path:"/docs/go-client/workers/",content:' Worker service \n A   or   service  is a service that hosts the   and   implementations. The   polls the  Cadence service  for  , performs those  , and communicates   execution results back to the  Cadence service .   services are developed, deployed, and operated by Cadence customers. \n You can run a Cadence   in a new or an existing service. Use the framework APIs to start the Cadence   and link in all   and   implementations that you require the service to execute. \n package  main\n\n import   ( \n\n     "go.uber.org/cadence/.gen/go/cadence" \n     "go.uber.org/cadence/.gen/go/cadence/workflowserviceclient" \n     "go.uber.org/cadence/worker" \n\n     "github.com/uber-go/tally" \n     "go.uber.org/zap" \n     "go.uber.org/zap/zapcore" \n     "go.uber.org/yarpc" \n     "go.uber.org/yarpc/api/transport" \n     "go.uber.org/yarpc/transport/tchannel" \n ) \n\n var  HostPort  =   "127.0.0.1:7933" \n var  Domain  =   "SimpleDomain" \n var  TaskListName  =   "SimpleWorker" \n var  ClientName  =   "SimpleWorker" \n var  CadenceService  =   "cadence-frontend" \n\n func   main ( )   { \n     startWorker ( buildLogger ( ) ,   buildCadenceClient ( ) ) \n } \n\n func   buildLogger ( )   * zap . Logger  { \n    config  :=  zap . NewDevelopmentConfig ( ) \n    config . Level . SetLevel ( zapcore . InfoLevel ) \n\n     var  err  error \n    logger ,  err  :=  config . Build ( ) \n     if  err  !=   nil   { \n         panic ( "Failed to setup logger" ) \n     } \n\n     return  logger\n } \n\n func   buildCadenceClient ( )  workflowserviceclient . Interface  { \n    ch ,  err  :=  tchannel . NewChannelTransport ( tchannel . ServiceName ( ClientName ) ) \n     if  err  !=   nil   { \n         panic ( "Failed to setup tchannel" ) \n     } \n    dispatcher  :=  yarpc . NewDispatcher ( yarpc . Config { \n        Name :  ClientName , \n        Outbounds :  yarpc . Outbounds { \n            CadenceService :   { Unary :  ch . NewSingleOutbound ( HostPort ) } , \n         } , \n     } ) \n     if  err  :=  dispatcher . Start ( ) ;  err  !=   nil   { \n         panic ( "Failed to start dispatcher" ) \n     } \n\n     return  workflowserviceclient . New ( dispatcher . ClientConfig ( CadenceService ) ) \n } \n\n func   startWorker ( logger  * zap . Logger ,  service workflowserviceclient . Interface )   { \n     // TaskListName identifies set of client workflows, activities, and workers. \n     // It could be your group or client or application name. \n    workerOptions  :=  worker . Options { \n        Logger :        logger , \n        MetricsScope :  tally . NewTestScope ( TaskListName ,   map [ string ] string { } ) , \n     } \n\n    worker  :=  worker . New ( \n        service , \n        Domain , \n        TaskListName , \n        workerOptions ) \n    err  :=  worker . Start ( ) \n     if  err  !=   nil   { \n         panic ( "Failed to start worker" ) \n     } \n\n    logger . Info ( "Started Worker." ,  zap . String ( "worker" ,  TaskListName ) ) \n } \n \n '},{title:"Creating workflows",frontmatter:{layout:"default",title:"Creating workflows",permalink:"/docs/go-client/create-workflows",readingShow:"top"},regularPath:"/docs/05-go-client/02-create-workflows.html",relativePath:"docs/05-go-client/02-create-workflows.md",key:"v-2440909c",path:"/docs/go-client/create-workflows/",headers:[{level:2,title:"Overview",slug:"overview"},{level:2,title:"Declaration",slug:"declaration"},{level:2,title:"Implementation",slug:"implementation"},{level:3,title:"Special Cadence client library functions and types",slug:"special-cadence-client-library-functions-and-types"},{level:3,title:"Failing a workflow",slug:"failing-a-workflow"},{level:2,title:"Registration",slug:"registration"}],content:' Creating workflows \n The   is the implementation of the coordination logic. The Cadence programming framework\n(aka client library) allows you to write the   coordination logic as simple procedural code\nthat uses standard Go data modeling. The client library takes care of the communication between\nthe   service and the Cadence service, and ensures state persistence between   even in\ncase of   failures. Furthermore, any particular execution is not tied to a particular  \nmachine. Different steps of the coordination logic can end up executing on different  \ninstances, with the framework ensuring that the necessary state is recreated on the   executing\nthe step. \n However, in order to facilitate this operational model, both the Cadence programming framework and\nthe managed service impose some requirements and restrictions on the implementation of the\ncoordination logic. The details of these requirements and restrictions are described in the\n Implementation  section below. \n Overview \n The sample code below shows a simple implementation of a   that executes one  . The\n  also passes the sole parameter it receives as part of its initialization as a parameter\nto the  . \n package  sample\n\n import   ( \n     "time" \n\n     "go.uber.org/cadence/workflow" \n ) \n\n func   init ( )   { \n    workflow . Register ( SimpleWorkflow ) \n } \n\n func   SimpleWorkflow ( ctx workflow . Context ,  value  string )   error   { \n    ao  :=  workflow . ActivityOptions { \n        TaskList :                 "sampleTaskList" , \n        ScheduleToCloseTimeout :  time . Second  *   60 , \n        ScheduleToStartTimeout :  time . Second  *   60 , \n        StartToCloseTimeout :     time . Second  *   60 , \n        HeartbeatTimeout :        time . Second  *   10 , \n        WaitForCancellation :      false , \n     } \n    ctx  =  workflow . WithActivityOptions ( ctx ,  ao ) \n\n    future  :=  workflow . ExecuteActivity ( ctx ,  SimpleActivity ,  value ) \n     var  result  string \n     if  err  :=  future . Get ( ctx ,   &amp; result ) ;  err  !=   nil   { \n         return  err\n     } \n    workflow . GetLogger ( ctx ) . Info ( "Done" ,  zap . String ( "result" ,  result ) ) \n     return   nil \n } \n Declaration \n In the Cadence programing model, a   is implemented with a function. The function declaration\nspecifies the parameters the   accepts as well as any values it might return. \n func   SimpleWorkflow ( ctx workflow . Context ,  value  string )   error \n \n Let’s deconstruct the declaration above: \n \n The first parameter to the function is  ctx workflow.Context . This is a required parameter for\nall   functions and is used by the Cadence client library to pass execution context.\nVirtually all the client library functions that are callable from the   functions require\nthis  ctx  parameter. This  context  parameter is the same concept as the standard\n context.Context  provided by Go. The only difference between  workflow.Context  and\n context.Context  is that the  Done()  function in  workflow.Context  returns\n workflow.Channel  instead the standard go  chan . \n The second parameter,  string , is a custom   parameter that can be used to pass data\ninto the   on start. A   can have one or more such parameters. All parameters to a\n  function must be serializable, which essentially means that params can’t be channels,\nfunctions, variadic, or unsafe pointers. \n Since it only declares error as the return value, this means that the   does not return a\nvalue. The  error  return value is used to indicate an error was encountered during execution\nand the   should be terminated. \n Implementation \n In order to support the synchronous and sequential programming model for the  \nimplementation, there are certain restrictions and requirements on how the   implementation\nmust behave in order to guarantee correctness. The requirements are that: \n \n Execution must be deterministic \n Execution must be idempotent \n \n A straightforward way to think about these requirements is that the   code is as follows: \n \n  code can only read and manipulate local state or state received as return values from\nCadence client library functions. \n  code should not affect changes in external systems other than through invocation\nof  . \n  code should interact with  time  only through the functions provided by the Cadence\nclient library (i.e.  workflow.Now() ,  workflow.Sleep() ). \n  code should not create and interact with goroutines directly, it should instead use the\nfunctions provided by the Cadence client library (i.e.,  workflow.Go()  instead of  go ,\n workflow.Channel  instead of  chan ,  workflow.Selector  instead of  select ). \n  code should do all logging via the logger provided by the Cadence client library\n(i.e.,  workflow.GetLogger() ). \n  code should not iterate over maps using range because the order of map iteration is randomized. \n \n Now that we have laid the ground rules, we can take a look at some of the special functions and types\nused for writing Cadence   and how to implement some common patterns. \n Special Cadence client library functions and types \n The Cadence client library provides a number of functions and types as alternatives to some native\nGo functions and types. Usage of these replacement functions/types is necessary in order to ensure\nthat the   code execution is deterministic and repeatable within an execution context. \n Coroutine related constructs: \n \n workflow.Go  : This is a replacement for the the  go  statement. \n workflow.Channel  : This is a replacement for the native  chan  type. Cadence provides\nsupport for both buffered and unbuffered channels. \n workflow.Selector  : This is a replacement for the  select  statement. \n \n Time related functions: \n \n workflow.Now()  : This is a replacement for  time.Now() . \n workflow.Sleep()  : This is a replacement for  time.Sleep() . \n Failing a workflow \n To mark a   as failed, all that needs to happen is for the   function to return an\nerror via the  err  return value. \n Registration \n For some client code to be able to invoke a   type, the   process needs to be aware of\nall the implementations it has access to. A   is registered with the following call: \n workflow . Register ( SimpleWorkflow ) \n \n This call essentially creates an in-memory mapping inside the   process between the fully\nqualified function name and the implementation. It is safe to call this registration method from\nan  init()  function. If the   receives   for a   type it does not know, it will\nfail that  . However, the failure of the   will not cause the entire   to fail. \n'},{title:"Child workflows",frontmatter:{layout:"default",title:"Child workflows",permalink:"/docs/go-client/child-workflows",readingShow:"top"},regularPath:"/docs/05-go-client/05-child-workflows.html",relativePath:"docs/05-go-client/05-child-workflows.md",key:"v-65810322",path:"/docs/go-client/child-workflows/",content:' Child workflows \n workflow.ExecuteChildWorkflow  enables the scheduling of other   from within a  \'s\nimplementation. The parent   has the ability to monitor and impact the lifecycle of the child\n , similar to the way it does for an   that it invoked. \n cwo  :=  workflow . ChildWorkflowOptions { \n     // Do not specify WorkflowID if you want Cadence to generate a unique ID for the child execution. \n    WorkflowID :                     "BID-SIMPLE-CHILD-WORKFLOW" , \n    ExecutionStartToCloseTimeout :  time . Minute  *   30 , \n } \nctx  =  workflow . WithChildWorkflowOptions ( ctx ,  cwo ) \n\n var  result  string \nfuture  :=  workflow . ExecuteChildWorkflow ( ctx ,  SimpleChildWorkflow ,  value ) \n if  err  :=  future . Get ( ctx ,   &amp; result ) ;  err  !=   nil   { \n    workflow . GetLogger ( ctx ) . Error ( "SimpleChildWorkflow failed." ,  zap . Error ( err ) ) \n     return  err\n } \n \n Let\'s take a look at each component of this call. \n Before calling  workflow.ExecuteChildworkflow() , you must configure  ChildWorkflowOptions  for the\ninvocation. These options customize various execution timeouts, and are passed in by creating a child\ncontext from the initial context and overwriting the desired values. The child context is then passed\ninto the  workflow.ExecuteChildWorkflow()  call. If multiple   are sharing the same option\nvalues, then the same context instance can be used when calling  workflow.ExecuteChildworkflow() . \n The first parameter in the call is the required  cadence.Context  object. This type is a copy of\n context.Context  with the  Done()  method returning  cadence.Channel  instead of the native Go  chan . \n The second parameter is the function that we registered as a   function. This parameter can\nalso be a string representing the fully qualified name of the   function. The benefit of this\nis that when you pass in the actual function object, the framework can validate   parameters. \n The remaining parameters are passed to the   as part of the call. In our example, we have a\nsingle parameter:  value . This list of parameters must match the list of parameters declared by\nthe   function. \n The method call returns immediately and returns a  cadence.Future . This allows you to execute more\ncode without having to wait for the scheduled   to complete. \n When you are ready to process the results of the  , call the  Get()  method on the returned future\nobject. The parameters to this method is the  ctx  object we passed to the\n workflow.ExecuteChildWorkflow()  call and an output parameter that will receive the output of the\n . The type of the output parameter must match the type of the return value declared by the\n  function. The  Get()  method will block until the   completes and results are\navailable. \n The  workflow.ExecuteChildWorkflow()  function is similar to  workflow.ExecuteActivity() . All of the\npatterns described for using  workflow.ExecuteActivity()  apply to the  workflow.ExecuteChildWorkflow() \nfunction as well. \n When a parent   is cancelled by the user, the child   can be cancelled or abandoned\nbased on a configurable child policy. \n'},{title:"Executing activities",frontmatter:{layout:"default",title:"Executing activities",permalink:"/docs/go-client/execute-activity",readingShow:"top"},regularPath:"/docs/05-go-client/04-execute-activity.html",relativePath:"docs/05-go-client/04-execute-activity.md",key:"v-690f3d1c",path:"/docs/go-client/execute-activity/",headers:[{level:2,title:"Activity options",slug:"activity-options"},{level:2,title:"Activity timeouts",slug:"activity-timeouts"},{level:2,title:"ExecuteActivity call",slug:"executeactivity-call"}],content:' Executing activities \n The primary responsibility of a   implementation is to schedule   for execution. The\nmost straightforward way to do this is via the library method  workflow.ExecuteActivity . The following\nsample code demonstrates making this call: \n ao  :=  cadence . ActivityOptions { \n    TaskList :                 "sampleTaskList" , \n    ScheduleToCloseTimeout :  time . Second  *   60 , \n    ScheduleToStartTimeout :  time . Second  *   60 , \n    StartToCloseTimeout :     time . Second  *   60 , \n    HeartbeatTimeout :        time . Second  *   10 , \n    WaitForCancellation :      false , \n } \nctx  =  cadence . WithActivityOptions ( ctx ,  ao ) \n\nfuture  :=  workflow . ExecuteActivity ( ctx ,  SimpleActivity ,  value ) \n var  result  string \n if  err  :=  future . Get ( ctx ,   &amp; result ) ;  err  !=   nil   { \n     return  err\n } \n \n Let\'s take a look at each component of this call. \n Activity options \n Before calling  workflow.ExecuteActivity() , you must configure  ActivityOptions  for the\ninvocation. These options customize various execution timeouts, and are passed in by creating a child\ncontext from the initial context and overwriting the desired values. The child context is then passed\ninto the  workflow.ExecuteActivity()  call. If multiple   are sharing the same option\nvalues, then the same context instance can be used when calling  workflow.ExecuteActivity() . \n Activity timeouts \n There can be various kinds of timeouts associated with an  . Cadence guarantees that  \nare executed  at most once , so an   either succeeds or fails with one of the following timeouts: \n \n \n \n Timeout \n Description \n \n \n \n \n StartToCloseTimeout \n Maximum time that a worker can take to process a task after it has received the task. \n \n \n ScheduleToStartTimeout \n Time a task can wait to be picked up by an   after a   schedules it. If there are no workers available to process this task for the specified duration, the task will time out. \n \n \n ScheduleToCloseTimeout \n Time a task can take to complete after it is scheduled by a  . This is usually greater than the sum of  StartToClose  and  ScheduleToStart  timeouts. \n \n \n HeartbeatTimeout \n If a task doesn\'t heartbeat to the Cadence service for this duration, it will be considered to have failed. This is useful for long-running tasks. \n ExecuteActivity call \n The first parameter in the call is the required  cadence.Context  object. This type is a copy of\n context.Context  with the  Done()  method returning  cadence.Channel  instead of the native Go  chan . \n The second parameter is the function that we registered as an   function. This parameter can\nalso be a string representing the fully qualified name of the   function. The benefit of passing\nin the actual function object is that the framework can validate   parameters. \n The remaining parameters are passed to the   as part of the call. In our example, we have a\nsingle parameter:  value . This list of parameters must match the list of parameters declared by\nthe   function. The Cadence client library will validate this. \n The method call returns immediately and returns a  cadence.Future . This allows you to execute more\ncode without having to wait for the scheduled   to complete. \n When you are ready to process the results of the  , call the  Get()  method on the future\nobject returned. The parameters to this method are the  ctx  object we passed to the\n workflow.ExecuteActivity()  call and an output parameter that will receive the output of the\n . The type of the output parameter must match the type of the return value declared by the\n  function. The  Get()  method will block until the   completes and results are\navailable. \n You can retrieve the result value returned by  workflow.ExecuteActivity()  from the future and use\nit like any normal result from a synchronous function call. The following sample code demonstrates how\nyou can use the result if it is a string value: \n var  result  string \n if  err  :=  future . Get ( ctx1 ,   &amp; result ) ;  err  !=   nil   { \n     return  err\n } \n\n switch  result  { \n case   "apple" : \n     // Do something. \n case   "banana" : \n     // Do something. \n default : \n     return  err\n } \n \n In this example, we called the  Get()  method on the returned future immediately after  workflow.ExecuteActivity() .\nHowever, this is not necessary. If you want to execute multiple   in parallel, you can\nrepeatedly call  workflow.ExecuteActivity() , store the returned futures, and then wait for all\n  to complete by calling the  Get()  methods of the future at a later time. \n To implement more complex wait conditions on returned future objects, use the  cadence.Selector  class. \n'},{title:"Activity and workflow retries",frontmatter:{layout:"default",title:"Activity and workflow retries",permalink:"/docs/go-client/retries",readingShow:"top"},regularPath:"/docs/05-go-client/06-retries.html",relativePath:"docs/05-go-client/06-retries.md",key:"v-5891ac4c",path:"/docs/go-client/retries/",content:" Activity and workflow retries \n  and   can fail due to various intermediate conditions. In those cases, we want\nto retry the failed   or child   or even the parent  . This can be achieved\nby supplying an optional retry policy. A retry policy looks like the following: \n // RetryPolicy defines the retry policy. \nRetryPolicy  struct   { \n     // Backoff interval for the first retry. If coefficient is 1.0 then it is used for all retries. \n     // Required, no default value. \n    InitialInterval time . Duration\n\n     // Coefficient used to calculate the next retry backoff interval. \n     // The next retry interval is previous interval multiplied by this coefficient. \n     // Must be 1 or larger. Default is 2.0. \n    BackoffCoefficient  float64 \n\n     // Maximum backoff interval between retries. Exponential backoff leads to interval increase. \n     // This value is the cap of the interval. Default is 100x of initial interval. \n    MaximumInterval time . Duration\n\n     // Maximum time to retry. Either ExpirationInterval or MaximumAttempts is required. \n     // When exceeded the retries stop even if maximum retries is not reached yet. \n    ExpirationInterval time . Duration\n\n     // Maximum number of attempts. When exceeded the retries stop even if not expired yet. \n     // If not set or set to 0, it means unlimited, and relies on ExpirationInterval to stop. \n     // Either MaximumAttempts or ExpirationInterval is required. \n    MaximumAttempts  int32 \n\n     // Non-Retriable errors. This is optional. Cadence server will stop retry if error reason matches this list. \n     // Error reason for custom error is specified when your activity/workflow returns cadence.NewCustomError(reason). \n     // Error reason for panic error is \"cadenceInternal:Panic\". \n     // Error reason for any other error is \"cadenceInternal:Generic\". \n     // Error reason for timeouts is: \"cadenceInternal:Timeout TIMEOUT_TYPE\". TIMEOUT_TYPE could be START_TO_CLOSE or HEARTBEAT. \n     // Note that cancellation is not a failure, so it won't be retried. \n    NonRetriableErrorReasons  [ ] string \n } \n \n To enable retry, supply a custom retry policy to  ActivityOptions  or  ChildWorkflowOptions \nwhen you execute them. \n expiration  :=  time . Minute  *   10 \nretryPolicy  :=   &amp; cadence . RetryPolicy { \n    InitialInterval :     time . Second , \n    BackoffCoefficient :   2 , \n    MaximumInterval :     expiration , \n    ExpirationInterval :  time . Minute  *   10 , \n    MaximumAttempts :      5 , \n } \nao  :=  workflow . ActivityOptions { \n    ScheduleToStartTimeout :  expiration , \n    StartToCloseTimeout :     expiration , \n    HeartbeatTimeout :        time . Second  *   30 , \n    RetryPolicy :             retryPolicy ,   // Enable retry. \n } \nctx  =  workflow . WithActivityOptions ( ctx ,  ao ) \nactivityFuture  :=  workflow . ExecuteActivity ( ctx ,  SampleActivity ,  params ) \n \n If   heartbeat its progress before it failed, the retry attempt will contain the progress\nso   implementation could resume from failed progress like: \n func   SampleActivity ( ctx context . Context ,  inputArg InputParams )   error   { \n    startIdx  :=  inputArg . StartIndex\n     if  activity . HasHeartbeatDetails ( ctx )   { \n         // Recover from finished progress. \n         var  finishedIndex  int \n         if  err  :=  activity . GetHeartbeatDetails ( ctx ,   &amp; finishedIndex ) ;  err  ==   nil   { \n            startIdx  =  finishedIndex  +   1   // Start from next one. \n         } \n     } \n\n     // Normal activity logic... \n     for  i := startIdx ;  i &lt; inputArg . EndIdx ;  i ++   { \n         // Code for processing item i goes here... \n        activity . RecordHeartbeat ( ctx ,  i )   // Report progress. \n     } \n } \n \n Like retry for an  , you need to supply a retry policy for  ChildWorkflowOptions  to enable\nretry for a child  . To enable retry for a parent  , supply a retry policy when\nyou start a   via  StartWorkflowOptions . \n There are some subtle changes to  's history   when  RetryPolicy  is used.\nFor an   with  RetryPolicy : \n \n The  ActivityTaskScheduledEvent  will have extended  ScheduleToStartTimeout  and  ScheduleToCloseTimeout . These two timeouts\nwill be overwritten by the server to be as long as the retry policy's  ExpirationInterval . If the  ExpirationInterval \nis not specified, it will be overwritten to the  's timeout. \n The  ActivityTaskStartedEvent  will not show up in history until the   is completed or failed with no more retry.\nThis is to avoid recording the  ActivityTaskStarted    but later it failed and retried. Using the  DescribeWorkflowExecution \nAPI will return the  PendingActivityInfo  and it will contain  attemptCount  if it is retrying. \n \n For a   with  RetryPolicy : \n \n If a   failed and needs to retry, the   will be closed with a  ContinueAsNew   . The  \nwill have the  ContinueAsNewInitiator  set to  RetryPolicy  and the new  RunID  for the next retry attempt. \n The new attempt will be created immediately. But the first   won't be scheduled until the backoff duration\nwhich is also recorded in the new run's  WorkflowExecutionStartedEventAttributes    as  firstDecisionTaskBackoffSeconds . \n \n"},{title:"Java samples",frontmatter:{layout:"default",title:"Java samples",pageClass:"custom-width",permalink:"/docs/java-client/java-samples",readingShow:"top"},regularPath:"/docs/04-java-client/09-java-samples.html",relativePath:"docs/04-java-client/09-java-samples.md",key:"v-054a3e92",path:"/docs/java-client/java-samples/",headers:[{level:2,title:"Hello Activity",slug:"hello-activity"},{level:2,title:"Hello Activity 2",slug:"hello-activity-2"}],content:" Java samples \n On this page java samples and code will be displayed \n Hello Activity \n Hello Activity 2 \n \n"},{title:"Side effect",frontmatter:{layout:"default",title:"Side effect",permalink:"/docs/go-client/side-effect",readingShow:"top"},regularPath:"/docs/05-go-client/10-side-effect.html",relativePath:"docs/05-go-client/10-side-effect.md",key:"v-6561abb4",path:"/docs/go-client/side-effect/",content:" Side effect \n workflow.SideEffect  is useful for short, nondeterministic code snippets, such as getting a random\nvalue or generating a UUID. It executes the provided function once and records its result into the\n  history.  workflow.SideEffect  does not re-execute upon replay, but instead returns the\nrecorded result. It can be seen as an &quot;inline&quot;  . Something to note about  workflow.SideEffect \nis that, unlike the Cadence guarantee of at-most-once execution for  , there is no such\nguarantee with  workflow.SideEffect . Under certain failure conditions,  workflow.SideEffect  can\nend up executing a function more than once. \n The only way to fail  SideEffect  is to panic, which causes a   failure. After the\ntimeout, Cadence reschedules and then re-executes the  , giving  SideEffect  another chance\nto succeed. Do not return any data from  SideEffect  other than through its recorded return value. \n The following sample demonstrates how to use  SideEffect : \n encodedRandom  :=   SideEffect ( func ( ctx cadence . Context )   interface { }   { \n     return  rand . Intn ( 100 ) \n } ) \n\n var  random  int \nencodedRandom . Get ( &amp; random ) \n if  random  &lt;   50   { \n     ... \n }   else   { \n     ... \n } \n \n "},{title:"Signals",frontmatter:{layout:"default",title:"Signals",permalink:"/docs/go-client/signals",readingShow:"top"},regularPath:"/docs/05-go-client/08-signals.html",relativePath:"docs/05-go-client/08-signals.md",key:"v-6b81078c",path:"/docs/go-client/signals/",headers:[{level:2,title:"SignalWithStart",slug:"signalwithstart"}],content:' Signals \n  provide a mechanism to send data directly to a running  . Previously, you had\ntwo options for passing data to the   implementation: \n \n Via start parameters \n As return values from  \n \n With start parameters, we could only pass in values before   began. \n Return values from   allowed us to pass information to a running  , but this\napproach comes with its own complications. One major drawback is reliance on polling. This means\nthat the data needs to be stored in a third-party location until it\'s ready to be picked up by\nthe  . Further, the lifecycle of this   requires management, and the  \nrequires manual restart if it fails before acquiring the data. \n , on the other hand, provide a fully asynchronous and durable mechanism for providing data to\na running  . When a   is received for a running  , Cadence persists the  \nand the payload in the   history. The   can then process the   at any time\nafterwards without the risk of losing the information. The   also has the option to stop\nexecution by blocking on a   channel. \n var  signalVal  string \nsignalChan  :=  workflow . GetSignalChannel ( ctx ,  signalName ) \n\ns  :=  workflow . NewSelector ( ctx ) \ns . AddReceive ( signalChan ,   func ( c workflow . Channel ,  more  bool )   { \n    c . Receive ( ctx ,   &amp; signalVal ) \n    workflow . GetLogger ( ctx ) . Info ( "Received signal!" ,  zap . String ( "signal" ,  signalName ) ,  zap . String ( "value" ,  signalVal ) ) \n } ) \ns . Select ( ctx ) \n\n if   len ( signalVal )   >   0   &amp;&amp;  signalVal  !=   "SOME_VALUE"   { \n     return  errors . New ( "signalVal" ) \n } \n \n In the example above, the   code uses  workflow.GetSignalChannel  to open a\n workflow.Channel  for the named  . We then use a  workflow.Selector  to wait on this\nchannel and process the payload received with the  . \n SignalWithStart \n You may not know if a   is running and can accept a  . The\n client.SignalWithStartWorkflow  API\nallows you to send a   to the current   instance if one exists or to create a new\nrun and then send the  .  SignalWithStartWorkflow  therefore doesn\'t take a   as a\nparameter. \n'},{title:"Continue as new",frontmatter:{layout:"default",title:"Continue as new",permalink:"/docs/go-client/continue-as-new",readingShow:"top"},regularPath:"/docs/05-go-client/09-continue-as-new.html",relativePath:"docs/05-go-client/09-continue-as-new.md",key:"v-4ce924ec",path:"/docs/go-client/continue-as-new/",content:" Continue as new \n  that need to rerun periodically could naively be implemented as a big  for  loop with\na sleep where the entire logic of the   is inside the body of the  for  loop. The problem\nwith this approach is that the history for that   will keep growing to a point where it\nreaches the maximum size enforced by the service. \n ContinueAsNew  is the low level construct that enables implementing such   without the\nrisk of failures down the road. The operation atomically completes the current execution and starts\na new execution of the   with the same  . The new execution will not carry\nover any history from the old execution. To trigger this behavior, the   function should\nterminate by returning the special  ContinueAsNewError  error: \n func   SimpleWorkflow ( workflow . Context ctx ,  value  string )   error   { \n     ... \n     return  workflow . NewContinueAsNewError ( ctx ,  SimpleWorkflow ,  value ) \n } \n \n "},{title:"Error handling",frontmatter:{layout:"default",title:"Error handling",permalink:"/docs/go-client/error-handling",readingShow:"top"},regularPath:"/docs/05-go-client/07-error-handling.html",relativePath:"docs/05-go-client/07-error-handling.md",key:"v-f06c729c",path:"/docs/go-client/error-handling/",content:' Error handling \n An  , or child  , might fail and you could handle errors differently based on different\nerror cases. If the   returns an error as  errors.New()  or  fmt.Errorf() , those errors will\nbe converted to  workflow.GenericError . If the   returns an error as\n cadence.NewCustomError(“err-reason”, details) , that error will be converted to  *cadence.CustomError .\nThere are other types of errors such as  workflow.TimeoutError ,  workflow.CanceledError  and\n workflow.PanicError . Following is an example of what your error code might look like: \n err  :=  workflow . ExecuteActivity ( ctx ,  YourActivityFunc ) . Get ( ctx ,   nil ) \n switch  err  :=  err . ( type )   { \n     case   * cadence . CustomError : \n         switch  err . Reason ( )   { \n             case   "err-reason-a" : \n                 // Handle error-reason-a. \n                 var  details YourErrorDetailsType\n                err . Details ( &amp; details ) \n                 // Deal with details. \n             case   "err-reason-b" : \n                 // Handle error-reason-b. \n             default : \n                 // Handle all other error reasons. \n         } \n     case   * workflow . GenericError : \n         switch  err . Error ( )   { \n             case   "err-msg-1" : \n                 // Handle error with message "err-msg-1". \n             case   "err-msg-2" : \n                 // Handle error with message "err-msg-2". \n             default : \n                 // Handle all other generic errors. \n         } \n     case   * workflow . TimeoutError : \n         switch  err . TimeoutType ( )   { \n             case  shared . TimeoutTypeScheduleToStart : \n                 // Handle ScheduleToStart timeout. \n             case  shared . TimeoutTypeStartToClose : \n                 // Handle StartToClose timeout. \n             case  shared . TimeoutTypeHeartbeat : \n                 // Handle heartbeat timeout. \n             default : \n         } \n     case   * workflow . PanicError : \n         // Handle panic error. \n     case   * cadence . CanceledError : \n         // Handle canceled error. \n     default : \n         // All other cases (ideally, this should not happen). \n } \n \n '},{title:"Testing",frontmatter:{layout:"default",title:"Testing",permalink:"/docs/go-client/workflow-testing",readingShow:"top"},regularPath:"/docs/05-go-client/13-workflow-testing.html",relativePath:"docs/05-go-client/13-workflow-testing.md",key:"v-66ca865c",path:"/docs/go-client/workflow-testing/",headers:[{level:2,title:"Setup",slug:"setup"},{level:2,title:"A Simple Test",slug:"a-simple-test"},{level:2,title:"Activity mocking and overriding",slug:"activity-mocking-and-overriding"}],content:' Testing \n The Cadence Go client library provides a test framework to facilitate testing   implementations.\nThe framework is suited for implementing unit tests as well as functional tests of the   logic. \n The following code implements unit tests for the  SimpleWorkflow  sample: \n package  sample\n\n import   ( \n     "errors" \n     "testing" \n\n     "github.com/stretchr/testify/mock" \n     "github.com/stretchr/testify/suite" \n\n     "go.uber.org/cadence" \n     "go.uber.org/cadence/testsuite" \n ) \n\n type  UnitTestSuite  struct   { \n    suite . Suite\n    testsuite . WorkflowTestSuite\n\n    env  * testsuite . TestWorkflowEnvironment\n } \n\n func   ( s  * UnitTestSuite )   SetupTest ( )   { \n    s . env  =  s . NewTestWorkflowEnvironment ( ) \n } \n\n func   ( s  * UnitTestSuite )   AfterTest ( suiteName ,  testName  string )   { \n    s . env . AssertExpectations ( s . T ( ) ) \n } \n\n func   ( s  * UnitTestSuite )   Test_SimpleWorkflow_Success ( )   { \n    s . env . ExecuteWorkflow ( SimpleWorkflow ,   "test_success" ) \n\n    s . True ( s . env . IsWorkflowCompleted ( ) ) \n    s . NoError ( s . env . GetWorkflowError ( ) ) \n } \n\n func   ( s  * UnitTestSuite )   Test_SimpleWorkflow_ActivityParamCorrect ( )   { \n    s . env . OnActivity ( SimpleActivity ,  mock . Anything ,  mock . Anything ) . Return ( \n         func ( ctx context . Context ,  value  string )   ( string ,   error )   { \n            s . Equal ( "test_success" ,  value ) \n             return  value ,   nil \n         } \n     ) \n    s . env . ExecuteWorkflow ( SimpleWorkflow ,   "test_success" ) \n\n    s . True ( s . env . IsWorkflowCompleted ( ) ) \n    s . NoError ( s . env . GetWorkflowError ( ) ) \n } \n\n func   ( s  * UnitTestSuite )   Test_SimpleWorkflow_ActivityFails ( )   { \n    s . env . OnActivity ( SimpleActivity ,  mock . Anything ,  mock . Anything ) . Return ( \n         "" ,  errors . New ( "SimpleActivityFailure" ) ) \n    s . env . ExecuteWorkflow ( SimpleWorkflow ,   "test_failure" ) \n\n    s . True ( s . env . IsWorkflowCompleted ( ) ) \n\n    s . NotNil ( s . env . GetWorkflowError ( ) ) \n    s . True ( cadence . IsGenericError ( s . env . GetWorkflowError ( ) ) ) \n    s . Equal ( "SimpleActivityFailure" ,  s . env . GetWorkflowError ( ) . Error ( ) ) \n } \n\n func   TestUnitTestSuite ( t  * testing . T )   { \n    suite . Run ( t ,   new ( UnitTestSuite ) ) \n } \n Setup \n To run unit tests, we first define a &quot;test suite&quot; struct that absorbs both the\nbasic suite functionality from  testify \nvia  suite.Suite  and the suite functionality from the Cadence test framework via\n cadence.WorkflowTestSuite . Because every test in this test suite will test our  , we\nadd a property to our struct to hold an instance of the test environment. This allows us to initialize\nthe test environment in a setup method. For testing  , we use a  cadence.TestWorkflowEnvironment . \n Next, we implement a  SetupTest  method to setup a new test environment before each test. Doing so\nensures that each test runs in its own isolated sandbox. We also implement an  AfterTest  function\nwhere we assert that all mocks we set up were indeed called by invoking  s.env.AssertExpectations(s.T()) . \n Finally, we create a regular test function recognized by &quot;go test&quot; and pass the struct to  suite.Run . \n A Simple Test \n The most simple test case we can write is to have the test environment execute the   and then\nevaluate the results. \n func   ( s  * UnitTestSuite )   Test_SimpleWorkflow_Success ( )   { \n    s . env . ExecuteWorkflow ( SimpleWorkflow ,   "test_success" ) \n\n    s . True ( s . env . IsWorkflowCompleted ( ) ) \n    s . NoError ( s . env . GetWorkflowError ( ) ) \n } \n \n Calling  s.env.ExecuteWorkflow(...)  executes the   logic and any invoked   inside the\ntest process. The first parameter of  s.env.ExecuteWorkflow(...)  contains the   functions,\nand any subsequent parameters contain values for custom input parameters declared by the  \nfunction. \n \n Note that unless the   invocations are mocked or   implementation\nreplaced (see  Activity mocking and overriding ), the test environment\nwill execute the actual   code including any calls to outside services. \n \n After executing the   in the above example, we assert that the   ran through completion\nvia the call to  s.env.IsWorkflowComplete() . We also assert that no errors were returned by asserting\non the return value of  s.env.GetWorkflowError() . If our   returned a value, we could have\nretrieved that value via a call to  s.env.GetWorkflowResult(&amp;value)  and had additional asserts on that\nvalue. \n Activity mocking and overriding \n When running unit tests on  , we want to test the   logic in isolation. Additionally,\nwe want to inject   errors during our test runs. The test framework provides two mechanisms\nthat support these scenarios:   mocking and   overriding. Both of these mechanisms allow\nyou to change the behavior of   invoked by your   without the need to modify the actual\n  code. \n Let\'s take a look at a test that simulates a test that fails via the &quot;activity mocking&quot; mechanism. \n func   ( s  * UnitTestSuite )   Test_SimpleWorkflow_ActivityFails ( )   { \n    s . env . OnActivity ( SimpleActivity ,  mock . Anything ,  mock . Anything ) . Return ( \n         "" ,  errors . New ( "SimpleActivityFailure" ) ) \n    s . env . ExecuteWorkflow ( SimpleWorkflow ,   "test_failure" ) \n\n    s . True ( s . env . IsWorkflowCompleted ( ) ) \n\n    s . NotNil ( s . env . GetWorkflowError ( ) ) \n     _ ,  ok  :=  s . env . GetWorkflowError ( ) . ( * cadence . GenericError ) \n    s . True ( ok ) \n    s . Equal ( "SimpleActivityFailure" ,  s . env . GetWorkflowError ( ) . Error ( ) ) \n } \n \n This test simulates the execution of the    SimpleActivity  that is invoked by our  \n SimpleWorkflow  returning an error. We accomplish this by setting up a mock on the test environment\nfor the  SimpleActivity  that returns an error. \n s . env . OnActivity ( SimpleActivity ,  mock . Anything ,  mock . Anything ) . Return ( \n     "" ,  errors . New ( "SimpleActivityFailure" ) ) \n \n With the mock set up we can now execute the   via the s.env.ExecuteWorkflow(...) method and\nassert that the   completed successfully and returned the expected error. \n Simply mocking the execution to return a desired value or error is a pretty powerful mechanism to\nisolate   logic. However, sometimes we want to replace the   with an alternate implementation\nto support a more complex test scenario. Let\'s assume we want to validate that the   gets called\nwith the correct parameters. \n func   ( s  * UnitTestSuite )   Test_SimpleWorkflow_ActivityParamCorrect ( )   { \n    s . env . OnActivity ( SimpleActivity ,  mock . Anything ,  mock . Anything ) . Return ( \n         func ( ctx context . Context ,  value  string )   ( string ,   error )   { \n            s . Equal ( "test_success" ,  value ) \n             return  value ,   nil \n         } \n     ) \n    s . env . ExecuteWorkflow ( SimpleWorkflow ,   "test_success" ) \n\n    s . True ( s . env . IsWorkflowCompleted ( ) ) \n    s . NoError ( s . env . GetWorkflowError ( ) ) \n } \n \n In this example, we provide a function implementation as the parameter to  Return . This allows us to\nprovide an alternate implementation for the    SimpleActivity . The framework will execute this\nfunction whenever the   is invoked and pass on the return value from the function as the result\nof the   invocation. Additionally, the framework will validate that the signature of the “mock”\nfunction matches the signature of the original   function. \n Since this can be an entire function, there is no limitation as to what we can do here. In this\nexample, we assert that the “value” param has the same content as the value param we passed to the  . \n'},{title:"Queries",frontmatter:{layout:"default",title:"Queries",permalink:"/docs/go-client/queries",readingShow:"top"},regularPath:"/docs/05-go-client/11-queries.html",relativePath:"docs/05-go-client/11-queries.md",key:"v-9a2b5c34",path:"/docs/go-client/queries/",headers:[{level:2,title:"Consistent Query",slug:"consistent-query"}],content:' Queries \n If a   has been stuck at a state for longer than an expected period of time, you\nmight want to   the current call stack. You can use the Cadence   to perform this  . For\nexample: \n cadence-cli --domain samples-domain workflow query -w my_workflow_id -r my_run_id -qt __stack_trace \n This command uses  __stack_trace , which is a built-in   type supported by the Cadence client\nlibrary. You can add custom   types to handle   such as   the current state of a\n , or   how many   the   has completed. To do this, you need to set\nup a   handler using  workflow.SetQueryHandler . \n The handler must be a function that returns two values: \n \n A serializable result \n An error \n \n The handler function can receive any number of input parameters, but all input parameters must be\nserializable. The following sample code sets up a   handler that handles the   type of\n current_state : \n func   MyWorkflow ( ctx workflow . Context ,  input  string )   error   { \n    currentState  :=   "started"   // This could be any serializable struct. \n    err  :=  workflow . SetQueryHandler ( ctx ,   "current_state" ,   func ( )   ( string ,   error )   { \n         return  currentState ,   nil \n     } ) \n     if  err  !=   nil   { \n        currentState  =   "failed to register query handler" \n         return  err\n     } \n     // Your normal workflow code begins here, and you update the currentState as the code makes progress. \n    currentState  =   "waiting timer" \n    err  =   NewTimer ( ctx ,  time . Hour ) . Get ( ctx ,   nil ) \n     if  err  !=   nil   { \n        currentState  =   "timer failed" \n         return  err\n     } \n\n    currentState  =   "waiting activity" \n    ctx  =   WithActivityOptions ( ctx ,  myActivityOptions ) \n    err  =   ExecuteActivity ( ctx ,  MyActivity ,   "my_input" ) . Get ( ctx ,   nil ) \n     if  err  !=   nil   { \n        currentState  =   "activity failed" \n         return  err\n     } \n    currentState  =   "done" \n     return   nil \n } \n \n You can now    current_state  by using the  \n cadence-cli --domain samples-domain workflow query -w my_workflow_id -r my_run_id -qt current_state \n You can also issue a   from code using the  QueryWorkflow()  API on a Cadence client object. \n Consistent Query \n  has two consistency levels, eventual and strong. Consider if you were to   a   and then\nimmediately   the  \n cadence-cli --domain samples-domain workflow signal -w my_workflow_id -r my_run_id -n signal_name -if ./input.json \n cadence-cli --domain samples-domain workflow query -w my_workflow_id -r my_run_id -qt current_state \n In this example if   were to change   state,   may or may not see that state update reflected\nin the   result. This is what it means for   to be eventually consistent. \n  has another consistency level called strong consistency. A strongly consistent   is guaranteed\nto be based on   state which includes all   that came before the   was issued. An  \nis considered to have come before a   if the call creating the external   returned success before\nthe   was issued. External   which are created while the   is outstanding may or may not\nbe reflected in the   state the   result is based on. \n In order to run consistent   through the   do the following: \n cadence-cli --domain samples-domain workflow query -w my_workflow_id -r my_run_id -qt current_state --qcl strong \n In order to run a   using the go client do the following: \n resp ,  err  :=  cadenceClient . QueryWorkflowWithOptions ( ctx ,   &amp; client . QueryWorkflowWithOptionsRequest { \n    WorkflowID :             workflowID , \n    RunID :                  runID , \n    QueryType :              queryType , \n    QueryConsistencyLevel :  shared . QueryConsistencyLevelStrong . Ptr ( ) , \n } ) \n \n When using strongly consistent   you should expect higher latency than eventually consistent  . \n'},{title:"Sessions",frontmatter:{layout:"default",title:"Sessions",permalink:"/docs/go-client/sessions",readingShow:"top"},regularPath:"/docs/05-go-client/15-sessions.html",relativePath:"docs/05-go-client/15-sessions.md",key:"v-42c1d89c",path:"/docs/go-client/sessions/",headers:[{level:2,title:"Use Cases",slug:"use-cases"},{level:2,title:"Basic Usage",slug:"basic-usage"},{level:3,title:"Sample Code",slug:"sample-code"},{level:2,title:"Session Metadata",slug:"session-metadata"},{level:2,title:"Concurrent Session Limitation",slug:"concurrent-session-limitation"},{level:2,title:"Recreate Session",slug:"recreate-session"},{level:2,title:"Q & A",slug:"q-a"},{level:3,title:"Is there a complete example?",slug:"is-there-a-complete-example"},{level:3,title:"What happens to my activity if the worker dies?",slug:"what-happens-to-my-activity-if-the-worker-dies"},{level:3,title:"Is the concurrent session limitation per process or per host?",slug:"is-the-concurrent-session-limitation-per-process-or-per-host"},{level:2,title:"Future Work",slug:"future-work"}],content:" Sessions \n The session framework provides a straightforward interface for scheduling multiple   on a single   without requiring you to manually specify the   name. It also includes features like  concurrent session limitation  and  worker failure detection . \n Use Cases \n \n \n File Processing : You may want to implement a   that can download a file, process it, and then upload the modified version. If these three steps are implemented as three different  , all of them should be executed by the same  . \n \n \n Machine Learning Model Training : Training a machine learning model typically involves three stages: download the data set, optimize the model, and upload the trained parameter. Since the models may consume a large amount of resources (GPU memory for example), the number of models processed on a host needs to be limited. \n Basic Usage \n Before using the session framework to write your   code, you need to configure your   to process sessions. To do that, set the  EnableSessionWorker  field of  worker.Options  to  true  when starting your  . \n The most important APIs provided by the session framework are  workflow.CreateSession()  and  workflow.CompleteSession() . The basic idea is that all the   executed within a session will be processed by the same   and these two APIs allow you to create new sessions and close them after all   finish executing. \n Here's a more detailed description of these two APIs: \n type  SessionOptions  struct   { \n     // ExecutionTimeout: required, no default. \n     //     Specifies the maximum amount of time the session can run. \n    ExecutionTimeout time . Duration\n\n     // CreationTimeout: required, no default. \n     //     Specifies how long session creation can take before returning an error. \n    CreationTimeout  time . Duration\n } \n\n func   CreateSession ( ctx Context ,  sessionOptions  * SessionOptions )   ( Context ,   error ) \n \n CreateSession()  takes in  workflow.Context ,  sessionOptions  and returns a new context which contains metadata information of the created session (referred to as the  session context  below). When it's called, it will check the   name specified in the  ActivityOptions  (or in the  StartWorkflowOptions  if the   name is not specified in  ActivityOptions ), and create the session on one of the   which is polling that  . \n The returned session context should be used to execute all   belonging to the session. The context will be cancelled if the   executing this session dies or  CompleteSession()  is called. When using the returned session context to execute  , a  workflow.ErrSessionFailed  error may be returned if the session framework detects that the   executing this session has died. The failure of your   won't affect the state of the session, so you still need to handle the errors returned from your   and call  CompleteSession()  if necessary. \n CreateSession()  will return an error if the context passed in already contains an open session. If all the   are currently busy and unable to handle new sessions, the framework will keep retrying until the  CreationTimeout  you specified in  SessionOptions  has passed before returning an error (check the  Concurrent Session Limitation  section for more details). \n func   CompleteSession ( ctx Context ) \n \n CompleteSession()  releases the resources reserved on the  , so it's important to call it as soon as you no longer need the session. It will cancel the session context and therefore all the   using that session context. Note that it's safe to call  CompleteSession()  on a failed session, meaning that you can call it from a  defer  function after the session is successfully created. \n Sample Code \n func   FileProcessingWorkflow ( ctx workflow . Context ,  fileID  string )   ( err  error )   { \n    ao  :=  workflow . ActivityOptions { \n        ScheduleToStartTimeout :  time . Second  *   5 , \n        StartToCloseTimeout :     time . Minute , \n     } \n    ctx  =  workflow . WithActivityOptions ( ctx ,  ao ) \n\n    so  :=   &amp; workflow . SessionOptions { \n        CreationTimeout :   time . Minute , \n        ExecutionTimeout :  time . Minute , \n     } \n    sessionCtx ,  err  :=  workflow . CreateSession ( ctx ,  so ) \n     if  err  !=   nil   { \n         return  err\n     } \n     defer  workflow . CompleteSession ( sessionCtx ) \n\n     var  fInfo  * fileInfo\n    err  =  workflow . ExecuteActivity ( sessionCtx ,  downloadFileActivityName ,  fileID ) . Get ( sessionCtx ,   &amp; fInfo ) \n     if  err  !=   nil   { \n         return  err\n     } \n\n     var  fInfoProcessed  * fileInfo\n    err  =  workflow . ExecuteActivity ( sessionCtx ,  processFileActivityName ,   * fInfo ) . Get ( sessionCtx ,   &amp; fInfoProcessed ) \n     if  err  !=   nil   { \n         return  err\n     } \n\n     return  workflow . ExecuteActivity ( sessionCtx ,  uploadFileActivityName ,   * fInfoProcessed ) . Get ( sessionCtx ,   nil ) \n } \n Session Metadata \n type  SessionInfo  struct   { \n     // A unique ID for the session \n    SessionID          string \n\n     // The hostname of the worker that is executing the session \n    HostName           string \n\n     // ... other unexported fields \n } \n\n func   GetSessionInfo ( ctx Context )   * SessionInfo\n \n The session context also stores some session metadata, which can be retrieved by the  GetSessionInfo()  API. If the context passed in doesn't contain any session metadata, this API will return a  nil  pointer. \n Concurrent Session Limitation \n To limit the number of concurrent sessions running on a  , set the  MaxConcurrentSessionExecutionSize  field of  worker.Options  to the desired value. By default this field is set to a very large value, so there's no need to manually set it if no limitation is needed. \n If a   hits this limitation, it won't accept any new  CreateSession()  requests until one of the existing sessions is completed.  CreateSession()  will return an error if the session can't be created within  CreationTimeout . \n Recreate Session \n For long-running sessions, you may want to use the  ContinueAsNew  feature to split the   into multiple runs when all   need to be executed by the same  . The  RecreateSession()   API is designed for such a use case. \n func   RecreateSession ( ctx Context ,  recreateToken  [ ] byte ,  sessionOptions  * SessionOptions )   ( Context ,   error ) \n \n Its usage is the same as  CreateSession()  except that it also takes in a  recreateToken , which is needed to create a new session on the same   as the previous one. You can get the token by calling the  GetRecreateToken()  method of the  SessionInfo  object. \n token  :=  workflow . GetSessionInfo ( sessionCtx ) . GetRecreateToken ( ) \n Q &amp; A \n Is there a complete example? \n Yes, the  file processing example  in the cadence-sample repo has been updated to use the session framework. \n What happens to my activity if the worker dies? \n If your   has already been scheduled, it will be cancelled. If not, you will get a  workflow.ErrSessionFailed  error when you call  workflow.ExecuteActivity() . \n Is the concurrent session limitation per process or per host? \n It's per   process, so make sure there's only one   process running on the host if you plan to use that feature. \n Future Work \n \n \n Support automatic session re-establishing \nRight now a session is considered failed if the   process dies. However, for some use cases, you may only care whether   host is alive or not. For these uses cases, the session should be automatically re-established if the   process is restarted. \n \n \n Support fine-grained concurrent session limitation \nThe current implementation assumes that all sessions are consuming the same type of resource and there's only one global limitation. Our plan is to allow you to specify what type of resource your session will consume and enforce different limitations on different types of resources. \n \n \n"},{title:"Async activity completion",frontmatter:{layout:"default",title:"Async activity completion",permalink:"/docs/go-client/activity-async-completion",readingShow:"top"},regularPath:"/docs/05-go-client/12-activity-async-completion.html",relativePath:"docs/05-go-client/12-activity-async-completion.md",key:"v-e1f9b0cc",path:"/docs/go-client/activity-async-completion/",content:' Asynchronous activity completion \n There are certain scenarios when completing an   upon completion of its function is not possible\nor desirable. For example, you might have an application that requires user input in order to complete\nthe  . You could implement the   with a polling mechanism, but a simpler and less\nresource-intensive implementation is to asynchronously complete a Cadence  . \n There two parts to implementing an asynchronously completed activity: \n \n The   provides the information necessary for completion from an external system and notifies\nthe Cadence service that it is waiting for that outside callback. \n The external service calls the Cadence service to complete the  . \n \n The following example demonstrates the first part: \n // Retrieve the activity information needed to asynchronously complete the activity. \nactivityInfo  :=  cadence . GetActivityInfo ( ctx ) \ntaskToken  :=  activityInfo . TaskToken\n\n // Send the taskToken to the external service that will complete the activity. \n ... \n\n // Return from the activity a function indicating that Cadence should wait for an async completion \n // message. \n return   "" ,  activity . ErrResultPending\n \n The following code demonstrates how to complete the   successfully: \n // Instantiate a Cadence service client. \n // The same client can be used to complete or fail any number of activities. \ncadence . Client client  =  cadence . NewClient ( ... ) \n\n // Complete the activity. \nclient . CompleteActivity ( taskToken ,  result ,   nil ) \n \n To fail the  , you would do the following: \n // Fail the activity. \nclient . CompleteActivity ( taskToken ,   nil ,  err ) \n \n Following are the parameters of the  CompleteActivity  function: \n \n taskToken : The value of the binary  TaskToken  field of the  ActivityInfo  struct retrieved inside\nthe  . \n result : The return value to record for the  . The type of this value must match the type\nof the return value declared by the   function. \n err : The error code to return if the   terminates with an error. \n \n If  error  is not null, the value of the  result  field is ignored. \n'},{title:"Tracing and context propagation",frontmatter:{layout:"default",title:"Tracing and context propagation",permalink:"/docs/go-client/tracing",readingShow:"top"},regularPath:"/docs/05-go-client/17-tracing.html",relativePath:"docs/05-go-client/17-tracing.md",key:"v-960c64bc",path:"/docs/go-client/tracing/",headers:[{level:2,title:"Tracing",slug:"tracing"},{level:2,title:"Context Propagation",slug:"context-propagation"},{level:3,title:"Server-Side Headers Support",slug:"server-side-headers-support"},{level:3,title:"Context Propagators",slug:"context-propagators"},{level:2,title:"Q & A",slug:"q-a"},{level:3,title:"Is there a complete example?",slug:"is-there-a-complete-example"},{level:3,title:"Can I configure multiple context propagators?",slug:"can-i-configure-multiple-context-propagators"}],content:" Tracing and context propagation \n Tracing \n The Go client provides distributed tracing support through  OpenTracing . Tracing can be\nconfigured by providing an  opentracing.Tracer \nimplementation in  ClientOptions \nand  WorkerOptions  during client and   instantiation,\nrespectively. Tracing allows\nyou to view the call graph of a   along with its  , child   etc. For more details on how to\nconfigure and leverage tracing, see the  OpenTracing documentation .\nThe OpenTracing support has been validated using  Jaeger , but other implementations\nmentioned  here  should also work. Tracing support utilizes generic context\npropagation support provided by the client. \n Context Propagation \n We provide a standard way to propagate custom context across a  .\n ClientOptions  and  WorkerOptions \nallow configuring a context propagator. The context propagator extracts and passes on information present in the  context.Context \nand  workflow.Context  objects across the  . Once a context propagator is configured, you should be able to access the required values\nin the context objects as you would normally do in Go.\nFor a sample, the Go client implements a  tracing context propagator . \n Server-Side Headers Support \n On the server side, Cadence provides a mechanism to propagate what it calls headers across different  \ntransitions. \n struct  Header  { \n     10 :  optional  map &lt; string ,  binary >  fields\n } \n \n The client leverages this to pass around selected context information.  HeaderReader \nand  HeaderWriter  are interfaces\nthat allow reading and writing to the Cadence server headers. The client already provides  implementations \nfor these.  HeaderWriter  sets a field in the header. Headers is a map, so setting a value for the the same key\nmultiple times will overwrite the previous values.  HeaderReader  iterates through the headers map and runs the\nprovided handler function on each key/value pair, allowing you to deal with the fields you are interested in. \n type  HeaderWriter  interface   { \n     Set ( string ,   [ ] byte ) \n } \n\n type  HeaderReader  interface   { \n     ForEachKey ( handler  func ( string ,   [ ] byte )   error )   error \n } \n Context Propagators \n Context propagators require implementing the following four methods to propagate selected context across a workflow: \n \n Inject  is meant to pick out the context keys of interest from a Go  context.Context  object and write that into the\nheaders using the  HeaderWriter  interface \n InjectFromWorkflow  is the same as above, but operates on a  workflow.Context  object \n Extract  reads the headers and places the information of interest back into the  context.Context  object \n ExtractToWorkflow  is the same as above, but operates on a  workflow.Context  object \n \n The  tracing context propagator \nshows a sample implementation of context propagation. \n type  ContextPropagator  interface   { \n     Inject ( context . Context ,  HeaderWriter )   error \n\n     Extract ( context . Context ,  HeaderReader )   ( context . Context ,   error ) \n\n     InjectFromWorkflow ( Context ,  HeaderWriter )   error \n\n     ExtractToWorkflow ( Context ,  HeaderReader )   ( Context ,   error ) \n } \n Q &amp; A \n Is there a complete example? \n The  context propagation sample \nconfigures a custom context propagator and shows context propagation of custom keys across a   and an  . \n Can I configure multiple context propagators? \n Yes, we recommended that you configure multiple context propagators with each propagator meant to propagate a particular type of context. \n"},{title:"Versioning",frontmatter:{layout:"default",title:"Versioning",permalink:"/docs/go-client/workflow-versioning",readingShow:"top"},regularPath:"/docs/05-go-client/14-workflow-versioning.html",relativePath:"docs/05-go-client/14-workflow-versioning.md",key:"v-f4212488",path:"/docs/go-client/workflow-versioning/",headers:[{level:2,title:"workflow.GetVersion()",slug:"workflow-getversion"},{level:2,title:"Sanity checking",slug:"sanity-checking"}],content:' Versioning \n The definition code of a Cadence   must be deterministic because Cadence uses   sourcing\nto reconstruct the   state by replaying the saved history   data on the  \ndefinition code. This means that any incompatible update to the   definition code could cause\na non-deterministic issue if not handled correctly. \n workflow.GetVersion() \n Consider the following   definition: \n func   MyWorkflow ( ctx workflow . Context ,  data  string )   ( string ,   error )   { \n    ao  :=  workflow . ActivityOptions { \n        ScheduleToStartTimeout :  time . Minute , \n        StartToCloseTimeout :     time . Minute , \n     } \n    ctx  =  workflow . WithActivityOptions ( ctx ,  ao ) \n     var  result1  string \n    err  :=  workflow . ExecuteActivity ( ctx ,  ActivityA ,  data ) . Get ( ctx ,   &amp; result1 ) \n     if  err  !=   nil   { \n         return   "" ,  err\n     } \n     var  result2  string \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityB ,  result1 ) . Get ( ctx ,   &amp; result2 ) \n     return  result2 ,  err\n } \n \n Now let\'s say we have replaced ActivityA with ActivityC, and deployed the updated code. If there\nis an existing   that was started by the original version of the   code, where\nActivityA had already completed and the result was recorded to history, the new version of the  \ncode will pick up that   and try to resume from there. However, the   will fail\nbecause the new code expects a result for ActivityC from the history data, but instead it gets the\nresult for ActivityA. This causes the   to fail on the non-deterministic error. \n Thus we use  workflow.GetVersion(). \n var  err  error \nv  :=  workflow . GetVersion ( ctx ,   "Step1" ,  workflow . DefaultVersion ,   1 ) \n if  v  ==  workflow . DefaultVersion  { \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityA ,  data ) . Get ( ctx ,   &amp; result1 ) \n }   else   { \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityC ,  data ) . Get ( ctx ,   &amp; result1 ) \n } \n if  err  !=   nil   { \n     return   "" ,  err\n } \n\n var  result2  string \nerr  =  workflow . ExecuteActivity ( ctx ,  ActivityB ,  result1 ) . Get ( ctx ,   &amp; result2 ) \n return  result2 ,  err\n \n When  workflow.GetVersion()  is run for the new  , it records a marker in the  \nhistory so that all future calls to  GetVersion  for this change ID-- Step 1  in the example--on this\n  will always return the given version number, which is  1  in the example. \n If you make an additional change, such as replacing ActivityC with ActivityD, you need to\nadd some additional code: \n v  :=  workflow . GetVersion ( ctx ,   "Step1" ,  workflow . DefaultVersion ,   2 ) \n if  v  ==  workflow . DefaultVersion  { \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityA ,  data ) . Get ( ctx ,   &amp; result1 ) \n }   else   if  v  ==   1   { \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityC ,  data ) . Get ( ctx ,   &amp; result1 ) \n }   else   { \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityD ,  data ) . Get ( ctx ,   &amp; result1 ) \n } \n \n Note that we have changed  maxSupported  from 1 to 2. A   that had already passed this\n GetVersion()  call before it was introduced will return  DefaultVersion . A   that was run\nwith  maxSupported  set to 1, will return 1. New   will return 2. \n After you are sure that all of the   prior to version 1 have completed, you can\nremove the code for that version. It should now look like the following: \n v  :=  workflow . GetVersion ( ctx ,   "Step1" ,   1 ,   2 ) \n if  v  ==   1   { \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityC ,  data ) . Get ( ctx ,   &amp; result1 ) \n }   else   { \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityD ,  data ) . Get ( ctx ,   &amp; result1 ) \n } \n \n You\'ll note that  minSupported  has changed from  DefaultVersion  to  1 . If an older version of the\n  history is replayed on this code, it will fail because the minimum expected version\nis 1. After you are sure that all of the   for version 1 have completed, then you\ncan remove 1 so that your code would look like the following: \n _   :=  workflow . GetVersion ( ctx ,   "Step1" ,   2 ,   2 ) \nerr  =  workflow . ExecuteActivity ( ctx ,  ActivityD ,  data ) . Get ( ctx ,   &amp; result1 ) \n \n Note that we have preserved the call to  GetVersion() . There are two reasons to preserve this call: \n \n This ensures that if there is a   still running for an older version, it will\nfail here and not proceed. \n If you need to make additional changes for  Step1 , such as changing ActivityD to ActivityE, you\nonly need to update  maxVersion  from 2 to 3 and branch from there. \n \n You only need to preserve the first call to  GetVersion()  for each  changeID . All subsequent calls to\n GetVersion()  with the same change ID are safe to remove. If necessary, you can remove the first\n GetVersion()  call, but you need to ensure the following: \n \n All executions with an older version are completed. \n You can no longer use  Step1  for the changeID. If you need to make changes to that same part in\nthe future, such as change from ActivityD to ActivityE, you would need to use a different changeID\nlike  Step1-fix2 , and start minVersion from DefaultVersion again. The code would look like the\nfollowing: \n \n v  :=  workflow . GetVersion ( ctx ,   "Step1-fix2" ,  workflow . DefaultVersion ,   1 ) \n if  v  ==  workflow . DefaultVersion  { \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityD ,  data ) . Get ( ctx ,   &amp; result1 ) \n }   else   { \n    err  =  workflow . ExecuteActivity ( ctx ,  ActivityE ,  data ) . Get ( ctx ,   &amp; result1 ) \n } \n \n Upgrading a   is straightforward if you don\'t need to preserve your currently running\n . You can simply terminate all of the currently running   and\nsuspend new ones from being created while you deploy the new version of your   code, which does\nnot use  GetVersion() , and then resume   creation. However, that is often not the case, and\nyou need to take care of the currently running  , so using  GetVersion()  to update\nyour code is the method to use. \n However, if you want your currently running   to proceed based on the current   logic,\nbut you want to ensure new   are running on new logic, you can define your   as a\nnew  WorkflowType , and change your start path (calls to  StartWorkflow() ) to start the new  \ntype. \n Sanity checking \n The Cadence client SDK performs a sanity check to help prevent obvious incompatible changes.\nThe sanity check verifies whether a   made in replay matches the   recorded in history,\nin the same order. The   is generated by calling any of the following methods: \n \n workflow.ExecuteActivity() \n workflow.ExecuteChildWorkflow() \n workflow.NewTimer() \n workflow.Sleep() \n workflow.SideEffect() \n workflow.RequestCancelWorkflow() \n workflow.SignalExternalWorkflow() \n \n Adding, removing, or reordering any of the above methods triggers the sanity check and results in\na non-deterministic error. \n The sanity check does not perform a thorough check. For example, it does not check on the  \'s\ninput arguments or the timer duration. If the check is enforced on every property, then it becomes\ntoo restricted and harder to maintain the   code. For example, if you move your   code\nfrom one package to another package, that changes the  ActivityType , which technically becomes a different\n . But, we don\'t want to fail on that change, so we only check the function name part of the\n ActivityType . \n'},{title:"Introduction",frontmatter:{layout:"default",title:"Introduction",permalink:"/docs/cli",readingShow:"top"},regularPath:"/docs/06-cli/",relativePath:"docs/06-cli/index.md",key:"v-8b4722ea",path:"/docs/cli/",headers:[{level:2,title:"Using the CLI",slug:"using-the-cli"},{level:2,title:"Environment variables",slug:"environment-variables"},{level:2,title:"Quick Start",slug:"quick-start"},{level:3,title:"Domain operation examples",slug:"domain-operation-examples"},{level:3,title:"Workflow operation examples",slug:"workflow-operation-examples"}],content:' Command Line Interface \n The Cadence   is a command-line tool you can use to perform various   on a Cadence server. It can perform\n  operations such as register, update, and describe as well as   operations like start\n , show   history, and    . \n Using the CLI \n The Cadence   can be used directly from the Docker Hub image  ubercadence/cli  or by building the   tool\nlocally. \n Example of using the docker image to describe a  \n docker run --rm ubercadence/cli:master --domain samples-domain domain describe\n \n On Docker versions 18.03 and later, you may get a &quot;connection refused&quot; error. You can work around this by setting the host to &quot;host.docker.internal&quot; (see  here  for more info). \n docker run --rm ubercadence/cli:master --address host.docker.internal:7933 --domain samples-domain domain describe\n \n To build the   tool locally, clone the  Cadence server repo  and run\n make bins . This produces an executable called  cadence . With a local build, the same command to\ndescribe a   would look like this: \n ./cadence --domain samples-domain domain describe\n \n The example commands below will use  ./cadence  for brevity. \n Environment variables \n Setting environment variables for repeated parameters can shorten the   commands. \n \n CADENCE_CLI_ADDRESS  - host:port for Cadence frontend service, the default is for the local server \n CADENCE_CLI_DOMAIN  - default    , so you don\'t need to specify  --domain \n Quick Start \n Run  ./cadence  for help on top level commands and global options\nRun  ./cadence domain  for help on   operations\nRun  ./cadence workflow  for help on   operations\nRun  ./cadence tasklist  for help on tasklist operations\n( ./cadence help ,  ./cadence help [domain|workflow]  will also print help messages) \n Note:  make sure you have a Cadence server running before using  \n Domain operation examples \n \n Register a new   named &quot;samples-domain&quot;: \n \n ./cadence --domain samples-domain domain register --global_domain  false \nOR using short alias \n./cadence --do samples-domain d re --gd  false \n \n \n View &quot;samples-domain&quot; details: \n \n ./cadence --domain samples-domain domain describe\n Workflow operation examples \n The following examples assume the CADENCE_CLI_DOMAIN environment variable is set. \n Run workflow \n Start a   and see its progress. This command doesn\'t finish until   completes. \n ./cadence workflow run --tl helloWorldGroup --wt main.Workflow --et  60  -i  \'"cadence"\' \nview help messages for workflow run \n./cadence workflow run -h\n \n Brief explanation:\nTo run a  , the user must specify the following: \n \n Tasklist name (--tl) \n Workflow type (--wt) \n Execution start to close timeout in seconds (--et) \n Input in JSON format (--i) (optional) \n \n s example uses  this cadence-samples workflow \nand takes a string as input with the  -i \'&quot;cadence&quot;\'  parameter. Single quotes ( \'\' ) are used to wrap input as JSON. \n Note:  You need to start the   so that the   can make progress.\n(Run  make &amp;&amp; ./bin/helloworld -m worker  in cadence-samples to start the  ) \n Show running workers of a tasklist \n ./cadence tasklist desc --tl helloWorldGroup\n Start workflow \n ./cadence workflow start --tl helloWorldGroup --wt main.Workflow --et  60  -i  \'"cadence"\' \nview help messages for workflow start \n./cadence workflow start -h\nfor a workflow with multiple inputs, separate each json with space/newline like \n./cadence workflow start --tl helloWorldGroup --wt main.WorkflowWith3Args --et  60  -i  \'"your_input_string" 123 {"Name":"my-string", "Age":12345}\' \n \n The    start  command is similar to the  run  command, but immediately returns the workflow_id and\nrun_id after starting the  . Use the  show  command to view the  \'s history/progress. \n Reuse the same workflow id when starting/running a workflow \n Use option  --workflowidreusepolicy  or  --wrp  to configure the   reuse policy.\n Option 0 AllowDuplicateFailedOnly:  Allow starting a   using the same   when a   with the same   is not already running and the last execution close state is one of  [terminated, cancelled, timedout, failed] .\n Option 1 AllowDuplicate:  Allow starting a   using the same   when a   with the same   is not already running.\n Option 2 RejectDuplicate:  Do not allow starting a   using the same   as a previous  . \nuse AllowDuplicateFailedOnly option to start a workflow \n./cadence workflow start --tl helloWorldGroup --wt main.Workflow --et  60  -i  \'"cadence"\'  --wid  "&lt;duplicated workflow id>"  --wrp  0 \nuse AllowDuplicate option to run a workflow \n./cadence workflow run --tl helloWorldGroup --wt main.Workflow --et  60  -i  \'"cadence"\'  --wid  "&lt;duplicated workflow id>"  --wrp  1 \n Start a workflow with a memo \n Memos are immutable key/value pairs that can be attached to a   run when starting the  . These are\nvisible when listing  . More information on memos can be found\n here . \n cadence wf start -tl helloWorldGroup -wt main.Workflow -et  60  -i  \'"cadence"\'  -memo_key ‘“Service” “Env” “Instance”’ -memo ‘“serverName1” “test”  5 ’\n Show workflow history \n ./cadence workflow show -w 3ea6b242-b23c-4279-bb13-f215661b4717 -r 866ae14c-88cf-4f1e-980f-571e031d71b0\na shortcut of this is (without -w -r flag) \n./cadence workflow showid 3ea6b242-b23c-4279-bb13-f215661b4717 866ae14c-88cf-4f1e-980f-571e031d71b0\nif run_id is not provided, it will show the latest run history of that workflow_id \n./cadence workflow show -w 3ea6b242-b23c-4279-bb13-f215661b4717\na shortcut of this is \n./cadence workflow showid 3ea6b242-b23c-4279-bb13-f215661b4717\n Show workflow execution information \n ./cadence workflow describe -w 3ea6b242-b23c-4279-bb13-f215661b4717 -r 866ae14c-88cf-4f1e-980f-571e031d71b0\na shortcut of this is (without -w -r flag) \n./cadence workflow describeid 3ea6b242-b23c-4279-bb13-f215661b4717 866ae14c-88cf-4f1e-980f-571e031d71b0\nif run_id is not provided, it will show the latest workflow execution of that workflow_id \n./cadence workflow describe -w 3ea6b242-b23c-4279-bb13-f215661b4717\na shortcut of this is \n./cadence workflow describeid 3ea6b242-b23c-4279-bb13-f215661b4717\n List closed or open workflow executions \n ./cadence workflow list\ndefault will only show one page, to view more items, use --more flag \n./cadence workflow list -m\n \n Use  --query  to list   with SQL like  \n ./cadence workflow list --query  "WorkflowType=\'main.SampleParentWorkflow\' AND CloseTime = missing " \n \n This will return all open   with workflowType as &quot;main.SampleParentWorkflow&quot;. \n Query workflow execution \nuse custom query type \n./cadence workflow query -w  &lt; wid >  -r  &lt; rid >  --qt  &lt; query-type > \nuse build-in query type "__stack_trace" which is supported by Cadence client library \n./cadence workflow query -w  &lt; wid >  -r  &lt; rid >  --qt __stack_trace\na shortcut to query using __stack_trace is (without --qt flag) \n./cadence workflow stack -w  &lt; wid >  -r  &lt; rid > \n Signal, cancel, terminate workflow \nsignal \n./cadence workflow signal -w  &lt; wid >  -r  &lt; rid >  -n  &lt; signal-name >  -i  \'"signal-value"\' \ncancel \n./cadence workflow cancel -w  &lt; wid >  -r  &lt; rid > \nterminate \n./cadence workflow terminate -w  &lt; wid >  -r  &lt; rid >  --reason\n \n Terminating a running   will record a WorkflowExecutionTerminated   as the closing   in the history. No more   will be scheduled for a terminated  .\nCanceling a running   will record a WorkflowExecutionCancelRequested   in the history, and a new   will be scheduled. The   has a chance to do some clean up work after cancellation. \n Signal, cancel, terminate workflows as a batch job \n Batch job is based on List Workflow Query( --query ). It supports  , cancel and terminate as batch job type.\nFor terminating   as batch job, it will terminte the children recursively. \n Start a batch job(using   as batch type): \n cadence --do samples-domain wf batch start --query  "WorkflowType=\'main.SampleParentWorkflow\' AND CloseTime=missing"  --reason  "test"  --bt signal --sig testname\nThis batch job will be operating on  5  workflows.\nPlease confirm [ Yes/No ] :yes\n { \n     "jobID" :   "&lt;batch-job-id>" ,\n     "msg" :   "batch job is started" \n } \n\n \n You need to remember the JobID or use List command to get all your batch jobs: \n cadence --do samples-domain wf batch list\n \n Describe the progress of a batch job: \n cadence --do samples-domain wf batch desc -jid  &lt; batch-job-id > \n \n Terminate a batch job: \n cadence --do samples-domain wf batch terminate -jid  &lt; batch-job-id > \n \n Note that the operation performed by a batch will not be rolled back by terminating the batch. However, you can use reset to rollback your  . \n Restart, reset workflow \n The Reset command allows resetting a   to a particular point and continue running from there.\nThere are a lot of use cases: \n \n Rerun a failed   from the beginning with the same start parameters. \n Rerun a failed   from the failing point without losing the achieved progress(history). \n After deploying new code, reset an open   to let the   run to different flows. \n \n You can reset to some predefined   types: \n ./cadence workflow reset -w  &lt; wid >  -r  &lt; rid >  --reset_type  &lt; reset_type >  --reason  "some_reason" \n \n \n FirstDecisionCompleted: reset to the beginning of the history. \n LastDecisionCompleted: reset to the end of the history. \n LastContinuedAsNew: reset to the end of the history for the previous run. \n \n If you are familiar with the Cadence history  , You can also reset to any   finish   by using: \n ./cadence workflow reset -w  &lt; wid >  -r  &lt; rid >  --event_id  &lt; decision_finish_event_id >  --reason  "some_reason" \n \n Some things to note: \n \n When reset, a new run will be kicked off with the same workflowID. But if there is a running execution for the workflow(workflowID), the current run will be terminated. \n decision_finish_event_id is the ID of   of the type: DecisionTaskComplete/DecisionTaskFailed/DecisionTaskTimeout. \n To restart a   from the beginning, reset to the first   finish  . \n \n To reset multiple  , you can use batch reset command: \n ./cadence workflow reset-batch --input_file  &lt; file_of_workflows_to_reset >  --reset_type  &lt; reset_type >  --reason  "some_reason" \n Recovery from bad deployment -- auto-reset workflow \n If a bad deployment lets a   run into a wrong state, you might want to reset the   to the point that the bad deployment started to run. But usually it is not easy to find out all the   impacted, and every reset point for each  . In this case, auto-reset will automatically reset all the   given a bad deployment identifier. \n Let\'s get familiar with some concepts. Each deployment will have an identifier, we call it &quot; Binary Checksum &quot; as it is usually generated by the md5sum of a binary file. For a  , each binary checksum will be associated with an  auto-reset point , which contains a  runID , an  eventID , and the  created_time  that binary/deployment made the first   for the  . \n To find out which  binary checksum  of the bad deployment to reset, you should be aware of at least one   running into a bad state. Use the describe command with  --reset_points_only  option to show all the reset points: \n ./cadence wf desc -w  &lt; WorkflowID >   --reset_points_only\n+----------------------------------+--------------------------------+--------------------------------------+---------+\n |          BINARY CHECKSUM           |           CREATE TIME            |                 RUNID                  |  EVENTID  | \n+----------------------------------+--------------------------------+--------------------------------------+---------+\n |  c84c5afa552613a83294793f4e664a7f  |   2019 -05-24  10 :01:00.398455019   |  2dd29ab7-2dd8-4668-83e0-89cae261cfb1  |         4   | \n |  aae748fdc557a3f873adbe1dd066713f  |   2019 -05-24  11 :01:00.067691445   |  d42d21b8-2adb-4313-b069-3837d44d6ce6  |         4   | \n .. .\n .. .\n \n Then use this command to tell Cadence to auto-reset all   impacted by the bad deployment. The command will store the bad binary checksum into   info and trigger a process to reset all your  . \n ./cadence --do  &lt; YourDomainName >  domain update --add_bad_binary aae748fdc557a3f873adbe1dd066713f  --reason  "rollback bad deployment" \n \n As you add the bad binary checksum to your  , Cadence will not dispatch any   to the bad binary. So make sure that you have rolled back to a good deployment(or roll out new bits with bug fixes). Otherwise your   can\'t make any progress after auto-reset. \n'},{title:"Distributed CRON",frontmatter:{layout:"default",title:"Distributed CRON",permalink:"/docs/go-client/distributed-cron",readingShow:"top"},regularPath:"/docs/05-go-client/16-distributed-cron.html",relativePath:"docs/05-go-client/16-distributed-cron.md",key:"v-66806f72",path:"/docs/go-client/distributed-cron/",headers:[{level:2,title:"Convert existing cron workflow",slug:"convert-existing-cron-workflow"},{level:2,title:"Retrieve last successful result",slug:"retrieve-last-successful-result"}],content:" Distributed CRON \n It is relatively straightforward to turn any Cadence   into a Cron  . All you need\nis to supply a cron schedule when starting the   using the CronSchedule\nparameter of\n StartWorkflowOptions . \n You can also start a   using the Cadence   with an optional cron schedule using the  --cron  argument. \n For   with CronSchedule: \n \n Cron schedule is based on UTC time. For example cron schedule &quot;15 8 * * *&quot;\nwill run daily at 8:15am UTC. \n If a   failed and a RetryPolicy is supplied to the StartWorkflowOptions\nas well, the   will retry based on the RetryPolicy. While the   is\nretrying, the server will not schedule the next cron run. \n Cadence server only schedules the next cron run after the current run is\ncompleted. If the next schedule is due while a   is running (or retrying),\nthen it will skip that schedule. \n Cron   will not stop until they are terminated or cancelled. \n \n Cadence supports the standard cron spec: \n // CronSchedule - Optional cron schedule for workflow. If a cron schedule is specified, the workflow will run \n // as a cron based on the schedule. The scheduling will be based on UTC time. The schedule for next run only happen \n // after the current run is completed/failed/timeout. If a RetryPolicy is also supplied, and the workflow failed \n // or timed out, the workflow will be retried based on the retry policy. While the workflow is retrying, it won't \n // schedule its next run. If next schedule is due while the workflow is running (or retrying), then it will skip that \n // schedule. Cron workflow will not stop until it is terminated or cancelled (by returning cadence.CanceledError). \n // The cron spec is as following: \n // ┌───────────── minute (0 - 59) \n // │ ┌───────────── hour (0 - 23) \n // │ │ ┌───────────── day of the month (1 - 31) \n // │ │ │ ┌───────────── month (1 - 12) \n // │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday) \n // │ │ │ │ │ \n // │ │ │ │ │ \n // * * * * * \nCronSchedule  string \n \n The  crontab guru site  is useful for testing your cron expressions. \n Convert existing cron workflow \n Before CronSchedule was available, the previous approach to implementing cron\n  was to use a delay timer as the last step and then return\n ContinueAsNew . One problem with that implementation is that if the  \nfails or times out, the cron would stop. \n To convert those   to make use of Cadence CronSchedule, all you need is to\nremove the delay timer and return without using\n ContinueAsNew . Then start the   with the desired CronSchedule. \n Retrieve last successful result \n Sometimes it is useful to obtain the progress of previous successful runs.\nThis is supported by two new APIs in the client library:\n HasLastCompletionResult  and  GetLastCompletionResult . Below is an example of how\nto use this in Go: \n func   CronWorkflow ( ctx workflow . Context )   ( CronResult ,   error )   { \n    startTimestamp  :=  time . Time { }   // By default start from 0 time. \n     if  workflow . HasLastCompletionResult ( ctx )   { \n         var  progress CronResult\n         if  err  :=  workflow . GetLastCompletionResult ( ctx ,   &amp; progress ) ;  err  ==   nil   { \n            startTimestamp  =  progress . LastSyncTimestamp\n         } \n     } \n    endTimestamp  :=  workflow . Now ( ctx ) \n\n     // Process work between startTimestamp (exclusive), endTimestamp (inclusive). \n     // Business logic implementation goes here. \n\n    result  :=  CronResult { LastSyncTimestamp :  endTimestamp } \n     return  result ,   nil \n } \n \n Note that this works even if one of the cron schedule runs failed. The\nnext schedule will still get the last successful result if it ever successfully\ncompleted at least once. For example, for a daily cron  , if the first day\nrun succeeds and the second day fails, then the third day run will still get\nthe result from first day's run using these APIs. \n"},{title:"MIT License",frontmatter:{layout:"default",title:"MIT License",permalink:"/docs/about/license",readingShow:"top"},regularPath:"/docs/07-about/01-license.html",relativePath:"docs/07-about/01-license.md",key:"v-4e8ba26c",path:"/docs/about/license/",content:" MIT License \n Copyright (c) 2017 Uber Technologies, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the &quot;Software&quot;), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n \n "},{title:"Introduction",frontmatter:{layout:"default",title:"Introduction",permalink:"/docs/go-client",readingShow:"top"},regularPath:"/docs/05-go-client/",relativePath:"docs/05-go-client/index.md",key:"v-e357342a",path:"/docs/go-client/",headers:[{level:2,title:"Overview",slug:"overview"},{level:2,title:"Links",slug:"links"}],content:" Go client \n Overview \n Go client attempts to follow Go language conventions. The conversion of a Go program to the fault-oblivious   function is expected to be pretty mechanical. \n Cadence requires determinism of the   code. It supports deterministic execution of the multithreaded code and constructs like  select  that are non-deterministic by Go design. The Cadence solution is to provide corresponding constructs in the form of interfaces that have similar capability but support deterministic execution. \n For example, instead of native Go channels,   code must use the  workflow.Channel  interface. Instead of  select , the  workflow.Selector  interface must be used. \n For more information, see  Creating Workflows . \n Links \n \n GitHub project:  https://github.com/uber-go/cadence-client \n Samples:  https://github.com/samarabbas/cadence-samples \n GoDoc documentation:  https://godoc.org/go.uber.org/cadence \n \n"},{title:"Contact us",frontmatter:{layout:"default",title:"Contact us",permalink:"/docs/about",readingShow:"top"},regularPath:"/docs/07-about/",relativePath:"docs/07-about/index.md",key:"v-5b1f6c4b",path:"/docs/about/",content:" Contact us \n If you have a question, check whether it is already answered at stackoverflow under  cadence-workflow  tag. \n If you still need help, visit  . \n If you have a feature request or a bug to report file an issue against one of the Cadence github repositories: \n \n Cadence Service and CLI \n Cadence Go Client \n Cadence Go Client Samples \n Cadence Java Client \n Cadence Java Client Samples \n Cadence Web UI \n \n"},{title:"Introduction",frontmatter:{layout:"default",title:"Introduction",description:"A large number of use cases span beyond a single request-reply, require tracking of a complex state, respond to asynchronous events, and communicate to external unreliable dependencies.",permalink:"/docs/cadence/",readingShow:"top"},regularPath:"/docs/cadence.html",relativePath:"docs/cadence.md",key:"v-3da8b178",path:"/docs/cadence/",content:" Overview \n A large number of use cases span beyond a single request-reply, require tracking\nof a complex state, respond to asynchronous  , and communicate to external unreliable dependencies.\nThe usual approach to building such applications is a hodgepodge of stateless services,\ndatabases, cron jobs, and queuing systems. This negatively impacts the developer productivity as most of the code is\ndedicated to plumbing, obscuring the actual business logic behind a myriad of low-level details. Such systems frequently have availability problems as it is hard to keep all the components healthy. \n The Cadence solution is a  fault-oblivious stateful  programming model  that obscures most of the complexities of building scalable distributed applications. In essence, Cadence provides a durable virtual memory that is not\nlinked to a specific process, and preserves the full application state, including function stacks, with local variables across all sorts of host and software failures.\nThis allows you to write code using the full power of a programming language while Cadence takes care of durability, availability, and scalability of the application. \n Cadence consists of a programming framework (or client library) and a managed service (or backend).\nThe framework enables developers to author and coordinate   in familiar languages\n( Go  and  Java \nare supported today with some projects in  Python  and\n C# \nvia a  proxy \nin development). \n The framework enables developers to author fault-oblivious code in familiar languages.\n( Go  and  Java \nare in production.  Python  and\n C#  are under development). \n The backend service is stateless and relies on a persistent store. Currently, Cassandra and MySQL stores\nare supported. An adapter to any other database that provides multi-row single shard transactions\ncan be added. There are different service deployment models. At Uber, our team operates multitenant clusters\nthat are shared by hundreds of applications. \n Watch Maxim's talk from the Uber Open Summit for an introduction to the Cadence programming model and value proposition. \n \n   \n \n The GitHub repo for the Cadence server is  uber/cadence . The docker\nimage for the Cadence server is available on Docker Hub at\n ubercadence/server . \n"},{title:"Home",frontmatter:{home:!0,heroText:"Fault-Tolerant Stateful Code Platform",tagline:"Focus on your business logic and let Cadence take care of the complexity of distributed systems",actionText:"Get Started →",actionLink:"/docs/java-client/quick-start/",footer:"© 2020 Uber Technologies, Inc.",readingShow:"top"},regularPath:"/",relativePath:"index.md",key:"v-62db476a",path:"/",content:" \n   \n     Easy to use \n     \n       \n         \n       \n       \n         Workflows provide primitives to allow application developers to express complex business logic as code. \n         The underlying platform abstracts scalability, reliability and availability concerns from individual developers/teams. \n       \n     \n   \n \n \n   \n     Fault tolerant \n     \n       \n         Cadence enables writing stateful applications without worrying about the complexity of handling process failures. \n         Cadence preserves complete multithreaded application state including thread stacks with local variables across hardware and software failures. \n       \n       \n         \n       \n     \n   \n \n \n   \n     Scalable & Reliable \n     \n       \n         \n       \n       \n         Cadence is designed to scale out horizontally to handle millions of concurrent workflows. \n         Cadence provides out-of-the-box asynchronous history event replication that can help you recover from zone failures. \n       \n     \n   \n \n"}],themeConfig:{docsDir:"/docs",logo:"/img/logo-white.svg",nav:[{text:"Docs",items:[{text:"Cadence",link:"/docs/cadence/"},{text:"Use cases",link:"/docs/use-cases/"},{text:"Concepts",link:"/docs/concepts/"},{text:"Tutorials",link:"/docs/tutorials/"},{text:"Java client",link:"/docs/java-client/"},{text:"Go client",link:"/docs/go-client/"},{text:"Command line interface",link:"/docs/cli/"},{text:"Glossary",link:"/GLOSSARY"},{text:"About",link:"/docs/about/"}]},{text:"Client",items:[{text:"Java Docs",link:"https://www.javadoc.io/doc/com.uber.cadence/cadence-client"},{text:"Java Client",link:"https://mvnrepository.com/artifact/com.uber.cadence/cadence-client"},{text:"Go Docs",link:"https://godoc.org/go.uber.org/cadence"},{text:"Go Client",link:"https://github.com/uber-go/cadence-client/releases/latest"}]},{text:"Community",items:[{text:"Slack",link:"https://join.slack.com/t/uber-cadence/shared_invite/zt-hfiuvlkj-Zv24Niao7L5aMV_8AlmnOA"},{text:"StackOverflow",link:"https://stackoverflow.com/questions/tagged/cadence-workflow"}]},{text:"GitHub",items:[{text:"Cadence Service and CLI",link:"https://github.com/uber/cadence"},{text:"Cadence Go Client",link:"https://github.com/uber-go/cadence-client"},{text:"Cadence Go Client Samples",link:"https://github.com/uber-common/cadence-samples"},{text:"Cadence Java Client",link:"https://github.com/uber-java/cadence-client"},{text:"Cadence Java Client Samples",link:"https://github.com/uber/cadence-java-samples"},{text:"Cadence Web UI",link:"https://github.com/uber/cadence-web"}]},{text:"Docker",items:[{text:"Cadence Service",link:"https://hub.docker.com/r/ubercadence/server/tags"},{text:"Cadence CLI",link:"https://hub.docker.com/r/ubercadence/cli/tags"},{text:"Cadence Web UI",link:"https://hub.docker.com/r/ubercadence/web/tags"}]}],sidebar:{"/docs/":[{title:"Cadence",path:"/docs/cadence"},{title:"Use cases",path:"/docs/01-use-cases",children:["01-use-cases/","01-use-cases/01-periodic-execution","01-use-cases/02-orchestration","01-use-cases/03-polling","01-use-cases/04-event-driven","01-use-cases/05-partitioned-scan","01-use-cases/06-batch-job","01-use-cases/07-provisioning","01-use-cases/08-deployment","01-use-cases/09-operational-management","01-use-cases/10-interactive","01-use-cases/11-dsl","01-use-cases/12-big-ml"]},{title:"Concepts",path:"/docs/02-concepts",children:["02-concepts/","02-concepts/01-workflows","02-concepts/02-activities","02-concepts/03-events","02-concepts/04-queries","02-concepts/05-topology","02-concepts/06-task-lists","02-concepts/07-archival","02-concepts/08-cross-dc-replication","02-concepts/09-search-workflows"]},{title:"Tutorials",path:"/docs/03-video-tutorials",children:["03-video-tutorials/","03-video-tutorials/01-java-hello-world"]},{title:"Java client",path:"/docs/04-java-client",children:["04-java-client/","04-java-client/01-quick-start","04-java-client/02-workflow-interface","04-java-client/03-implementing-workflows","04-java-client/04-starting-workflow-executions","04-java-client/05-activity-interface","04-java-client/06-implementing-activities","04-java-client/07-versioning","04-java-client/08-distributed-cron","04-java-client/09-java-samples"]},{title:"Go client",path:"/docs/05-go-client",children:["05-go-client/","05-go-client/01-workers","05-go-client/02-create-workflows","05-go-client/03-activities","05-go-client/04-execute-activity","05-go-client/05-child-workflows","05-go-client/06-retries","05-go-client/07-error-handling","05-go-client/08-signals","05-go-client/09-continue-as-new","05-go-client/10-side-effect","05-go-client/11-queries","05-go-client/12-activity-async-completion","05-go-client/13-workflow-testing","05-go-client/14-workflow-versioning","05-go-client/15-sessions","05-go-client/16-distributed-cron","05-go-client/17-tracing"]},{title:"Command line interface",path:"/docs/06-cli/"},{title:"Glossary",path:"../GLOSSARY"},{title:"About",path:"/docs/07-about",children:["07-about/","07-about/01-license"]}]}}};n(313);Dr.component("graph-sample",(function(){return Promise.all([n.e(0),n.e(6),n.e(3)]).then(n.bind(null,373))})),Dr.component("slack-link",(function(){return n.e(5).then(n.bind(null,374))})),Dr.component("Badge",(function(){return Promise.all([n.e(0),n.e(4)]).then(n.bind(null,435))}));n(314),n(315);var ls={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:function(){return{scrollTop:null}},computed:{show:function(){return this.scrollTop>this.threshold}},mounted:function(){var e=this;this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",Ka()((function(){e.scrollTop=e.getScrollTop()}),100))},methods:{getScrollTop:function(){return window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0},scrollToTop:function(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},us=(n(316),Object(ns.a)(ls,(function(){var e=this.$createElement,t=this._self._c||e;return t("transition",{attrs:{name:"fade"}},[this.show?t("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[t("g",{attrs:{transform:"translate(-229 -126.358)"}},[t("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),t("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports);n(317);Dr.component("CodeSwitcher",(function(){return n.e(8).then(n.bind(null,375))}));var ds={name:"ReadingProgress",data:function(){return{readingTop:0,readingHeight:1,progressStyle:null,transform:["transform"]}},watch:{$readingShow:function(){this.base()}},mounted:function(){this.base()},beforeDestroy:function(){this.$readingShow&&window.removeEventListener("scroll",this.getReadingBase)},methods:{base:function(){this.$readingShow&&(this.transform=this.getTransform(),this.progressStyle=this.getProgressStyle(),window.addEventListener("scroll",this.getReadingBase,200))},getReadingBase:function(){this.readingHeight=this.getReadingHeight()-this.getScreenHeight(),this.readingTop=this.getReadingTop(),this.progressStyle=this.getProgressStyle()},getReadingHeight:function(){return document.body.scrollHeight||document.body.offsetHeight||0},getScreenHeight:function(){return window.innerHeight||document.documentElement.clientHeight||0},getReadingTop:function(){return window.pageYOffset||document.documentElement.scrollTop||0},getTransform:function(){var e=this;return["transform","-webkit-transform","-moz-transform","-o-transform","-ms-transform"].filter((function(t){return e.supportCss(t)}))},getProgressStyle:function(){var e=this.readingTop/this.readingHeight;switch(this.$readingShow){case"top":case"bottom":return this.transform[0]?"".concat(this.transform[0],": scaleX(").concat(e,")"):"width: ".concat(100*e,"%");case"left":case"right":return this.transform[0]?"".concat(this.transform[0],": scaleY(").concat(e,")"):"height: ".concat(100*e,"%")}},supportCss:function(e){return e in document.createElement("div").style}}},fs=(n(318),Object(ns.a)(ds,(function(){var e=this.$createElement,t=this._self._c||e;return this.$readingShow?t("div",{staticClass:"reading-progress",class:this.$readingShow},[t("div",{staticClass:"progress",style:this.progressStyle})]):this._e()}),[],!1,null,"21b39eda",null).exports);n(185),n(111);function hs(e,t){var n=!0;void 0===e?(e="Term not found in the glossary",n=!1):e=ps(e);var o=n?"":" term-not-found";return t=ms(t),'<a title="'.concat(e,'" class="term').concat(o,'">').concat(t,"</a>")}function ps(e){return e.replace(/:[\w+]*:([\w+]*):/g,(function(e,t){return t})).replace(/:([\w+]*):/g,(function(e,t){return t}))}function ms(e){return e.split("_").join(" ")}function vs(e){return e.split("_").join(" ")}var gs={name:"Term",props:{term:{type:String,required:!0},show:{type:String,required:!1,default:""}},data:function(){return{termNotFound:!1}},computed:{terms:function(){return this.$site.pages.find((function(e){return"/GLOSSARY.html"===e.path})).frontmatter.terms},definition:function(){var e=vs(this.term),t=this.terms[e];return t?ps(t):(this.termNotFound=!0,"Term not found in the glossary")},displayText:function(){return vs(this.show?this.show:this.term)}}},ys=Object(ns.a)(gs,(function(){var e=this.$createElement;return(this._self._c||e)("a",{class:{"term-not-found":this.termNotFound,term:!0},attrs:{title:this.definition}},[this._v(this._s(this.displayText))])}),[],!1,null,null,null).exports,ws={props:{terms:{type:Object,required:!0}},methods:{definition:function(e){return t=e,n=this.terms,n[ms(t)].replace(/:([\w+]*):([\w+]*):/g,(function(e,t,o){return hs(n[ms(t)],o)})).replace(/:([\w+]*):/g,(function(e,t,o){return hs(n[ms(t)],t)}));var t,n}}},bs=(n(319),Object(ns.a)(ws,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("dl",e._l(Object.keys(e.terms),(function(t){return n("div",[n("dt",{staticClass:"defined-term"},[e._v(e._s(t))]),e._v(" "),n("dd",{staticClass:"term-definition",domProps:{innerHTML:e._s(e.definition(t,e.terms))}})])})),0)}),[],!1,null,null,null).exports),ks=[function(e){e.router.addRoutes([{path:"/docs/",redirect:"/docs/cadence"}])},{},function(e){e.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{},function(e){e.Vue.component("BackToTop",us)},{},{},function(e){var t=e.Vue;t.component(fs.name,fs),t.mixin({computed:{$readingShow:function(){return this.$page.frontmatter.readingShow}}})},function(e){e.Vue.component("CodeCopy",os)},function(e){var t=e.Vue;e.options,e.router,e.siteData;t.component("Term",ys),t.component("Glossary",bs)}],xs=["BackToTop","ReadingProgress"];n(184);function Ss(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n(107);function Ts(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Cs(e,t,n){return t&&Ts(e.prototype,t),n&&Ts(e,n),e}n(179);function As(e,t){return(As=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n(180);function Is(e){return(Is=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n(156),n(115);function _s(e,t){return!t||"object"!==wa(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Es(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,o=Is(e);if(t){var r=Is(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return _s(this,n)}}var Os=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&As(e,t)}(n,e);var t=Es(n);function n(){return Ss(this,n),t.apply(this,arguments)}return n}(function(){function e(){Ss(this,e),this.store=new Dr({data:{state:{}}})}return Cs(e,[{key:"$get",value:function(e){return this.store.state[e]}},{key:"$set",value:function(e,t){Dr.set(this.store.state,e,t)}},{key:"$emit",value:function(){var e;(e=this.store).$emit.apply(e,arguments)}},{key:"$on",value:function(){var e;(e=this.store).$on.apply(e,arguments)}}]),e}());Object.assign(Os.prototype,{getPageAsyncComponent:Na,getLayoutAsyncComponent:Ra,getAsyncComponent:La,getVueComponent:Fa});var Ps={install:function(e){var t=new Os;e.$vuepress=t,e.prototype.$vuepress=t}};function js(e){e.beforeEach((function(t,n,o){if(Ws(e,t.path))o();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){var r=t.path.replace(/\/$/,"")+".html";Ws(e,r)?o(r):o()}else o();else{var i=t.path+"/",a=t.path+".html";Ws(e,a)?o(a):Ws(e,i)?o(i):o()}}))}function Ws(e,t){return e.options.routes.filter((function(e){return e.path.toLowerCase()===t.toLowerCase()})).length>0}var Ds={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(e){var t=this.pageKey||this.$parent.$page.key;return qa("pageKey",t),Dr.component(t)||Dr.component(t,Na(t)),Dr.component(t)?e(t):e("")}},Ns={functional:!0,props:{slotKey:String,required:!0},render:function(e,t){var n=t.props,o=t.slots;return e("div",{class:["content__".concat(n.slotKey)]},o()[n.slotKey])}},Rs=(n(321),Object(ns.a)({},(function(e,t){var n=t._c;return n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),t._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})])}),[],!0,null,null,null).exports);function Ls(){return(Ls=r(regeneratorRuntime.mark((function e(t){var n,o,r,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:cs.routerBase||cs.base,js(o=new ga({base:n,mode:"history",fallback:!1,routes:ss,scrollBehavior:function(e,t,n){return n||(e.hash?!Dr.$vuepress.$get("disableScrollBehavior")&&{selector:e.hash}:{x:0,y:0})}})),r={},e.prev=4,e.next=7,Promise.all(ks.filter((function(e){return"function"==typeof e})).map((function(e){return e({Vue:Dr,options:r,router:o,siteData:cs,isServer:t})})));case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(4),console.error(e.t0);case 12:return i=new Dr(Object.assign(r,{router:o,render:function(e){return e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},xs.map((function(t){return e(t)})))])}})),e.abrupt("return",{app:i,router:o});case 14:case"end":return e.stop()}}),e,null,[[4,9]])})))).apply(this,arguments)}Dr.config.productionTip=!1,Dr.use(ga),Dr.use(Ps),Dr.mixin(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Dr;ya(t),n.$vuepress.$set("siteData",t);var o=e(n.$vuepress.$get("siteData")),r=new o,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),a={};return Object.keys(i).reduce((function(e,t){return t.startsWith("$")&&(e[t]=i[t].get),e}),a),{computed:a}}((function(e){return function(){function t(){Ss(this,t)}return Cs(t,[{key:"setPage",value:function(e){this.__page=e}},{key:"$site",get:function(){return e}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var e,t,n=this.$site.locales,o=void 0===n?{}:n;for(var r in o)"/"===r?t=o[r]:0===this.$page.path.indexOf(r)&&(e=o[r]);return e||t||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$title",get:function(){var e=this.$page,t=this.$page.frontmatter.metaTitle;if("string"==typeof t)return t;var n=this.$siteTitle,o=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?o?o+" | "+n:n:o||"VuePress"}},{key:"$description",get:function(){var e=function(e){if(e){var t=e.filter((function(e){return"description"===e.name}))[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(e,t){for(var n=0;n<e.length;n++){var o=e[n];if(o.path.toLowerCase()===t.toLowerCase())return o}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),t}()}),cs)),Dr.component("Content",Ds),Dr.component("ContentSlotsDistributor",Ns),Dr.component("OutboundLink",Rs),Dr.component("ClientOnly",{functional:!0,render:function(e,t){var n=t.parent,o=t.children;if(n._isMounted)return o;n.$once("hook:mounted",(function(){n.$forceUpdate()}))}}),Dr.component("Layout",Ra("Layout")),Dr.component("NotFound",Ra("NotFound")),Dr.prototype.$withBase=function(e){var t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.5.0",hash:"4e78fc9c"},function(e){return Ls.apply(this,arguments)}(!1).then((function(e){var t=e.app;e.router.onReady((function(){t.$mount("#app")}))}))}]);